{"file_contents":{"DATABASE_SETUP.md":{"content":"# Database Setup and Content Guide\n\nThis guide explains how to set up and populate your PostgreSQL database for the Instagram Unfollowers Tracker application.\n\n## Database Schema Overview\n\nThe application uses the following main tables:\n\n### Core Tables\n- **admins** - Admin user accounts for backend management\n- **site_settings** - Website configuration and SEO settings\n- **adsense_settings** - Google AdSense configuration\n- **blog_posts** - Blog content for SEO and user education\n- **site_analytics** - Traffic and engagement metrics\n- **users** - Public user sessions (for future features)\n- **instagram_analysis** - Analysis results storage\n\n## Initial Setup\n\n### 1. Create Database Schema\n\nThe schema is automatically created when you run:\n\n```bash\nnpm run db:push\n```\n\nThis command reads from `shared/schema.ts` and creates all tables with proper relationships.\n\n### 2. Create Default Admin User\n\nRun the admin seeding script:\n\n```bash\nnpm run seed:admin\n```\n\n**Default Credentials:**\n- Username: `admin`\n- Password: `Ub@!d4690`\n\n⚠️ **IMPORTANT: Change this password immediately in production!**\n\n### 3. Populate Initial Content\n\nThe database has been pre-populated with:\n\n#### Site Settings\n- Site name: \"Instagram Unfollowers Tracker\"\n- SEO-optimized meta title and description\n- Google Search Console verification placeholder\n- Favicon and logo paths\n\n#### Blog Content\n- \"How to See Who Unfollowed You on Instagram\" - Complete privacy guide\n- \"Ghost Followers on Instagram\" - How to find and remove inactive accounts\n- Additional SEO-optimized articles for better search rankings\n\n#### Analytics Data\n- Sample traffic data for the dashboard\n- Realistic pageview and engagement metrics\n- Various traffic sources (organic, direct, social)\n\n## Database Management Commands\n\n### View Current Data\n\n```sql\n-- Check site settings\nSELECT * FROM site_settings;\n\n-- View blog posts\nSELECT title, slug, is_published, published_at FROM blog_posts;\n\n-- Check analytics\nSELECT date, pageviews, unique_visitors, source FROM site_analytics ORDER BY date DESC;\n\n-- List all admins\nSELECT username, email, is_active FROM admins;\n```\n\n### Update Site Settings\n\n```sql\n-- Update meta information\nUPDATE site_settings SET \n  meta_title = 'Your Custom Title',\n  meta_description = 'Your custom description'\nWHERE id = (SELECT id FROM site_settings LIMIT 1);\n\n-- Add Google Search Console verification\nUPDATE site_settings SET \n  google_search_console = 'google1234567890123456.html'\nWHERE id = (SELECT id FROM site_settings LIMIT 1);\n```\n\n### Manage Blog Posts\n\n```sql\n-- Publish a blog post\nUPDATE blog_posts SET \n  is_published = true,\n  published_at = NOW()\nWHERE slug = 'your-post-slug';\n\n-- Create new blog post\nINSERT INTO blog_posts (title, slug, content, excerpt, meta_title, meta_description, is_published, author_id)\nVALUES (\n  'Your Post Title',\n  'your-post-slug',\n  'Your full content here...',\n  'Short excerpt...',\n  'SEO Title',\n  'SEO Description',\n  true,\n  (SELECT id FROM admins LIMIT 1)\n);\n```\n\n### Analytics Tracking\n\n```sql\n-- Add daily analytics\nINSERT INTO site_analytics (date, pageviews, unique_visitors, sessions, bounce_rate, source, page)\nVALUES (\n  CURRENT_DATE,\n  1500,  -- pageviews\n  1200,  -- unique visitors\n  1350,  -- sessions\n  '42.5%', -- bounce rate\n  'organic', -- source\n  '/' -- page\n);\n\n-- View traffic trends\nSELECT \n  date,\n  pageviews,\n  unique_visitors,\n  bounce_rate,\n  source\nFROM site_analytics \nWHERE date >= CURRENT_DATE - INTERVAL '30 days'\nORDER BY date DESC;\n```\n\n## Advanced Database Operations\n\n### Backup Database\n\n```bash\n# Create backup\npg_dump -h $PGHOST -U $PGUSER -d $PGDATABASE > backup_$(date +%Y%m%d).sql\n\n# Restore from backup\npsql -h $PGHOST -U $PGUSER -d $PGDATABASE < backup_20250101.sql\n```\n\n### Performance Optimization\n\n```sql\n-- Add indexes for better performance\nCREATE INDEX idx_blog_posts_published ON blog_posts(is_published, published_at);\nCREATE INDEX idx_analytics_date ON site_analytics(date);\nCREATE INDEX idx_analytics_page ON site_analytics(page);\n\n-- Analyze table statistics\nANALYZE blog_posts;\nANALYZE site_analytics;\n```\n\n### Data Cleanup\n\n```sql\n-- Remove old analytics data (keep last 365 days)\nDELETE FROM site_analytics \nWHERE date < CURRENT_DATE - INTERVAL '365 days';\n\n-- Clean up unpublished draft posts older than 30 days\nDELETE FROM blog_posts \nWHERE is_published = false \nAND created_at < NOW() - INTERVAL '30 days';\n```\n\n## Environment Configuration\n\nEnsure these environment variables are set:\n\n```env\nDATABASE_URL=postgresql://username:password@host:port/database\nPGHOST=your-postgres-host\nPGPORT=5432\nPGUSER=your-postgres-user\nPGPASSWORD=your-postgres-password\nPGDATABASE=your-database-name\n```\n\n## Security Best Practices\n\n1. **Change Default Passwords**\n   ```sql\n   UPDATE admins SET password = 'new-hashed-password' WHERE username = 'admin';\n   ```\n\n2. **Regular Backups**\n   Set up automated daily backups:\n   ```bash\n   # Add to crontab\n   0 2 * * * pg_dump -h $PGHOST -U $PGUSER -d $PGDATABASE > /backups/backup_$(date +\\%Y\\%m\\%d).sql\n   ```\n\n3. **Monitor Database Size**\n   ```sql\n   SELECT \n     table_name,\n     pg_size_pretty(pg_total_relation_size(table_name)) as size\n   FROM information_schema.tables \n   WHERE table_schema = 'public';\n   ```\n\n## Troubleshooting\n\n### Connection Issues\n```bash\n# Test database connection\npsql -h $PGHOST -U $PGUSER -d $PGDATABASE -c \"SELECT NOW();\"\n```\n\n### Schema Issues\n```bash\n# Reset and recreate schema\nnpm run db:push --force\nnpm run seed:admin\n```\n\n### Performance Issues\n```sql\n-- Check slow queries\nSELECT query, calls, total_time, mean_time\nFROM pg_stat_statements \nORDER BY total_time DESC \nLIMIT 10;\n```\n\n## Sample Content for Testing\n\nThe database includes realistic sample data:\n\n- **Site Settings**: Pre-configured for Instagram unfollowers tracking\n- **Blog Posts**: 2 comprehensive SEO articles\n- **Analytics**: 6 days of sample traffic data\n- **Admin User**: Ready-to-use admin account\n\nThis provides a complete foundation for your production application while maintaining professional content quality and SEO optimization.\n\n## Next Steps\n\n1. Update admin password\n2. Customize site settings for your domain\n3. Add your Google AdSense publisher ID\n4. Create additional blog content\n5. Set up automated backups\n6. Monitor analytics and performance\n\nYour database is now ready for production use! 🚀","size_bytes":6366},"DEPLOYMENT_CHECKLIST.md":{"content":"# Production Deployment Checklist\n\nComplete this checklist before deploying your Instagram Unfollowers Tracker to production.\n\n## ✅ Pre-Deployment Setup\n\n### Environment Configuration\n- [ ] Set `NODE_ENV=production`\n- [ ] Configure database connection string (`DATABASE_URL`)\n- [ ] Set strong `JWT_SECRET` (min 32 characters)\n- [ ] Set strong `SESSION_SECRET` (min 32 characters)\n- [ ] Configure `PORT` (default: 5000)\n\n### Database Setup\n- [ ] Run `npm run db:push` to create schema\n- [ ] Run `npm run seed:admin` to create admin user\n- [ ] **Change default admin password immediately**\n- [ ] Verify database connection works\n- [ ] Set up automated backups\n\n### Security Configuration\n- [ ] Update CORS origins in `server/index.ts`\n- [ ] Enable HTTPS/SSL certificates\n- [ ] Configure Content Security Policy if needed\n- [ ] Set up rate limiting for API endpoints\n- [ ] Review and secure all admin endpoints\n\n## ✅ Content Setup\n\n### Site Settings\n- [ ] Update site name and branding\n- [ ] Configure SEO meta tags\n- [ ] Add Google Search Console verification\n- [ ] Upload favicon and logo files\n- [ ] Test all meta tag implementations\n\n### Blog Content\n- [ ] Review pre-populated blog posts\n- [ ] Update author information\n- [ ] Add additional SEO-optimized content\n- [ ] Verify all internal links work\n- [ ] Test blog post publishing workflow\n\n### Analytics Setup\n- [ ] Configure Google AdSense (if applicable)\n- [ ] Set up Google Analytics tracking\n- [ ] Test analytics data collection\n- [ ] Verify admin dashboard displays correctly\n\n## ✅ Technical Verification\n\n### Application Testing\n- [ ] Test Instagram data upload functionality\n- [ ] Verify analysis results display correctly\n- [ ] Test all navigation links\n- [ ] Verify mobile responsiveness\n- [ ] Test admin panel login and features\n\n### Performance Optimization\n- [ ] Enable gzip compression ✅ (already configured)\n- [ ] Configure CDN for static assets\n- [ ] Test page load speeds\n- [ ] Optimize database queries\n- [ ] Set up monitoring and logging\n\n### Browser Testing\n- [ ] Chrome/Edge (latest)\n- [ ] Firefox (latest)\n- [ ] Safari (latest)\n- [ ] Mobile browsers (iOS/Android)\n\n## ✅ Hosting Platform Setup\n\n### Replit (Recommended for Quick Deploy)\n- [ ] Click \"Deploy\" button in Replit\n- [ ] Choose deployment tier\n- [ ] Configure custom domain (optional)\n- [ ] Test live URL\n\n### Alternative Platforms\n- [ ] Railway: `railway up`\n- [ ] Vercel: `vercel --prod`\n- [ ] Heroku: Configure buildpacks and deploy\n- [ ] VPS: Set up PM2, Nginx, SSL\n\n## ✅ Post-Deployment Verification\n\n### Functionality Tests\n- [ ] Homepage loads correctly\n- [ ] File upload works (test with sample Instagram export)\n- [ ] Analysis results display properly\n- [ ] Blog pages load and display correctly\n- [ ] Admin panel is accessible\n- [ ] All forms submit successfully\n\n### SEO and Performance\n- [ ] Google PageSpeed Insights score > 80\n- [ ] Meta tags display correctly in social media previews\n- [ ] Structured data validates (Google Rich Results Test)\n- [ ] Sitemap is accessible\n- [ ] Robots.txt is properly configured\n\n### Security Verification\n- [ ] SSL certificate is active and valid\n- [ ] Admin routes require authentication\n- [ ] File upload security works correctly\n- [ ] No sensitive data exposed in client-side code\n- [ ] Rate limiting is functioning\n\n## ✅ Monitoring and Maintenance\n\n### Set Up Monitoring\n- [ ] Application uptime monitoring\n- [ ] Database performance monitoring\n- [ ] Error logging and alerting\n- [ ] Backup verification\n- [ ] Security monitoring\n\n### Documentation\n- [ ] Update team with new admin credentials\n- [ ] Document deployment process\n- [ ] Create runbook for common issues\n- [ ] Set up change log for future updates\n\n## 🚨 Critical Security Reminders\n\n1. **Change Default Admin Password**\n   - Default: `admin` / `Ub@!d4690`\n   - Change to strong, unique password\n\n2. **Environment Variables**\n   - Never commit secrets to version control\n   - Use strong random values for JWT/session secrets\n   - Validate all environment variables on startup\n\n3. **Database Security**\n   - Use strong database passwords\n   - Enable connection encryption\n   - Restrict database access by IP if possible\n   - Regular security updates\n\n## 📊 Success Metrics\n\nAfter deployment, monitor these metrics:\n\n### Performance\n- Page load time < 3 seconds\n- Server response time < 500ms\n- 99%+ uptime\n- Database query time < 100ms average\n\n### User Experience\n- Mobile-friendly test passes\n- Accessibility score > 90\n- Cross-browser compatibility\n- Fast file processing times\n\n### SEO\n- Google Search Console shows no errors\n- Page indexing successful\n- Meta tags render correctly\n- Structured data validates\n\n## 🆘 Rollback Plan\n\nIf issues occur after deployment:\n\n1. **Quick Rollback**: Revert to previous deployment\n2. **Database Issues**: Restore from latest backup\n3. **DNS Problems**: Update DNS records to previous working state\n4. **Critical Bugs**: Enable maintenance mode and fix\n\n## 📞 Support Contacts\n\nDocument key contacts for production issues:\n- Hosting platform support\n- Database provider support\n- Domain registrar support\n- SSL certificate provider\n\n---\n\n**✅ Deployment Complete!**\n\nYour Instagram Unfollowers Tracker is now live and ready for users. Monitor the application closely for the first 24-48 hours to ensure everything is functioning correctly.\n\n**Live URL**: `https://your-domain.com`\n**Admin Panel**: `https://your-domain.com/admin`\n\nRemember to regularly update dependencies, monitor performance, and keep content fresh for optimal SEO results.","size_bytes":5555},"HOSTING_GUIDE.md":{"content":"# Instagram Unfollowers Tracker - Production Hosting Guide\n\nThis guide will help you deploy your Instagram Unfollowers Tracker application to a production server.\n\n## Prerequisites\n\nBefore hosting, ensure you have:\n- Node.js 18+ installed\n- PostgreSQL database access\n- SSL certificate (for HTTPS)\n- Domain name (optional but recommended)\n\n## Environment Variables Required\n\nCreate a `.env` file with these variables:\n\n```env\n# Database\nDATABASE_URL=postgresql://username:password@host:port/database\nPGHOST=your-postgres-host\nPGPORT=5432\nPGUSER=your-postgres-user\nPGPASSWORD=your-postgres-password\nPGDATABASE=your-database-name\n\n# Application\nNODE_ENV=production\nPORT=5000\n\n# Security (Generate random values)\nJWT_SECRET=your-super-secure-jwt-secret-here\nSESSION_SECRET=your-super-secure-session-secret-here\n```\n\n## Hosting Platform Options\n\n### 1. Replit (Easiest - Already Configured)\n\nYour app is already running on Replit! To deploy:\n\n1. Click the \"Deploy\" button in your Replit project\n2. Choose your deployment tier\n3. Configure your custom domain (optional)\n4. Your app will be available at `your-project-name.replit.app`\n\n**Benefits:**\n- Zero configuration required\n- Automatic SSL certificates\n- Built-in database hosting\n- Easy scaling options\n\n### 2. Railway (Recommended for Production)\n\n1. **Install Railway CLI:**\n   ```bash\n   npm install -g @railway/cli\n   ```\n\n2. **Login and Initialize:**\n   ```bash\n   railway login\n   railway init\n   ```\n\n3. **Add PostgreSQL:**\n   ```bash\n   railway add postgresql\n   ```\n\n4. **Deploy:**\n   ```bash\n   railway up\n   ```\n\n5. **Set Environment Variables:**\n   - Go to Railway dashboard\n   - Add all environment variables from above\n   - Railway will auto-generate DATABASE_URL\n\n### 3. Vercel + Neon Database\n\n1. **Create Neon Database:**\n   - Go to https://neon.tech\n   - Create new project\n   - Copy connection string\n\n2. **Deploy to Vercel:**\n   ```bash\n   npm install -g vercel\n   vercel login\n   vercel\n   ```\n\n3. **Configure Environment Variables:**\n   - Go to Vercel dashboard\n   - Add environment variables in Settings\n   - Redeploy\n\n### 4. VPS/Dedicated Server (Advanced)\n\n#### Server Setup (Ubuntu/Debian):\n\n1. **Update System:**\n   ```bash\n   sudo apt update && sudo apt upgrade -y\n   ```\n\n2. **Install Node.js:**\n   ```bash\n   curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -\n   sudo apt-get install -y nodejs\n   ```\n\n3. **Install PostgreSQL:**\n   ```bash\n   sudo apt install postgresql postgresql-contrib\n   sudo systemctl start postgresql\n   sudo systemctl enable postgresql\n   ```\n\n4. **Setup Database:**\n   ```bash\n   sudo -u postgres createuser --interactive\n   sudo -u postgres createdb instagram_tracker\n   ```\n\n5. **Clone and Setup Application:**\n   ```bash\n   git clone your-repository\n   cd instagram-unfollowers-tracker\n   npm install\n   npm run build\n   ```\n\n6. **Setup PM2 (Process Manager):**\n   ```bash\n   npm install -g pm2\n   pm2 start server/index.ts --name \"instagram-tracker\"\n   pm2 startup\n   pm2 save\n   ```\n\n7. **Setup Nginx Reverse Proxy:**\n   ```bash\n   sudo apt install nginx\n   ```\n\n   Create `/etc/nginx/sites-available/instagram-tracker`:\n   ```nginx\n   server {\n       listen 80;\n       server_name your-domain.com;\n\n       location / {\n           proxy_pass http://localhost:5000;\n           proxy_http_version 1.1;\n           proxy_set_header Upgrade $http_upgrade;\n           proxy_set_header Connection 'upgrade';\n           proxy_set_header Host $host;\n           proxy_set_header X-Real-IP $remote_addr;\n           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n           proxy_set_header X-Forwarded-Proto $scheme;\n           proxy_cache_bypass $http_upgrade;\n       }\n   }\n   ```\n\n8. **Enable Site and SSL:**\n   ```bash\n   sudo ln -s /etc/nginx/sites-available/instagram-tracker /etc/nginx/sites-enabled/\n   sudo nginx -t\n   sudo systemctl reload nginx\n   \n   # Install Certbot for SSL\n   sudo apt install certbot python3-certbot-nginx\n   sudo certbot --nginx -d your-domain.com\n   ```\n\n## Database Setup\n\n### Initialize Schema:\n\n```bash\nnpm run db:push\n```\n\n### Create Admin User:\n\n```bash\nnpm run seed:admin\n```\n\nDefault admin credentials:\n- Username: `admin`\n- Password: `Ub@!d4690`\n\n**⚠️ IMPORTANT: Change default password immediately in production!**\n\n## Security Checklist\n\n- [ ] Change default admin password\n- [ ] Use strong JWT and session secrets\n- [ ] Enable HTTPS/SSL\n- [ ] Configure CORS properly\n- [ ] Set up database backups\n- [ ] Configure rate limiting\n- [ ] Enable security headers\n- [ ] Set up monitoring and logging\n\n## Performance Optimization\n\n1. **Enable Gzip Compression:**\n   ```javascript\n   app.use(compression());\n   ```\n\n2. **Add Redis Caching:**\n   ```bash\n   npm install redis\n   ```\n\n3. **Database Optimization:**\n   - Add indexes for frequently queried columns\n   - Set up connection pooling\n   - Regular maintenance and vacuuming\n\n4. **CDN Setup:**\n   - Use Cloudflare for static assets\n   - Enable browser caching\n\n## Monitoring and Maintenance\n\n### Health Checks:\n```bash\n# Check application status\ncurl https://your-domain.com/health\n\n# Monitor logs\npm2 logs instagram-tracker\n```\n\n### Database Backups:\n```bash\n# Daily backup script\npg_dump -h localhost -U username instagram_tracker > backup_$(date +%Y%m%d).sql\n```\n\n### Updates:\n```bash\ngit pull origin main\nnpm install\nnpm run build\npm2 restart instagram-tracker\n```\n\n## Support and Troubleshooting\n\n### Common Issues:\n\n1. **Database Connection Errors:**\n   - Check DATABASE_URL format\n   - Verify firewall settings\n   - Ensure PostgreSQL is running\n\n2. **Port Already in Use:**\n   ```bash\n   sudo lsof -i :5000\n   sudo kill -9 PID\n   ```\n\n3. **Permission Errors:**\n   ```bash\n   sudo chown -R $USER:$USER /path/to/app\n   ```\n\n### Getting Help:\n- Check application logs: `pm2 logs`\n- Monitor system resources: `htop`\n- Database logs: `sudo tail -f /var/log/postgresql/postgresql-*.log`\n\n## Scaling Considerations\n\nFor high traffic applications:\n- Use load balancers (nginx, HAProxy)\n- Database read replicas\n- Redis session store\n- Horizontal scaling with Docker/Kubernetes\n- CDN for static assets\n\n---\n\n## Quick Start Commands\n\n```bash\n# For Railway\nrailway add postgresql\nrailway up\n\n# For Vercel + Neon\nvercel --prod\n\n# For VPS\npm2 start server/index.ts --name \"instagram-tracker\"\nsudo nginx -t && sudo systemctl reload nginx\n```\n\nYour Instagram Unfollowers Tracker is now ready for production! 🚀","size_bytes":6430},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Instagram Followers Tracker\n\n## Overview\n\nThis is a full-stack web application that helps users analyze their Instagram followers and discover who has unfollowed them. The application provides a secure, privacy-focused approach where users upload their Instagram data export (ZIP file) to get detailed insights about their followers, unfollowers, and account statistics. The tool emphasizes security by not requiring Instagram login credentials and processing data locally without permanent storage.\n\n## Recent Updates (August 21, 2025)\n\n### Critical SEO & Canonical URL Issues RESOLVED\n- **Google Search Console Errors Fixed**: Resolved \"Alternate page with proper canonical tag\" errors that were preventing proper indexing\n- **Domain Canonicalization**: Updated all canonical URLs from `unfollowers-tracker.replit.app` to production domain `instaunfollowerstracker.com`\n- **Comprehensive SEO Head Component**: Created advanced SEOHead component for dynamic meta tag management across all pages\n- **AI Overview Optimization**: Enhanced meta tags specifically for AI overview and LLM consumption with detailed functionality markers\n- **Robots.txt & Sitemap Updated**: Fixed all URLs to use correct production domain for better crawlability\n- **Enhanced Crawlability**: Added proper robots meta tags with `max-snippet:320, max-image-preview:large, max-video-preview:30`\n- **Structured Data Enhancement**: Improved JSON-LD schemas for better search engine understanding and rich snippets\n- **Mobile & App Meta Tags**: Added comprehensive mobile web app and Apple touch icon meta tags\n- **Page-Specific SEO**: Implemented individual SEO optimization for all major pages (home, unfollowers-tracker, ghost-followers, inactive-followers, blog pages, about, contact)\n\n### Migration from Replit Agent COMPLETED\n- **Environment Migration**: Successfully migrated from Replit Agent to standard Replit environment\n- **Dependencies Fixed**: Resolved tsx and TypeScript dependency issues for clean application startup\n- **Database Integration**: Created and configured PostgreSQL database with proper schema deployment\n- **Workflow Optimization**: Application running smoothly on port 5000 with automatic restart capabilities\n\n## Previous Updates (August 19, 2025)\n\n### SEO Article Enhancement\n- **New Article Created**: \"Does Instagram Auto Unfollow People? Complete Guide to Instagram Unfollowing\"\n- **Keywords Targeted**: instagram auto unfollow, automatic follow unfollow instagram, does instagram unfollow people, instagram unfollowing people, does instagram randomly unfollow\n- **SEO Integration**: Added to routing, SEO config, and blog listing with optimized meta tags\n- **Content Strategy**: Maintains topical authority for \"instagram unfollowers tracker\" through strategic keyword clustering\n- **Article Features**: Comprehensive safety guide, FAQ section, warning callouts, internal linking strategy\n\n### Project Successfully Migrated to Replit Environment\n- **Migration Completed**: Successfully migrated Instagram Followers Tracker from Replit Agent to standard Replit environment\n- **Dependencies Resolved**: Fixed tsx dependency issue and installed all required Node.js packages\n- **Database Integration**: Created PostgreSQL database and deployed schema using Drizzle ORM\n- **Security Maintained**: Preserved robust client/server separation and modern web security practices\n- **SEO Optimization**: Updated meta title to \"Instagram Unfollowers Tracker – See Who Unfollowed You?\" and description to focus on ghost/inactive followers tracking\n- **Application Running**: Server successfully running on port 5000 with all features operational\n- **Admin System**: Default admin user created (username: admin, password: Ub@!d4690)\n\n### Major Admin Panel Migration Completed\n- **Comprehensive Admin System**: Built complete admin panel with PostgreSQL database integration\n- **JWT Authentication**: Implemented secure JWT-based authentication with cookie management\n- **Admin Dashboard**: Created real-time analytics dashboard with visitor metrics and statistics\n- **Site Management**: Built site settings page for website configuration (meta tags, SEO, branding)\n- **AdSense Integration**: Complete Google AdSense management panel with ad placement controls and site verification\n- **Rich Text Blog Editor**: Enhanced blog management with markdown toolbar (headings, bold, italic, lists, links, quotes)\n- **Search Console Setup**: Google Search Console verification guide and meta tag management\n- **Blog Management**: Full CRUD blog management system with enhanced rich text editor interface\n- **Database Storage**: Migrated from in-memory to PostgreSQL with comprehensive admin schema\n- **Security Enhanced**: Proper client/server separation with secure authentication middleware\n- **Default Admin Created**: Setup admin user with credentials (username: admin, password: Ub@!d4690)\n\n### Admin Panel Features\n- Professional sidebar navigation with all admin sections\n- Real-time visitor analytics and traffic monitoring\n- Website settings management (title, description, favicon, logo)\n- Search engine verification meta tag management\n- Google AdSense ad placement and configuration with site verification workflow\n- Enhanced blog post management with rich text markdown editor (H1-H6, formatting, lists, links)\n- AdSense site verification system for adding verification meta tags to website head\n- Secure authentication system with session management\n\n## Previous Updates (August 18, 2025)\n\n- **Migration Completed**: Successfully migrated project from Replit Agent to Replit environment  \n- **Dependencies Fixed**: Resolved tsx dependency issues and installed all required packages\n- **Professional UI Redesign**: Updated homepage typography with clean, professional sizing\n- **Typography Improved**: All headings and sections now use proper hierarchy and clean design\n- **Security Enhanced**: Implemented robust client/server separation following modern web practices\n- **Font Updated**: Changed from Inter to Poppins for modern, clean typography\n- **Navigation Redesigned**: Beautiful modern header with gradient branding and improved UX\n- **About Us Page**: Created comprehensive about page with company story, values, and mission\n- **Contact Page**: Modern contact form with multiple contact methods and FAQ section\n- **Hero Section Redesigned**: Reduced from full-screen to normal height for better UX\n- **Live Demo Component**: Added animated celebrity profile mockups showing real-time stat changes\n- **Legal Pages Added**: Created comprehensive Privacy Policy, Terms of Service, Cookie Policy, and Help Center\n- **Navigation Enhanced**: All footer links now connect to proper legal pages\n- **Removed Video Tutorial**: Simplified how-it-works section by removing video placeholder\n- **Modern Design**: All pages now feature beautiful hero sections with Instagram-inspired gradients\n- **Content Strategy**: Comprehensive SEO content plan developed for enhanced topical authority\n- **Dedicated Pages Created**: Built separate SEO-optimized pages for Unfollowers Tracker, Followers Insights, Instagram Analytics, and How It Works\n- **Navigation Updated**: Header navigation now links to dedicated pages with rich keyword anchors\n- **SEO Optimization**: Each page has unique meta tags, structured data, and semantic HTML for search engines\n- **Topical Authority**: Content structured for comprehensive Instagram analytics topic coverage\n- **SEO Articles Created**: Developed 4 comprehensive, semantically-optimized blog articles:\n  - \"How to See Who Unfollowed You on Instagram\" - Complete guide with security focus\n  - \"Who Doesn't Follow Me Back on Instagram\" - Strategic follower management insights  \n  - \"Instagram: Who Doesn't Follow Me Back\" - Comprehensive tool-focused article\n  - \"How to Check Instagram Unfollowers\" - Complete safety guide with troubleshooting\n- **Modern SEO Practices**: All articles follow semantic SEO, avoid keyword stuffing, include FAQs, structured data, and topical interlinking\n- **Professional Typography**: Applied consistent small, clean typography across all new article pages\n- **Blog System Enhanced**: Created comprehensive blog page showing all articles with proper routing\n- **Homepage Articles Fixed**: Made all blog articles clickable with proper navigation links\n- **SEO Navigation Added**: Implemented breadcrumbs across all pages for better user experience and SEO\n- **Mobile Menu Updated**: Added Blog link to mobile navigation for complete accessibility\n- **Breadcrumbs Implementation**: Added breadcrumbs to all blog articles and main pages (About, Contact)\n- **\"How It Works\" Page Redesigned**: Made slim, professional, and smartly resized with compact layout\n- **Mobile Navigation Enhanced**: Added Blog link to mobile menu for complete site navigation\n- **Navigation Updated**: Replaced \"Insights\" and \"Analytics\" with \"Ghost Followers\" and \"Inactive Followers\"\n- **New SEO Pages Created**: Built comprehensive Ghost Followers and Inactive Followers tracker pages\n- **Advanced SEO Implementation**: Added semantic SEO, structured data, meta tags, and AI overview optimization\n- **Complete Tool Integration**: Both new pages include working file upload and analytics functionality\n- **Disclaimer Page Added**: Created comprehensive disclaimer page for AdSense approval with all required legal sections\n- **Original Favicon Created**: Designed non-copyrighted favicon with abstract follower tracking analytics theme\n- **Professional Layout**: Fixed disclaimer page to include header navigation and footer for consistent user experience\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\nThe client is built with **React** and **TypeScript**, utilizing modern development patterns:\n\n- **Framework**: React with TypeScript for type safety\n- **Routing**: Wouter for lightweight client-side routing\n- **State Management**: React Query (TanStack Query) for server state management\n- **Styling**: Tailwind CSS with custom Instagram-inspired design tokens\n- **UI Components**: Radix UI primitives with shadcn/ui component system\n- **Build Tool**: Vite for fast development and optimized builds\n\nThe application follows a component-based architecture with clear separation between pages, reusable components, and UI primitives. The design emphasizes user experience with responsive layouts, smooth animations, and Instagram-brand visual elements.\n\n### Backend Architecture\n\nThe server is built with **Express.js** and **TypeScript**:\n\n- **Framework**: Express.js for RESTful API endpoints\n- **File Upload**: Multer middleware for handling ZIP file uploads (50MB limit)\n- **Data Processing**: Server-side analysis of Instagram data exports\n- **Storage**: In-memory storage implementation with interface for future database integration\n- **Development**: Custom Vite integration for seamless full-stack development\n\nThe backend uses a clean architecture pattern with separated route handlers, storage interfaces, and business logic. The design allows for easy extension and database integration.\n\n### Data Storage Solutions\n\nCurrently implements **in-memory storage** with a well-defined interface pattern:\n\n- **Storage Interface**: Abstract storage layer supporting user management and analysis data\n- **Memory Implementation**: Development-focused in-memory storage\n- **Database Ready**: Drizzle ORM configuration prepared for PostgreSQL integration\n- **Schema Design**: Structured tables for users and Instagram analysis results\n\nThe storage layer is designed for easy migration to persistent databases while maintaining clean separation of concerns.\n\n### Authentication and Authorization\n\nThe application currently operates in a **privacy-first, no-login mode**:\n\n- **No Authentication Required**: Users can analyze data without creating accounts\n- **Session-Based Architecture**: Infrastructure prepared for future user sessions\n- **Privacy Focus**: No permanent storage of user data or Instagram credentials\n- **Secure Processing**: File uploads processed and discarded after analysis\n\nThis approach prioritizes user privacy while maintaining the flexibility to add user accounts and data persistence in the future.\n\n## External Dependencies\n\n### Core Framework Dependencies\n- **React Ecosystem**: React 18, React DOM, TypeScript support\n- **Development Tools**: Vite, ESBuild, PostCSS, Autoprefixer\n- **Routing**: Wouter for lightweight client-side navigation\n\n### UI and Styling\n- **Design System**: Radix UI primitives for accessible components\n- **Styling**: Tailwind CSS with custom configuration\n- **Icons**: Lucide React for consistent iconography\n- **Component Library**: shadcn/ui component system\n\n### Data Management\n- **API Layer**: TanStack React Query for server state management\n- **Database ORM**: Drizzle ORM with PostgreSQL dialect\n- **Validation**: Zod for runtime type validation and schema validation\n- **Forms**: React Hook Form with Hookform Resolvers\n\n### File Processing\n- **Upload Handling**: Multer for multipart form data processing\n- **File Type Validation**: ZIP file validation and size limits\n- **Data Processing**: Custom Instagram data export parsing\n\n### Database Integration\n- **Database Provider**: Neon Database (PostgreSQL) configured via Drizzle\n- **Session Storage**: PostgreSQL session store (connect-pg-simple) ready for implementation\n- **Migration Tools**: Drizzle Kit for database schema management\n\n### Development and Deployment\n- **Runtime**: Node.js with ESM module support\n- **Process Management**: tsx for TypeScript execution in development\n- **Error Handling**: Replit-specific development tools and error overlays\n- **Environment**: Configured for Replit deployment with cartographer integration","size_bytes":13788},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2766},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/auth.ts":{"content":"import { type Request, type Response, type NextFunction } from \"express\";\n// import jwt from \"jsonwebtoken\"; // Will install later\nimport { storage } from \"./storage\";\nimport { type Admin } from \"@shared/schema\";\n\nconst JWT_SECRET = process.env.JWT_SECRET || \"your-super-secret-jwt-key-change-this-in-production\";\n\nexport interface AuthRequest extends Request {\n  admin?: Admin;\n}\n\nexport const generateToken = (admin: Admin): string => {\n  return jwt_impl.sign(\n    { \n      adminId: admin.id, \n      username: admin.username, \n      email: admin.email \n    }, \n    JWT_SECRET, \n    { expiresIn: \"7d\" }\n  );\n};\n\nexport const verifyToken = (token: string): any => {\n  try {\n    return jwt_impl.verify(token, JWT_SECRET);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport const authenticateAdmin = async (req: AuthRequest, res: Response, next: NextFunction) => {\n  try {\n    const token = req.cookies?.adminToken || req.headers.authorization?.replace(\"Bearer \", \"\");\n    \n    if (!token) {\n      return res.status(401).json({ message: \"Access denied. No token provided.\" });\n    }\n\n    const decoded = verifyToken(token);\n    if (!decoded) {\n      return res.status(401).json({ message: \"Invalid token.\" });\n    }\n\n    const admin = await storage.getAdmin(decoded.adminId);\n    if (!admin || !admin.isActive) {\n      return res.status(401).json({ message: \"Admin not found or inactive.\" });\n    }\n\n    req.admin = admin;\n    next();\n  } catch (error) {\n    res.status(500).json({ message: \"Server error during authentication.\" });\n  }\n};\n\n// Mock JWT implementation until we can install the real package\nconst mockJwt = {\n  sign: (payload: any, secret: string, options?: any) => {\n    return btoa(JSON.stringify({ ...payload, exp: Date.now() + (7 * 24 * 60 * 60 * 1000) }));\n  },\n  verify: (token: string, secret: string) => {\n    try {\n      const decoded = JSON.parse(atob(token));\n      if (decoded.exp < Date.now()) throw new Error(\"Token expired\");\n      return decoded;\n    } catch {\n      throw new Error(\"Invalid token\");\n    }\n  }\n};\n\n// Use mock JWT for now\nconst jwt_impl = mockJwt;","size_bytes":2094},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport compression from 'compression';\nimport helmet from 'helmet';\nimport cors from 'cors';\nimport { RateLimiterMemory } from 'rate-limiter-flexible';\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\nimport { seedAdminUser } from \"./seed-admin.js\";\n\nconst app = express();\n\n// Rate limiting to prevent server overload - more lenient for search crawlers\nconst rateLimiter = new RateLimiterMemory({\n  keyGenerator: (req: any) => {\n    // Be more lenient with known search crawlers\n    const userAgent = req.headers['user-agent']?.toLowerCase() || '';\n    if (userAgent.includes('googlebot') || userAgent.includes('bingbot') || userAgent.includes('slurp')) {\n      return `crawler:${req.ip || 'unknown'}`;\n    }\n    return `user:${req.ip || 'unknown'}`;\n  },\n  points: 200, // High limit for all requests to prevent blocking legitimate traffic\n  duration: 60, // 1 minute window\n  blockDuration: 30, // Block for 30 seconds if limit exceeded\n});\n\n// Apply rate limiting only to API routes in production, exempt SEO-critical paths\napp.use(async (req, res, next) => {\n  // Skip rate limiting for SEO-critical endpoints, development, and static assets\n  if (process.env.NODE_ENV !== 'production' || \n      req.url.includes('.js') || req.url.includes('.css') || \n      req.url.includes('.png') || req.url.includes('.jpg') ||\n      req.url.includes('@') || req.url.includes('src/') ||\n      req.url === '/robots.txt' || req.url === '/sitemap.xml' ||\n      req.url === '/health' || req.url === '/ping' || req.url === '/status') {\n    return next();\n  }\n\n  try {\n    await rateLimiter.consume(req.ip || 'unknown');\n    next();\n  } catch (rejRes: any) {\n    log(`Rate limit exceeded for ${req.ip} - ${req.method} ${req.url}`);\n    res.status(429).json({ \n      message: 'Too Many Requests', \n      retryAfter: Math.round(rejRes.msBeforeNext) || 30000 \n    });\n  }\n});\n\n// Server timeout configurations for better connectivity\napp.use((req, res, next) => {\n  // Set server response timeout to 30 seconds\n  res.setTimeout(30000, () => {\n    log(`Request timeout: ${req.method} ${req.url}`);\n    if (!res.headersSent) {\n      res.status(504).json({ message: \"Request timeout\" });\n    }\n  });\n  \n  // Set request timeout to 10 seconds\n  req.setTimeout(10000, () => {\n    log(`Request body timeout: ${req.method} ${req.url}`);\n    if (!res.headersSent) {\n      res.status(408).json({ message: \"Request timeout\" });\n    }\n  });\n  \n  next();\n});\n\n// Security and performance middleware\napp.use(helmet({\n  contentSecurityPolicy: false, // Disable for development with Vite HMR\n  crossOriginEmbedderPolicy: false\n}));\napp.use(compression({\n  level: 6, // Balanced compression\n  threshold: 1024, // Only compress files larger than 1KB\n  filter: (req, res) => {\n    if (req.headers['x-no-compression']) return false;\n    return compression.filter(req, res);\n  }\n}));\napp.use(cors({\n  origin: process.env.NODE_ENV === 'production' \n    ? ['https://instaunfollowerstracker.com', 'https://unfollowers-tracker.replit.app'] \n    : true,\n  credentials: true\n}));\n\n// HTTPS and www redirect middleware - CRITICAL FOR SEO\napp.use((req, res, next) => {\n  // Force HTTPS in production\n  if (process.env.NODE_ENV === 'production' && req.header('x-forwarded-proto') !== 'https') {\n    return res.redirect(301, `https://${req.header('host')}${req.url}`);\n  }\n  \n  // Force non-www domain\n  if (req.headers.host && req.headers.host.startsWith('www.')) {\n    const protocol = req.header('x-forwarded-proto') || 'https';\n    const newHost = req.headers.host.replace(/^www\\./, '');\n    return res.redirect(301, `${protocol}://${newHost}${req.url}`);\n  }\n  \n  next();\n});\n\n// Add caching headers for static assets\napp.use((req, res, next) => {\n  if (req.url.match(/\\.(js|css|png|jpg|jpeg|gif|ico|svg|woff2|woff|ttf|eot)$/)) {\n    res.setHeader('Cache-Control', 'public, max-age=31536000'); // 1 year\n    res.setHeader('Expires', new Date(Date.now() + 31536000000).toUTCString());\n  } else if (req.url.match(/\\.(html)$/)) {\n    res.setHeader('Cache-Control', 'public, max-age=3600'); // 1 hour\n  }\n  next();\n});\n\napp.use(express.json({ limit: '50mb' }));\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  // Seed the admin user on startup - don't let this fail the server\n  try {\n    await seedAdminUser();\n    log('Admin user seeded successfully');\n  } catch (error) {\n    log('Failed to seed admin user, continuing anyway...');\n    console.error('Admin seed error:', error);\n  }\n  \n  // Add comprehensive health check endpoints for Google Search Console\n  app.get('/health', (_req, res) => {\n    const memUsage = process.memoryUsage();\n    const uptime = process.uptime();\n    \n    res.status(200).json({ \n      status: 'healthy', \n      timestamp: new Date().toISOString(),\n      uptime: Math.floor(uptime),\n      memory: {\n        rss: Math.round(memUsage.rss / 1024 / 1024) + 'MB',\n        heapUsed: Math.round(memUsage.heapUsed / 1024 / 1024) + 'MB',\n        heapTotal: Math.round(memUsage.heapTotal / 1024 / 1024) + 'MB'\n      },\n      nodeVersion: process.version,\n      platform: process.platform\n    });\n  });\n\n  // Lightweight ping endpoint for quick connectivity checks\n  app.get('/ping', (_req, res) => {\n    res.status(200).send('pong');\n  });\n\n  // Status endpoint with server metrics\n  app.get('/status', (_req, res) => {\n    res.status(200).json({\n      server: 'Instagram Unfollowers Tracker',\n      status: 'operational',\n      version: '2.0.0',\n      timestamp: new Date().toISOString()\n    });\n  });\n\n  app.get('/robots.txt', (_req, res) => {\n    res.type('text/plain');\n    res.sendFile('robots.txt', { root: './public' }, (err) => {\n      if (err) {\n        res.status(404).send('User-agent: *\\nAllow: /');\n      }\n    });\n  });\n\n  app.get('/sitemap.xml', (_req, res) => {\n    res.type('application/xml');\n    res.sendFile('sitemap.xml', { root: './public' }, (err) => {\n      if (err) {\n        res.status(404).send('<?xml version=\"1.0\" encoding=\"UTF-8\"?><urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"></urlset>');\n      }\n    });\n  });\n\n  const server = await registerRoutes(app);\n\n  // Global error handler - DO NOT throw errors, handle gracefully\n  app.use((err: any, req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n    \n    // Log error for debugging but don't crash the server\n    log(`Error ${status}: ${message} - ${req.method} ${req.url}`);\n    console.error('Server error:', err);\n\n    // Send error response if not already sent\n    if (!res.headersSent) {\n      res.status(status).json({ message, path: req.url, method: req.method });\n    }\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  \n  // Configure server with proper settings for stability\n  server.keepAliveTimeout = 65000; // Keep connections alive\n  server.headersTimeout = 66000; // Headers timeout slightly higher than keepAlive\n  server.requestTimeout = 30000; // Request timeout\n  server.timeout = 30000; // Server timeout\n  \n  const serverInstance = server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n\n  // Graceful shutdown handling\n  const gracefulShutdown = (signal: string) => {\n    log(`Received ${signal}, shutting down gracefully...`);\n    serverInstance.close((err) => {\n      if (err) {\n        log(`Error during shutdown: ${err.message}`);\n        process.exit(1);\n      }\n      log('Server closed successfully');\n      process.exit(0);\n    });\n    \n    // Force shutdown after 10 seconds\n    setTimeout(() => {\n      log('Forcing shutdown...');\n      process.exit(1);\n    }, 10000);\n  };\n\n  // Memory monitoring to prevent crashes\n  const memoryMonitor = setInterval(() => {\n    const memUsage = process.memoryUsage();\n    const heapUsedMB = memUsage.heapUsed / 1024 / 1024;\n    \n    // Log warning if memory usage is high\n    if (heapUsedMB > 200) {\n      log(`High memory usage: ${Math.round(heapUsedMB)}MB`);\n    }\n    \n    // Force garbage collection if available and memory is very high\n    if (heapUsedMB > 400 && global.gc) {\n      log('Forcing garbage collection due to high memory usage');\n      global.gc();\n    }\n  }, 30000); // Check every 30 seconds\n\n  // Handle shutdown signals\n  process.on('SIGTERM', () => {\n    clearInterval(memoryMonitor);\n    gracefulShutdown('SIGTERM');\n  });\n  process.on('SIGINT', () => {\n    clearInterval(memoryMonitor);\n    gracefulShutdown('SIGINT');\n  });\n  \n  // Handle uncaught exceptions and rejections - don't crash immediately\n  process.on('uncaughtException', (err) => {\n    log(`Uncaught Exception: ${err.message}`);\n    console.error('Uncaught Exception:', err);\n    // Don't shutdown immediately for uncaught exceptions\n    // Log and continue to serve other requests\n  });\n  \n  process.on('unhandledRejection', (reason, promise) => {\n    log(`Unhandled Rejection at: ${promise} reason: ${reason}`);\n    console.error('Unhandled Rejection:', reason);\n    // Don't shutdown for unhandled rejections\n    // Log and continue serving\n  });\n})().catch((err) => {\n  console.error('Failed to start server:', err);\n  process.exit(1);\n});\n","size_bytes":10609},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport multer from \"multer\";\nimport { \n  insertAnalysisSchema, loginAdminSchema, insertAdminSchema,\n  insertSiteSettingsSchema, insertAdSenseSettingsSchema,\n  insertBlogPostSchema, insertAnalyticsSchema\n} from \"@shared/schema\";\nimport { z } from \"zod\";\nimport { authenticateAdmin, generateToken, type AuthRequest } from \"./auth\";\n// import cookieParser from \"cookie-parser\"; // Will install later\n\n// Configure multer for file uploads\nconst upload = multer({\n  storage: multer.memoryStorage(),\n  limits: {\n    fileSize: 50 * 1024 * 1024, // 50MB limit\n  },\n  fileFilter: (req, file, cb) => {\n    if (file.mimetype === 'application/zip' || file.originalname.endsWith('.zip')) {\n      cb(null, true);\n    } else {\n      cb(new Error('Only ZIP files are allowed'));\n    }\n  },\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Add cookie parser middleware (mock implementation)\n  app.use((req, res, next) => {\n    req.cookies = {};\n    const cookieHeader = req.headers.cookie;\n    if (cookieHeader) {\n      cookieHeader.split(';').forEach(cookie => {\n        const [name, value] = cookie.trim().split('=');\n        if (name && value) {\n          req.cookies[name] = decodeURIComponent(value);\n        }\n      });\n    }\n    next();\n  });\n\n  // Health check endpoint\n  app.get(\"/api/health\", (req, res) => {\n    res.json({ status: \"ok\", timestamp: new Date().toISOString() });\n  });\n\n  // ==================== ADMIN AUTH ROUTES ====================\n  \n  // Admin login\n  app.post(\"/api/admin/login\", async (req, res) => {\n    try {\n      const { username, password } = loginAdminSchema.parse(req.body);\n      \n      const admin = await storage.verifyAdminPassword(username, password);\n      if (!admin) {\n        return res.status(401).json({ message: \"Invalid credentials\" });\n      }\n\n      const token = generateToken(admin);\n      \n      // Set httpOnly cookie\n      res.cookie(\"adminToken\", token, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === \"production\",\n        maxAge: 7 * 24 * 60 * 60 * 1000, // 7 days\n      });\n\n      res.json({\n        success: true,\n        admin: {\n          id: admin.id,\n          username: admin.username,\n          email: admin.email,\n          isActive: admin.isActive,\n        }\n      });\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid input\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Internal server error\" });\n    }\n  });\n\n  // Admin logout\n  app.post(\"/api/admin/logout\", (req, res) => {\n    res.clearCookie(\"adminToken\");\n    res.json({ success: true, message: \"Logged out successfully\" });\n  });\n\n  // Get current admin\n  app.get(\"/api/admin/me\", authenticateAdmin, (req: AuthRequest, res) => {\n    const admin = req.admin!;\n    res.json({\n      id: admin.id,\n      username: admin.username,\n      email: admin.email,\n      isActive: admin.isActive,\n    });\n  });\n\n  // Create first admin (only if no admin exists)\n  app.post(\"/api/admin/setup\", async (req, res) => {\n    try {\n      // Check if any admin already exists\n      const existingAdmins = await storage.getBlogPosts(); // We'll use this to check if database is set up\n      // For now, allow setup\n      \n      const adminData = insertAdminSchema.parse(req.body);\n      const admin = await storage.createAdmin(adminData);\n\n      const token = generateToken(admin);\n      res.cookie(\"adminToken\", token, {\n        httpOnly: true,\n        secure: process.env.NODE_ENV === \"production\",\n        maxAge: 7 * 24 * 60 * 60 * 1000,\n      });\n\n      res.json({\n        success: true,\n        message: \"Admin created successfully\",\n        admin: {\n          id: admin.id,\n          username: admin.username,\n          email: admin.email,\n          isActive: admin.isActive,\n        }\n      });\n    } catch (error) {\n      console.error(\"Setup error:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid input\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Error creating admin\" });\n    }\n  });\n\n  // ==================== SITE SETTINGS ROUTES ====================\n  \n  app.get(\"/api/admin/site-settings\", authenticateAdmin, async (req, res) => {\n    try {\n      const settings = await storage.getSiteSettings();\n      res.json(settings || {});\n    } catch (error) {\n      console.error(\"Get site settings error:\", error);\n      res.status(500).json({ message: \"Error fetching site settings\" });\n    }\n  });\n\n  app.post(\"/api/admin/site-settings\", authenticateAdmin, async (req: AuthRequest, res) => {\n    try {\n      const settingsData = insertSiteSettingsSchema.parse(req.body);\n      const settings = await storage.updateSiteSettings(settingsData);\n      res.json({ success: true, settings });\n    } catch (error) {\n      console.error(\"Update site settings error:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid input\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Error updating site settings\" });\n    }\n  });\n\n  // ==================== ADSENSE ROUTES ====================\n  \n  app.get(\"/api/admin/adsense\", authenticateAdmin, async (req, res) => {\n    try {\n      const settings = await storage.getAdSenseSettings();\n      res.json(settings || {});\n    } catch (error) {\n      console.error(\"Get AdSense settings error:\", error);\n      res.status(500).json({ message: \"Error fetching AdSense settings\" });\n    }\n  });\n\n  app.post(\"/api/admin/adsense\", authenticateAdmin, async (req: AuthRequest, res) => {\n    try {\n      const settingsData = insertAdSenseSettingsSchema.parse(req.body);\n      const settings = await storage.updateAdSenseSettings(settingsData);\n      res.json({ success: true, settings });\n    } catch (error) {\n      console.error(\"Update AdSense settings error:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid input\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Error updating AdSense settings\" });\n    }\n  });\n\n  // ==================== BLOG ROUTES ====================\n  \n  // Get all blog posts (admin)\n  app.get(\"/api/admin/blog\", authenticateAdmin, async (req, res) => {\n    try {\n      const posts = await storage.getBlogPosts();\n      res.json(posts);\n    } catch (error) {\n      console.error(\"Get blog posts error:\", error);\n      res.status(500).json({ message: \"Error fetching blog posts\" });\n    }\n  });\n\n  // Get single blog post\n  app.get(\"/api/admin/blog/:id\", authenticateAdmin, async (req, res) => {\n    try {\n      const { id } = req.params;\n      const post = await storage.getBlogPost(id);\n      if (!post) {\n        return res.status(404).json({ message: \"Blog post not found\" });\n      }\n      res.json(post);\n    } catch (error) {\n      console.error(\"Get blog post error:\", error);\n      res.status(500).json({ message: \"Error fetching blog post\" });\n    }\n  });\n\n  // Create blog post\n  app.post(\"/api/admin/blog\", authenticateAdmin, async (req: AuthRequest, res) => {\n    try {\n      const postData = {\n        ...insertBlogPostSchema.parse(req.body),\n        authorId: req.admin!.id,\n      };\n      const post = await storage.createBlogPost(postData);\n      res.json({ success: true, post });\n    } catch (error) {\n      console.error(\"Create blog post error:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid input\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Error creating blog post\" });\n    }\n  });\n\n  // Update blog post\n  app.put(\"/api/admin/blog/:id\", authenticateAdmin, async (req: AuthRequest, res) => {\n    try {\n      const { id } = req.params;\n      const updateData = insertBlogPostSchema.partial().parse(req.body);\n      const post = await storage.updateBlogPost(id, updateData);\n      res.json({ success: true, post });\n    } catch (error) {\n      console.error(\"Update blog post error:\", error);\n      if (error instanceof z.ZodError) {\n        return res.status(400).json({ message: \"Invalid input\", errors: error.errors });\n      }\n      res.status(500).json({ message: \"Error updating blog post\" });\n    }\n  });\n\n  // Delete blog post\n  app.delete(\"/api/admin/blog/:id\", authenticateAdmin, async (req, res) => {\n    try {\n      const { id } = req.params;\n      await storage.deleteBlogPost(id);\n      res.json({ success: true, message: \"Blog post deleted\" });\n    } catch (error) {\n      console.error(\"Delete blog post error:\", error);\n      res.status(500).json({ message: \"Error deleting blog post\" });\n    }\n  });\n\n  // Publish blog post\n  app.post(\"/api/admin/blog/:id/publish\", authenticateAdmin, async (req, res) => {\n    try {\n      const { id } = req.params;\n      const post = await storage.publishBlogPost(id);\n      res.json({ success: true, post });\n    } catch (error) {\n      console.error(\"Publish blog post error:\", error);\n      res.status(500).json({ message: \"Error publishing blog post\" });\n    }\n  });\n\n  // ==================== ANALYTICS ROUTES ====================\n  \n  // Get analytics dashboard data\n  app.get(\"/api/admin/analytics\", authenticateAdmin, async (req, res) => {\n    try {\n      const { period = \"7\" } = req.query;\n      const days = parseInt(period as string);\n      \n      const summary = await storage.getAnalyticsSummary(days);\n      const detailed = await storage.getAnalytics(\n        new Date(Date.now() - days * 24 * 60 * 60 * 1000),\n        new Date()\n      );\n      \n      res.json({ summary, detailed });\n    } catch (error) {\n      console.error(\"Get analytics error:\", error);\n      res.status(500).json({ message: \"Error fetching analytics\" });\n    }\n  });\n\n  // Record page visit (public endpoint for tracking)\n  app.post(\"/api/analytics/visit\", async (req, res) => {\n    try {\n      const { page = \"/\", source = \"direct\" } = req.body;\n      \n      // Record analytics data\n      await storage.recordAnalytics({\n        date: new Date(),\n        pageviews: 1,\n        uniqueVisitors: 1,\n        sessions: 1,\n        bounceRate: \"0\",\n        avgSessionDuration: \"0\",\n        source,\n        page,\n      });\n      \n      res.json({ success: true });\n    } catch (error) {\n      console.error(\"Record analytics error:\", error);\n      res.status(500).json({ message: \"Error recording analytics\" });\n    }\n  });\n\n  // Public endpoint to get site settings\n  app.get(\"/api/site-settings\", async (req, res) => {\n    try {\n      const settings = await storage.getSiteSettings();\n      if (settings) {\n        res.json({\n          siteName: settings.siteName,\n          metaTitle: settings.metaTitle,\n          metaDescription: settings.metaDescription,\n          favicon: settings.favicon,\n          logo: settings.logo,\n        });\n      } else {\n        res.json({\n          siteName: \"Instagram Followers Tracker\",\n          metaTitle: \"Instagram Followers Tracker - See Who Unfollowed You\",\n          metaDescription: \"Discover who unfollowed you on Instagram with our secure, privacy-focused tracker. Upload your Instagram data and get detailed insights.\",\n        });\n      }\n    } catch (error) {\n      console.error(\"Get public site settings error:\", error);\n      res.status(500).json({ message: \"Error fetching site settings\" });\n    }\n  });\n\n  // Public endpoint to get AdSense settings\n  app.get(\"/api/adsense-settings\", async (req, res) => {\n    try {\n      const settings = await storage.getAdSenseSettings();\n      if (settings && settings.isActive) {\n        res.json({\n          isActive: settings.isActive,\n          autoAds: settings.autoAds,\n          publisherId: settings.publisherId,\n        });\n      } else {\n        res.json({ isActive: false });\n      }\n    } catch (error) {\n      console.error(\"Get public AdSense settings error:\", error);\n      res.status(500).json({ message: \"Error fetching AdSense settings\" });\n    }\n  });\n\n  // Upload and analyze Instagram data\n  app.post(\"/api/analyze\", upload.single('instagram_data'), async (req, res) => {\n    try {\n      if (!req.file) {\n        return res.status(400).json({ \n          message: \"No file uploaded. Please upload your Instagram data ZIP file.\" \n        });\n      }\n\n      // TODO: Process the ZIP file and extract Instagram data\n      // For now, return mock analysis results\n      const mockAnalysis = {\n        userId: null,\n        totalFollowers: 1247,\n        following: 891,\n        unfollowers: 23,\n        mutualFollowers: 1224,\n        analysisData: JSON.stringify({\n          unfollowersList: [\n            {\n              username: '@fitness_guru_alex',\n              name: 'Alex Rodriguez',\n              profilePicture: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n            },\n            {\n              username: '@tech_insights_mike',\n              name: 'Mike Johnson',\n              profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n            },\n          ],\n          mutualFollowersList: [\n            {\n              username: '@foodie_emma',\n              name: 'Emma Wilson',\n              profilePicture: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n            },\n          ],\n        }),\n      };\n\n      // Validate the analysis data\n      const validatedAnalysis = insertAnalysisSchema.parse(mockAnalysis);\n      \n      // Store the analysis\n      const savedAnalysis = await storage.createAnalysis(validatedAnalysis);\n\n      res.json({\n        success: true,\n        analysis: savedAnalysis,\n        message: \"Instagram data analyzed successfully\"\n      });\n\n    } catch (error) {\n      console.error('Analysis error:', error);\n      \n      if (error instanceof z.ZodError) {\n        return res.status(400).json({\n          message: \"Invalid data format\",\n          errors: error.errors\n        });\n      }\n      \n      if (error instanceof multer.MulterError) {\n        return res.status(400).json({\n          message: error.code === 'LIMIT_FILE_SIZE' \n            ? \"File too large. Maximum size is 50MB.\" \n            : \"File upload error\"\n        });\n      }\n\n      res.status(500).json({ \n        message: \"Internal server error while analyzing your data\" \n      });\n    }\n  });\n\n  // Get analysis results\n  app.get(\"/api/analysis/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const analysis = await storage.getAnalysis(id);\n      \n      if (!analysis) {\n        return res.status(404).json({ message: \"Analysis not found\" });\n      }\n      \n      res.json(analysis);\n    } catch (error) {\n      console.error('Get analysis error:', error);\n      res.status(500).json({ message: \"Error retrieving analysis\" });\n    }\n  });\n\n  // AdSense site verification routes\n  app.get(\"/api/admin/adsense/sites\", authenticateAdmin, async (req, res) => {\n    try {\n      const sites = await storage.getAdSenseSites();\n      res.json(sites);\n    } catch (error) {\n      console.error(\"Error fetching AdSense sites:\", error);\n      res.status(500).json({ message: \"Failed to fetch AdSense sites\" });\n    }\n  });\n\n  app.post(\"/api/admin/adsense/sites\", authenticateAdmin, async (req, res) => {\n    try {\n      const site = await storage.createAdSenseSite(req.body);\n      res.json({ success: true, site });\n    } catch (error) {\n      console.error(\"Error creating AdSense site:\", error);\n      res.status(500).json({ message: \"Failed to create AdSense site\" });\n    }\n  });\n\n  app.post(\"/api/admin/adsense/sites/:id/verify\", authenticateAdmin, async (req, res) => {\n    try {\n      const site = await storage.verifyAdSenseSite(req.params.id);\n      res.json({ success: true, site });\n    } catch (error) {\n      console.error(\"Error verifying AdSense site:\", error);\n      res.status(500).json({ message: \"Failed to verify AdSense site\" });\n    }\n  });\n\n  app.delete(\"/api/admin/adsense/sites/:id\", authenticateAdmin, async (req, res) => {\n    try {\n      await storage.deleteAdSenseSite(req.params.id);\n      res.json({ success: true });\n    } catch (error) {\n      console.error(\"Error deleting AdSense site:\", error);\n      res.status(500).json({ message: \"Failed to delete AdSense site\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":16596},"server/seed-admin.ts":{"content":"import { storage } from \"./storage.js\";\n\nexport async function seedAdminUser() {\n  try {\n    // Check if admin user already exists\n    const existingAdmin = await storage.getAdminByUsername(\"admin\");\n    \n    if (!existingAdmin) {\n      // Create the default admin user\n      await storage.createAdmin({\n        username: \"admin\",\n        email: \"admin@example.com\",\n        password: \"Ub@!d4690\", // Will be hashed automatically in storage\n        isActive: true,\n      });\n      \n      console.log(\"✓ Default admin user created successfully\");\n      console.log(\"  Username: admin\");\n      console.log(\"  Password: Ub@!d4690\");\n    } else {\n      console.log(\"✓ Admin user already exists\");\n    }\n  } catch (error) {\n    console.error(\"Failed to seed admin user:\", error);\n  }\n}","size_bytes":784},"server/storage.ts":{"content":"import { \n  type User, type InsertUser, type InstagramAnalysis, type InsertAnalysis,\n  type Admin, type InsertAdmin, type SiteSettings, type InsertSiteSettings,\n  type AdSenseSettings, type InsertAdSenseSettings, type BlogPost, type InsertBlogPost,\n  type SiteAnalytics, type InsertAnalytics,\n  admins, siteSettings, adSenseSettings, blogPosts, siteAnalytics, users, instagramAnalysis\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, and, gte, desc, asc } from \"drizzle-orm\";\nimport bcrypt from \"bcryptjs\";\nimport { randomUUID } from \"crypto\";\n\n// Storage interface with all CRUD operations\nexport interface IStorage {\n  // Instagram Analysis (existing)\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  createAnalysis(analysis: InsertAnalysis): Promise<InstagramAnalysis>;\n  getAnalysis(id: string): Promise<InstagramAnalysis | undefined>;\n  \n  // Admin operations\n  getAdmin(id: string): Promise<Admin | undefined>;\n  getAdminByUsername(username: string): Promise<Admin | undefined>;\n  createAdmin(admin: InsertAdmin): Promise<Admin>;\n  verifyAdminPassword(username: string, password: string): Promise<Admin | null>;\n  updateAdmin(id: string, admin: Partial<InsertAdmin>): Promise<Admin>;\n  \n  // Site Settings\n  getSiteSettings(): Promise<SiteSettings | undefined>;\n  updateSiteSettings(settings: InsertSiteSettings): Promise<SiteSettings>;\n  \n  // AdSense Settings\n  getAdSenseSettings(): Promise<AdSenseSettings | undefined>;\n  updateAdSenseSettings(settings: InsertAdSenseSettings): Promise<AdSenseSettings>;\n  \n  // Blog Posts\n  getBlogPosts(published?: boolean): Promise<BlogPost[]>;\n  getBlogPost(id: string): Promise<BlogPost | undefined>;\n  getBlogPostBySlug(slug: string): Promise<BlogPost | undefined>;\n  createBlogPost(post: InsertBlogPost): Promise<BlogPost>;\n  updateBlogPost(id: string, post: Partial<InsertBlogPost>): Promise<BlogPost>;\n  deleteBlogPost(id: string): Promise<void>;\n  publishBlogPost(id: string): Promise<BlogPost>;\n  \n  // Analytics\n  recordAnalytics(analytics: InsertAnalytics): Promise<SiteAnalytics>;\n  getAnalytics(startDate?: Date, endDate?: Date): Promise<SiteAnalytics[]>;\n  getAnalyticsSummary(days: number): Promise<{\n    pageviews: number;\n    uniqueVisitors: number;\n    sessions: number;\n    avgBounceRate: string;\n  }>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // Instagram Analysis (existing)\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user || undefined;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db.insert(users).values(insertUser).returning();\n    return user;\n  }\n\n  async createAnalysis(insertAnalysis: InsertAnalysis): Promise<InstagramAnalysis> {\n    const [analysis] = await db.insert(instagramAnalysis).values({\n      ...insertAnalysis,\n      userId: insertAnalysis.userId || null,\n    }).returning();\n    return analysis;\n  }\n\n  async getAnalysis(id: string): Promise<InstagramAnalysis | undefined> {\n    const [analysis] = await db.select().from(instagramAnalysis).where(eq(instagramAnalysis.id, id));\n    return analysis || undefined;\n  }\n\n  // Admin operations\n  async getAdmin(id: string): Promise<Admin | undefined> {\n    const [admin] = await db.select().from(admins).where(eq(admins.id, id));\n    return admin || undefined;\n  }\n\n  async getAdminByUsername(username: string): Promise<Admin | undefined> {\n    const [admin] = await db.select().from(admins).where(eq(admins.username, username));\n    return admin || undefined;\n  }\n\n  async createAdmin(insertAdmin: InsertAdmin): Promise<Admin> {\n    const hashedPassword = await bcrypt.hash(insertAdmin.password, 10);\n    const [admin] = await db.insert(admins).values({\n      ...insertAdmin,\n      password: hashedPassword,\n    }).returning();\n    return admin;\n  }\n\n  async verifyAdminPassword(username: string, password: string): Promise<Admin | null> {\n    const admin = await this.getAdminByUsername(username);\n    if (!admin || !admin.isActive) return null;\n    \n    const isValid = await bcrypt.compare(password, admin.password);\n    return isValid ? admin : null;\n  }\n\n  async updateAdmin(id: string, updateAdmin: Partial<InsertAdmin>): Promise<Admin> {\n    const updateData = { ...updateAdmin };\n    if (updateData.password) {\n      updateData.password = await bcrypt.hash(updateData.password, 10);\n    }\n    \n    const [admin] = await db.update(admins)\n      .set({ ...updateData, updatedAt: new Date() })\n      .where(eq(admins.id, id))\n      .returning();\n    return admin;\n  }\n\n  // Site Settings\n  async getSiteSettings(): Promise<SiteSettings | undefined> {\n    const [settings] = await db.select().from(siteSettings).limit(1);\n    return settings || undefined;\n  }\n\n  async updateSiteSettings(insertSettings: InsertSiteSettings): Promise<SiteSettings> {\n    const existing = await this.getSiteSettings();\n    \n    if (existing) {\n      const [settings] = await db.update(siteSettings)\n        .set({ ...insertSettings, updatedAt: new Date() })\n        .where(eq(siteSettings.id, existing.id))\n        .returning();\n      return settings;\n    } else {\n      const [settings] = await db.insert(siteSettings).values(insertSettings).returning();\n      return settings;\n    }\n  }\n\n  // AdSense Settings\n  async getAdSenseSettings(): Promise<AdSenseSettings | undefined> {\n    const [settings] = await db.select().from(adSenseSettings).limit(1);\n    return settings || undefined;\n  }\n\n  async updateAdSenseSettings(insertSettings: InsertAdSenseSettings): Promise<AdSenseSettings> {\n    const existing = await this.getAdSenseSettings();\n    \n    if (existing) {\n      const [settings] = await db.update(adSenseSettings)\n        .set({ ...insertSettings, updatedAt: new Date() })\n        .where(eq(adSenseSettings.id, existing.id))\n        .returning();\n      return settings;\n    } else {\n      const [settings] = await db.insert(adSenseSettings).values(insertSettings).returning();\n      return settings;\n    }\n  }\n\n  // Blog Posts\n  async getBlogPosts(published?: boolean): Promise<BlogPost[]> {\n    if (published !== undefined) {\n      return await db.select().from(blogPosts)\n        .where(eq(blogPosts.isPublished, published))\n        .orderBy(desc(blogPosts.createdAt));\n    }\n    \n    return await db.select().from(blogPosts).orderBy(desc(blogPosts.createdAt));\n  }\n\n  async getBlogPost(id: string): Promise<BlogPost | undefined> {\n    const [post] = await db.select().from(blogPosts).where(eq(blogPosts.id, id));\n    return post || undefined;\n  }\n\n  async getBlogPostBySlug(slug: string): Promise<BlogPost | undefined> {\n    const [post] = await db.select().from(blogPosts).where(eq(blogPosts.slug, slug));\n    return post || undefined;\n  }\n\n  async createBlogPost(insertPost: InsertBlogPost): Promise<BlogPost> {\n    const [post] = await db.insert(blogPosts).values(insertPost).returning();\n    return post;\n  }\n\n  async updateBlogPost(id: string, updatePost: Partial<InsertBlogPost>): Promise<BlogPost> {\n    const [post] = await db.update(blogPosts)\n      .set({ ...updatePost, updatedAt: new Date() })\n      .where(eq(blogPosts.id, id))\n      .returning();\n    return post;\n  }\n\n  async deleteBlogPost(id: string): Promise<void> {\n    await db.delete(blogPosts).where(eq(blogPosts.id, id));\n  }\n\n  async publishBlogPost(id: string): Promise<BlogPost> {\n    const [post] = await db.update(blogPosts)\n      .set({ \n        isPublished: true, \n        publishedAt: new Date(),\n        updatedAt: new Date()\n      })\n      .where(eq(blogPosts.id, id))\n      .returning();\n    return post;\n  }\n\n  // Analytics\n  async recordAnalytics(insertAnalytics: InsertAnalytics): Promise<SiteAnalytics> {\n    const [analytics] = await db.insert(siteAnalytics).values(insertAnalytics).returning();\n    return analytics;\n  }\n\n  async getAnalytics(startDate?: Date, endDate?: Date): Promise<SiteAnalytics[]> {\n    if (startDate && endDate) {\n      return await db.select().from(siteAnalytics)\n        .where(and(\n          gte(siteAnalytics.date, startDate),\n          gte(siteAnalytics.date, endDate)\n        ))\n        .orderBy(desc(siteAnalytics.date));\n    }\n    \n    return await db.select().from(siteAnalytics).orderBy(desc(siteAnalytics.date));\n  }\n\n  async getAnalyticsSummary(days: number): Promise<{\n    pageviews: number;\n    uniqueVisitors: number;\n    sessions: number;\n    avgBounceRate: string;\n  }> {\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - days);\n    \n    const analytics = await this.getAnalytics(startDate, new Date());\n    \n    const summary = analytics.reduce((acc, curr) => ({\n      pageviews: acc.pageviews + (curr.pageviews || 0),\n      uniqueVisitors: acc.uniqueVisitors + (curr.uniqueVisitors || 0),\n      sessions: acc.sessions + (curr.sessions || 0),\n      bounceRateSum: acc.bounceRateSum + parseFloat(curr.bounceRate || '0'),\n      count: acc.count + 1,\n    }), { pageviews: 0, uniqueVisitors: 0, sessions: 0, bounceRateSum: 0, count: 0 });\n    \n    return {\n      pageviews: summary.pageviews,\n      uniqueVisitors: summary.uniqueVisitors,\n      sessions: summary.sessions,\n      avgBounceRate: summary.count > 0 ? (summary.bounceRateSum / summary.count).toFixed(2) : '0',\n    };\n  }\n\n  // AdSense sites methods (placeholder for future database implementation)\n  async getAdSenseSites(): Promise<any[]> {\n    return [];\n  }\n\n  async createAdSenseSite(siteData: any): Promise<any> {\n    return { \n      id: Math.random().toString(36), \n      ...siteData, \n      status: 'pending', \n      isVerified: false, \n      submittedAt: new Date().toISOString() \n    };\n  }\n\n  async verifyAdSenseSite(siteId: string): Promise<any> {\n    return { \n      id: siteId, \n      status: 'verified', \n      isVerified: true, \n      verifiedAt: new Date().toISOString() \n    };\n  }\n\n  async deleteAdSenseSite(siteId: string): Promise<void> {\n    // In a real implementation, this would delete from database\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":10311},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Admin users table\nexport const admins = pgTable(\"admins\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  email: text(\"email\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Website settings table\nexport const siteSettings = pgTable(\"site_settings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  siteName: text(\"site_name\").notNull(),\n  metaTitle: text(\"meta_title\").notNull(),\n  metaDescription: text(\"meta_description\").notNull(),\n  googleSearchConsole: text(\"google_search_console\"),\n  bingWebmaster: text(\"bing_webmaster\"),\n  yandexWebmaster: text(\"yandex_webmaster\"),\n  favicon: text(\"favicon\"),\n  logo: text(\"logo\"),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Google AdSense settings\nexport const adSenseSettings = pgTable(\"adsense_settings\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  publisherId: text(\"publisher_id\"),\n  autoAds: boolean(\"auto_ads\").default(false),\n  headerAdCode: text(\"header_ad_code\"),\n  sidebarAdCode: text(\"sidebar_ad_code\"),\n  contentAdCode: text(\"content_ad_code\"),\n  footerAdCode: text(\"footer_ad_code\"),\n  isActive: boolean(\"is_active\").default(false),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// Blog posts table\nexport const blogPosts = pgTable(\"blog_posts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  slug: text(\"slug\").notNull().unique(),\n  content: text(\"content\").notNull(),\n  excerpt: text(\"excerpt\"),\n  metaTitle: text(\"meta_title\"),\n  metaDescription: text(\"meta_description\"),\n  featuredImage: text(\"featured_image\"),\n  isPublished: boolean(\"is_published\").default(false),\n  publishedAt: timestamp(\"published_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n  authorId: varchar(\"author_id\").references(() => admins.id),\n});\n\n// Site analytics table\nexport const siteAnalytics = pgTable(\"site_analytics\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  date: timestamp(\"date\").notNull(),\n  pageviews: integer(\"pageviews\").default(0),\n  uniqueVisitors: integer(\"unique_visitors\").default(0),\n  sessions: integer(\"sessions\").default(0),\n  bounceRate: text(\"bounce_rate\").default(\"0\"),\n  avgSessionDuration: text(\"avg_session_duration\").default(\"0\"),\n  source: text(\"source\"), // organic, direct, referral, social\n  page: text(\"page\").default(\"/\"),\n});\n\n// User sessions for public users (Instagram analysis)\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const instagramAnalysis = pgTable(\"instagram_analysis\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\"),\n  totalFollowers: integer(\"total_followers\").notNull(),\n  following: integer(\"following\").notNull(),\n  unfollowers: integer(\"unfollowers\").notNull(),\n  mutualFollowers: integer(\"mutual_followers\").notNull(),\n  analysisData: text(\"analysis_data\").notNull(), // JSON string\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Schema validations for admin\nexport const insertAdminSchema = createInsertSchema(admins).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const loginAdminSchema = z.object({\n  username: z.string().min(1, \"Username is required\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\nexport const insertSiteSettingsSchema = createInsertSchema(siteSettings).omit({\n  id: true,\n  updatedAt: true,\n});\n\nexport const insertAdSenseSettingsSchema = createInsertSchema(adSenseSettings).omit({\n  id: true,\n  updatedAt: true,\n});\n\nexport const insertBlogPostSchema = createInsertSchema(blogPosts).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  publishedAt: true,\n});\n\nexport const insertAnalyticsSchema = createInsertSchema(siteAnalytics).omit({\n  id: true,\n});\n\n// Original schema validations\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport const insertAnalysisSchema = createInsertSchema(instagramAnalysis).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type Admin = typeof admins.$inferSelect;\nexport type InsertAdmin = z.infer<typeof insertAdminSchema>;\nexport type LoginAdmin = z.infer<typeof loginAdminSchema>;\nexport type SiteSettings = typeof siteSettings.$inferSelect;\nexport type InsertSiteSettings = z.infer<typeof insertSiteSettingsSchema>;\nexport type AdSenseSettings = typeof adSenseSettings.$inferSelect;\nexport type InsertAdSenseSettings = z.infer<typeof insertAdSenseSettingsSchema>;\nexport type BlogPost = typeof blogPosts.$inferSelect;\nexport type InsertBlogPost = z.infer<typeof insertBlogPostSchema>;\nexport type SiteAnalytics = typeof siteAnalytics.$inferSelect;\nexport type InsertAnalytics = z.infer<typeof insertAnalyticsSchema>;\n\n// Original types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type InsertAnalysis = z.infer<typeof insertAnalysisSchema>;\nexport type InstagramAnalysis = typeof instagramAnalysis.$inferSelect;\n","size_bytes":5633},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { SEOWrapper } from \"@/hooks/use-seo\";\nimport { MobileOptimizations, usePerformanceMonitoring } from \"@/components/mobile-optimization\";\nimport Home from \"@/pages/home\";\nimport Results from \"@/pages/results\";\nimport About from \"@/pages/about\";\nimport Contact from \"@/pages/contact\";\nimport PrivacyPolicy from \"@/pages/privacy-policy\";\nimport TermsOfService from \"@/pages/terms-of-service\";\nimport CookiePolicy from \"@/pages/cookie-policy\";\nimport HelpCenter from \"@/pages/help-center\";\nimport NotFound from \"@/pages/not-found\";\nimport { UnfollowersTrackerPage } from \"@/pages/unfollowers-tracker\";\nimport { GhostFollowersPage } from \"@/pages/ghost-followers\";\nimport { InactiveFollowersPage } from \"@/pages/inactive-followers\";\nimport { HowItWorksPage } from \"@/pages/how-it-works\";\nimport { TrackUnfollowersFree } from \"@/pages/track-unfollowers-free\";\nimport HowToSeeWhoUnfollowedYou from \"@/pages/how-to-see-who-unfollowed-you\";\nimport WhoDoesntFollowBack from \"@/pages/who-doesnt-follow-back\";\nimport InstagramWhoDoesntFollowMeBack from \"@/pages/instagram-who-doesnt-follow-me-back\";\nimport HowToCheckInstagramUnfollowers from \"@/pages/how-to-check-instagram-unfollowers\";\nimport InstagramAutoUnfollowExplained from \"@/pages/instagram-auto-unfollow-explained\";\nimport InstagramFollowerVsUnfollowerTracker from \"@/pages/instagram-follower-vs-unfollower-tracker\";\nimport BlogPage from \"@/pages/blog\";\nimport DisclaimerPage from \"@/pages/disclaimer\";\nimport { InstagramAnalyticsPage } from \"@/pages/instagram-analytics\";\nimport { FollowersInsightsPage } from \"@/pages/followers-insights\";\n\n// Admin pages\nimport AdminLogin from \"@/pages/admin-login\";\nimport AdminDashboard from \"@/pages/admin-dashboard\";\nimport AdminSettings from \"@/pages/admin-settings\";\nimport AdminSearchConsole from \"@/pages/admin-search-console\";\nimport AdminAdSense from \"@/pages/admin-adsense\";\nimport AdminBlog from \"@/pages/admin-blog\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/unfollowers-tracker\" component={UnfollowersTrackerPage} />\n      <Route path=\"/ghost-followers\" component={GhostFollowersPage} />\n      <Route path=\"/inactive-followers\" component={InactiveFollowersPage} />\n      <Route path=\"/how-it-works\" component={HowItWorksPage} />\n      <Route path=\"/track-unfollowers-free\" component={TrackUnfollowersFree} />\n      <Route path=\"/how-to-see-who-unfollowed-you\" component={HowToSeeWhoUnfollowedYou} />\n      <Route path=\"/who-doesnt-follow-back\" component={WhoDoesntFollowBack} />\n      <Route path=\"/instagram-who-doesnt-follow-me-back\" component={InstagramWhoDoesntFollowMeBack} />\n      <Route path=\"/how-to-check-instagram-unfollowers\" component={HowToCheckInstagramUnfollowers} />\n      <Route path=\"/instagram-auto-unfollow-explained\" component={InstagramAutoUnfollowExplained} />\n      <Route path=\"/instagram-follower-vs-unfollower-tracker\" component={InstagramFollowerVsUnfollowerTracker} />\n      <Route path=\"/instagram-analytics\" component={InstagramAnalyticsPage} />\n      <Route path=\"/followers-insights\" component={FollowersInsightsPage} />\n      <Route path=\"/blog\" component={BlogPage} />\n      <Route path=\"/results\" component={Results} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/contact\" component={Contact} />\n      <Route path=\"/privacy-policy\" component={PrivacyPolicy} />\n      <Route path=\"/terms-of-service\" component={TermsOfService} />\n      <Route path=\"/cookie-policy\" component={CookiePolicy} />\n      <Route path=\"/help-center\" component={HelpCenter} />\n      <Route path=\"/disclaimer\" component={DisclaimerPage} />\n      \n      {/* Admin routes */}\n      <Route path=\"/admin/login\" component={AdminLogin} />\n      <Route path=\"/admin\" component={AdminDashboard} />\n      <Route path=\"/admin/settings\" component={AdminSettings} />\n      <Route path=\"/admin/search-console\" component={AdminSearchConsole} />\n      <Route path=\"/admin/adsense\" component={AdminAdSense} />\n      <Route path=\"/admin/blog\" component={AdminBlog} />\n      \n      {/* Fallback to 404 */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  // Initialize performance monitoring\n  usePerformanceMonitoring();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <SEOWrapper>\n          <MobileOptimizations />\n          <Toaster />\n          <Router />\n        </SEOWrapper>\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":4781},"client/src/index.css":{"content":"/* Font import moved to HTML head for better performance */\n\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(210 25% 7.8431%);\n  --card: hsl(180 6.6667% 97.0588%);\n  --card-foreground: hsl(210 25% 7.8431%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(210 25% 7.8431%);\n  --primary: hsl(203.8863 88.2845% 53.1373%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(210 25% 7.8431%);\n  --secondary-foreground: hsl(0 0% 100%);\n  --muted: hsl(240 1.9608% 90%);\n  --muted-foreground: hsl(210 25% 7.8431%);\n  --accent: hsl(211.5789 51.3514% 92.7451%);\n  --accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(201.4286 30.4348% 90.9804%);\n  --input: hsl(200 23.0769% 97.4510%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --chart-1: hsl(203.8863 88.2845% 53.1373%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(211.5789 51.3514% 92.7451%);\n  --sidebar-accent-foreground: hsl(203.8863 88.2845% 53.1373%);\n  --sidebar-border: hsl(205.0000 25.0000% 90.5882%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n  --font-sans: Poppins, system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: 1.3rem;\n  \n  /* Instagram brand colors */\n  --instagram-pink: hsl(337 75% 57%);\n  --instagram-purple: hsl(256 67% 67%);\n  --instagram-orange: hsl(38 92% 50%);\n  --instagram-blue: hsl(217 91% 60%);\n  --instagram-gradient: linear-gradient(45deg, hsl(43 100% 58%) 0%, hsl(24 100% 58%) 25%, hsl(351 100% 51%) 50%, hsl(336 100% 51%) 75%, hsl(262 80% 51%) 100%);\n}\n\n.dark {\n  --background: hsl(0 0% 0%);\n  --foreground: hsl(200 6.6667% 91.1765%);\n  --card: hsl(228 9.8039% 10%);\n  --card-foreground: hsl(0 0% 85.0980%);\n  --popover: hsl(0 0% 0%);\n  --popover-foreground: hsl(200 6.6667% 91.1765%);\n  --primary: hsl(203.7736 87.6033% 52.5490%);\n  --primary-foreground: hsl(0 0% 100%);\n  --secondary: hsl(195.0000 15.3846% 94.9020%);\n  --secondary-foreground: hsl(210 25% 7.8431%);\n  --muted: hsl(0 0% 9.4118%);\n  --muted-foreground: hsl(210 3.3898% 46.2745%);\n  --accent: hsl(205.7143 70% 7.8431%);\n  --accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(210 5.2632% 14.9020%);\n  --input: hsl(207.6923 27.6596% 18.4314%);\n  --ring: hsl(202.8169 89.1213% 53.1373%);\n  --sidebar: hsl(228 9.8039% 10%);\n  --sidebar-foreground: hsl(0 0% 85.0980%);\n  --sidebar-primary: hsl(202.8169 89.1213% 53.1373%);\n  --sidebar-primary-foreground: hsl(0 0% 100%);\n  --sidebar-accent: hsl(205.7143 70% 7.8431%);\n  --sidebar-accent-foreground: hsl(203.7736 87.6033% 52.5490%);\n  --sidebar-border: hsl(205.7143 15.7895% 26.0784%);\n  --sidebar-ring: hsl(202.8169 89.1213% 53.1373%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .instagram-gradient {\n    background: var(--instagram-gradient);\n  }\n  \n  .glass-effect {\n    backdrop-filter: blur(16px);\n    background: rgba(255, 255, 255, 0.1);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n  }\n  \n  .animate-float {\n    animation: float 6s ease-in-out infinite;\n  }\n  \n  .animate-pulse-slow {\n    animation: pulse 3s ease-in-out infinite;\n  }\n  \n  /* Performance optimizations */\n  .will-change-transform {\n    will-change: transform;\n  }\n  \n  .gpu-accelerated {\n    transform: translateZ(0);\n    backface-visibility: hidden;\n    perspective: 1000px;\n  }\n  \n  /* Mobile-first responsive utilities */\n  .text-responsive {\n    font-size: clamp(0.875rem, 2vw, 1rem);\n  }\n  \n  .text-responsive-lg {\n    font-size: clamp(1.125rem, 3vw, 1.5rem);\n  }\n  \n  .text-responsive-xl {\n    font-size: clamp(1.5rem, 4vw, 2.25rem);\n  }\n  \n  .text-responsive-2xl {\n    font-size: clamp(2rem, 5vw, 3rem);\n  }\n  \n  /* Better scrolling on mobile */\n  .smooth-scroll {\n    -webkit-overflow-scrolling: touch;\n    scroll-behavior: smooth;\n  }\n  \n  /* Reduce motion for accessibility */\n  @media (prefers-reduced-motion: reduce) {\n    .animate-float,\n    .animate-pulse-slow {\n      animation: none;\n    }\n    \n    .smooth-scroll {\n      scroll-behavior: auto;\n    }\n  }\n  \n  /* Cross-browser compatibility fixes */\n  .webkit-appearance-none {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n  }\n  \n  /* iOS specific fixes */\n  .ios-device input[type=\"text\"],\n  .ios-device input[type=\"email\"],\n  .ios-device input[type=\"search\"],\n  .ios-device textarea {\n    border-radius: 0;\n    -webkit-appearance: none;\n  }\n  \n  /* Safari specific fixes */\n  .safari-browser {\n    -webkit-transform: translateZ(0);\n  }\n  \n  /* Fallback for browsers without CSS variables */\n  .no-css-vars {\n    background: #ffffff;\n    color: #000000;\n  }\n  \n  /* Better touch targets for mobile */\n  @media (hover: none) and (pointer: coarse) {\n    button,\n    [role=\"button\"],\n    input[type=\"submit\"],\n    input[type=\"button\"] {\n      min-height: 44px;\n      min-width: 44px;\n    }\n  }\n  \n  /* High contrast mode support */\n  @media (prefers-contrast: high) {\n    .glass-effect {\n      background: rgba(255, 255, 255, 0.9);\n      border: 2px solid #000;\n    }\n  }\n  \n  /* Dark mode optimizations */\n  @media (prefers-color-scheme: dark) {\n    :root {\n      color-scheme: dark;\n    }\n  }\n}\n\n@keyframes float {\n  0%, 100% { \n    transform: translateY(0px); \n  }\n  50% { \n    transform: translateY(-20px); \n  }\n}\n","size_bytes":5909},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/admin-layout.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { AdminSidebar } from \"./admin-sidebar\";\nimport { useAdminAuth } from \"@/hooks/use-admin-auth\";\nimport { Loader2 } from \"lucide-react\";\n\ninterface AdminLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function AdminLayout({ children }: AdminLayoutProps) {\n  const [, navigate] = useLocation();\n  const { isAuthenticated, isLoading } = useAdminAuth();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      navigate(\"/admin/login\");\n    }\n  }, [isAuthenticated, isLoading, navigate]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"text-center\">\n          <Loader2 className=\"w-8 h-8 animate-spin mx-auto mb-4\" />\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading admin panel...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return null; // Will redirect to login\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex\">\n      <AdminSidebar />\n      <main className=\"flex-1 p-6 overflow-auto\">\n        {children}\n      </main>\n    </div>\n  );\n}","size_bytes":1220},"client/src/components/admin-sidebar.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { \n  BarChart3, \n  Settings, \n  FileText, \n  DollarSign,\n  Home,\n  LogOut,\n  User,\n  Globe\n} from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useAdminAuth } from \"@/hooks/use-admin-auth\";\nimport { cn } from \"@/lib/utils\";\n\nconst menuItems = [\n  {\n    label: \"Dashboard\",\n    href: \"/admin\",\n    icon: BarChart3,\n  },\n  {\n    label: \"Site Settings\",\n    href: \"/admin/settings\",\n    icon: Settings,\n  },\n  {\n    label: \"Search Console\",\n    href: \"/admin/search-console\",\n    icon: Globe,\n  },\n  {\n    label: \"AdSense\",\n    href: \"/admin/adsense\",\n    icon: DollarSign,\n  },\n  {\n    label: \"Blog Management\",\n    href: \"/admin/blog\",\n    icon: FileText,\n  },\n];\n\nexport function AdminSidebar() {\n  const [location] = useLocation();\n  const { admin, logout } = useAdminAuth();\n\n  const handleLogout = () => {\n    logout();\n  };\n\n  return (\n    <div className=\"bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 w-64 min-h-screen flex flex-col\">\n      {/* Header */}\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\n        <div className=\"flex items-center space-x-2\">\n          <div className=\"w-8 h-8 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center\">\n            <Home className=\"w-4 h-4 text-white\" />\n          </div>\n          <div>\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              Admin Panel\n            </h2>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n              Instagram Tracker\n            </p>\n          </div>\n        </div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"flex-1 p-4 space-y-2\">\n        {menuItems.map((item) => {\n          const Icon = item.icon;\n          const isActive = location === item.href || \n            (item.href !== \"/admin\" && location.startsWith(item.href));\n          \n          return (\n            <Link key={item.href} href={item.href}>\n              <Button\n                variant={isActive ? \"default\" : \"ghost\"}\n                className={cn(\n                  \"w-full justify-start text-left\",\n                  isActive && \"bg-blue-50 dark:bg-blue-900/20 text-blue-600 dark:text-blue-400\"\n                )}\n                data-testid={`nav-${item.label.toLowerCase().replace(' ', '-')}`}\n              >\n                <Icon className=\"mr-3 h-4 w-4\" />\n                {item.label}\n              </Button>\n            </Link>\n          );\n        })}\n      </nav>\n\n      {/* User Info & Logout */}\n      <div className=\"p-4 border-t border-gray-200 dark:border-gray-700 space-y-2\">\n        <div className=\"flex items-center space-x-2 p-2 rounded-lg bg-gray-50 dark:bg-gray-800\">\n          <User className=\"w-4 h-4 text-gray-500\" />\n          <div className=\"flex-1 min-w-0\">\n            <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n              {admin?.username || 'Admin'}\n            </p>\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 truncate\">\n              {admin?.email || 'admin@example.com'}\n            </p>\n          </div>\n        </div>\n        \n        <Button\n          variant=\"ghost\"\n          className=\"w-full justify-start text-red-600 dark:text-red-400 hover:bg-red-50 dark:hover:bg-red-900/20\"\n          onClick={handleLogout}\n          data-testid=\"button-logout\"\n        >\n          <LogOut className=\"mr-3 h-4 w-4\" />\n          Logout\n        </Button>\n      </div>\n    </div>\n  );\n}","size_bytes":3571},"client/src/components/blog-section.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Calendar } from 'lucide-react';\nimport { mockBlogArticles } from '@/lib/mock-data';\nimport { Link } from 'wouter';\n\nexport function BlogSection() {\n  return (\n    <section className=\"py-10 bg-white\" id=\"blog\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">Latest Articles & Guides</h2>\n          <p className=\"text-base sm:text-lg text-gray-600 leading-relaxed\">\n            Expert insights on Instagram analytics and follower tracking\n          </p>\n          \n          {/* Featured article topics */}\n          <div className=\"mt-6 flex flex-wrap justify-center gap-2\">\n            <Badge className=\"bg-purple-100 text-purple-700 hover:bg-purple-200 px-3 py-1 text-xs\">\n              📈 Growth Hacks 2025\n            </Badge>\n            <Badge className=\"bg-blue-100 text-blue-700 hover:bg-blue-200 px-3 py-1 text-xs\">\n              🔍 Track Unfollowers\n            </Badge>\n            <Badge className=\"bg-green-100 text-green-700 hover:bg-green-200 px-3 py-1 text-xs\">\n              🛡️ Safe Tracking\n            </Badge>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {mockBlogArticles.map((article) => (\n            <article key={article.id} className=\"group\">\n              <Link href={`/${article.slug}`}>\n                <Card className=\"overflow-hidden hover:shadow-lg transition-shadow cursor-pointer\">\n                  <div className=\"aspect-[4/3] overflow-hidden bg-gray-100\">\n                    <img \n                      src={article.imageUrl} \n                      alt={article.title}\n                      className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                      onError={(e) => {\n                        e.currentTarget.src = 'https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250';\n                      }}\n                      loading=\"lazy\"\n                    />\n                  </div>\n                  \n                  <CardContent className=\"p-5\">\n                    <div className=\"flex items-center text-xs text-gray-500 mb-3\">\n                      <Calendar className=\"mr-1\" size={12} />\n                      <span>{new Date(article.publishDate).toLocaleDateString('en-US', {\n                        year: 'numeric',\n                        month: 'short',\n                        day: 'numeric'\n                      })}</span>\n                      <span className=\"mx-2\">•</span>\n                      <Badge variant=\"secondary\" className=\"bg-purple-600 text-white text-xs px-2 py-0\">\n                        {article.category}\n                      </Badge>\n                    </div>\n                    \n                    <h3 className=\"text-base font-semibold text-gray-900 mb-2 group-hover:text-purple-600 transition-colors line-clamp-2\">\n                      {article.title}\n                    </h3>\n                    \n                    <p className=\"text-sm text-gray-600 mb-3 line-clamp-3\">{article.excerpt}</p>\n                    \n                    <span className=\"text-purple-600 font-medium text-sm hover:text-purple-700 transition-colors\">\n                      Read more →\n                    </span>\n                  </CardContent>\n                </Card>\n              </Link>\n            </article>\n          ))}\n        </div>\n        \n        <div className=\"text-center mt-8\">\n          <Link href=\"/blog\">\n            <Button size=\"sm\" className=\"bg-purple-600 text-white hover:bg-purple-700 transition-colors px-6 py-2\">\n              View All Articles\n            </Button>\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4032},"client/src/components/breadcrumbs.tsx":{"content":"import { Home, ChevronRight } from 'lucide-react';\nimport { Link } from 'wouter';\n\ninterface BreadcrumbItem {\n  label: string;\n  href?: string;\n  current?: boolean;\n}\n\ninterface BreadcrumbsProps {\n  items: BreadcrumbItem[];\n}\n\nexport function Breadcrumbs({ items }: BreadcrumbsProps) {\n  return (\n    <nav className=\"flex items-center space-x-2 text-sm text-gray-600 mb-6\">\n      <Home size={16} className=\"text-purple-600\" />\n      {items.map((item, index) => (\n        <div key={index} className=\"flex items-center space-x-2\">\n          <ChevronRight size={14} className=\"text-gray-400\" />\n          {item.href && !item.current ? (\n            <Link href={item.href}>\n              <span className=\"hover:text-purple-600 transition-colors cursor-pointer\">\n                {item.label}\n              </span>\n            </Link>\n          ) : (\n            <span className={item.current ? 'text-purple-600 font-semibold' : ''}>\n              {item.label}\n            </span>\n          )}\n        </div>\n      ))}\n    </nav>\n  );\n}","size_bytes":1030},"client/src/components/faq-section.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { ChevronDown, Mail } from 'lucide-react';\nimport { mockFAQs } from '@/lib/mock-data';\n\nexport function FAQSection() {\n  const [openFAQ, setOpenFAQ] = useState<string | null>(null);\n\n  const toggleFAQ = (id: string) => {\n    setOpenFAQ(openFAQ === id ? null : id);\n  };\n\n  // Add FAQ structured data only once per page\n  useEffect(() => {\n    // Check if FAQ schema already exists\n    if (document.querySelector('script[data-schema=\"faq\"]')) {\n      return;\n    }\n\n    const faqSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": mockFAQs.map(faq => ({\n        \"@type\": \"Question\",\n        \"name\": faq.question,\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": faq.answer\n        }\n      }))\n    };\n\n    const script = document.createElement('script');\n    script.type = 'application/ld+json';\n    script.setAttribute('data-schema', 'faq');\n    script.textContent = JSON.stringify(faqSchema);\n    document.head.appendChild(script);\n\n    return () => {\n      // Cleanup on unmount\n      const existingScript = document.querySelector('script[data-schema=\"faq\"]');\n      if (existingScript) {\n        existingScript.remove();\n      }\n    };\n  }, []);\n\n  return (\n    <section className=\"py-10 bg-gray-50\" id=\"faq\" aria-labelledby=\"faq-heading\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h2 id=\"faq-heading\" className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">Frequently Asked Questions</h2>\n          <p className=\"text-base sm:text-lg text-gray-600 leading-relaxed\">Common questions about tracking Instagram unfollowers and followers</p>\n        </div>\n        \n        <div className=\"space-y-4\" role=\"region\" aria-label=\"Frequently asked questions\">\n          {mockFAQs.map((faq) => (\n            <Card key={faq.id} className=\"overflow-hidden shadow-sm\">\n              <button \n                className=\"w-full px-6 py-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors\"\n                onClick={() => toggleFAQ(faq.id)}\n                aria-expanded={openFAQ === faq.id}\n                aria-controls={`faq-answer-${faq.id}`}\n                data-testid={`faq-question-${faq.id}`}\n              >\n                <h3 className=\"text-base font-semibold text-gray-900 pr-4 faq-question\">\n                  {faq.question}\n                </h3>\n                <ChevronDown \n                  className={`text-gray-400 transition-transform flex-shrink-0 ${\n                    openFAQ === faq.id ? 'rotate-180' : ''\n                  }`}\n                  size={18}\n                  aria-hidden=\"true\"\n                />\n              </button>\n              \n              {openFAQ === faq.id && (\n                <CardContent className=\"px-6 pb-4\" id={`faq-answer-${faq.id}`} role=\"region\" aria-labelledby={`faq-question-${faq.id}`}>\n                  <div className=\"text-sm text-gray-600 leading-relaxed\">\n                    {faq.answer}\n                  </div>\n                </CardContent>\n              )}\n            </Card>\n          ))}\n        </div>\n        \n        <div className=\"text-center mt-8\">\n          <div className=\"bg-gradient-to-br from-purple-50 to-pink-50 rounded-xl p-6 border border-purple-100\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Still have questions?</h3>\n            <p className=\"text-sm text-gray-600 mb-4\">\n              Our team is here to help you understand how to safely track your Instagram followers.\n            </p>\n            <a \n              href=\"mailto:support@unfollowerstracker.com\" \n              className=\"inline-flex items-center bg-purple-600 text-white px-5 py-2 rounded-lg font-medium text-sm hover:bg-purple-700 transition-colors\"\n              data-testid=\"link-contact-support\"\n            >\n              <Mail className=\"mr-2\" size={14} />\n              Get Expert Help\n            </a>\n            <div className=\"mt-3 text-xs text-gray-500\">\n              Usually respond within 24 hours\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4272},"client/src/components/features.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Shield, Zap, Users, Smartphone, Gift, BarChart } from 'lucide-react';\nimport { CheckCircle } from 'lucide-react';\n\nexport function Features() {\n  const features = [\n    {\n      icon: Shield,\n      title: '100% Secure',\n      description: 'No login required. Your data is processed locally and never stored on our servers. Your Instagram account remains completely secure.',\n      highlight: 'Zero risk to your account',\n      color: 'green',\n    },\n    {\n      icon: Zap,\n      title: 'Instant Results',\n      description: 'Get comprehensive insights about your followers immediately. No waiting, no processing delays - just instant, actionable data.',\n      highlight: 'Results in under 10 seconds',\n      color: 'blue',\n    },\n    {\n      icon: Users,\n      title: 'Complete Analysis',\n      description: 'See who unfollowed you, who doesn\\'t follow back, mutual followers, and detailed growth statistics all in one place.',\n      highlight: 'Full follower breakdown',\n      color: 'purple',\n    },\n    {\n      icon: Smartphone,\n      title: 'Mobile Friendly',\n      description: 'Works perfectly on all devices. Upload and analyze your Instagram data from your phone, tablet, or computer.',\n      highlight: 'Responsive design',\n      color: 'orange',\n    },\n    {\n      icon: Gift,\n      title: 'Completely Free',\n      description: 'No hidden costs, no premium features, no subscriptions. Our tool is 100% free to use with all features unlocked.',\n      highlight: 'Forever free',\n      color: 'pink',\n    },\n    {\n      icon: BarChart,\n      title: 'Detailed Insights',\n      description: 'Get actionable insights to optimize your Instagram strategy. Understand your audience and improve your social media presence.',\n      highlight: 'Advanced analytics',\n      color: 'indigo',\n    },\n  ];\n\n  const getColorClasses = (color: string) => {\n    const colorMap = {\n      green: 'bg-green-100 text-green-600',\n      blue: 'bg-blue-100 text-blue-600',\n      purple: 'bg-purple-100 text-purple-600',\n      orange: 'bg-orange-100 text-orange-600',\n      pink: 'bg-pink-100 text-pink-600',\n      indigo: 'bg-indigo-100 text-indigo-600',\n    };\n    return colorMap[color as keyof typeof colorMap] || 'bg-gray-100 text-gray-600';\n  };\n\n  const getHighlightColor = (color: string) => {\n    const colorMap = {\n      green: 'text-green-600',\n      blue: 'text-blue-600',\n      purple: 'text-purple-600',\n      orange: 'text-orange-600',\n      pink: 'text-pink-600',\n      indigo: 'text-indigo-600',\n    };\n    return colorMap[color as keyof typeof colorMap] || 'text-gray-600';\n  };\n\n  return (\n    <section className=\"py-10 bg-gray-50\" id=\"features\" aria-labelledby=\"features-heading\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h2 id=\"features-heading\" className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">Instagram Analytics Features</h2>\n          <p className=\"text-base sm:text-lg text-gray-600 max-w-xl mx-auto leading-relaxed\">\n            Comprehensive insights for tracking your followers and unfollowers\n          </p>\n          \n          {/* Key Benefits */}\n          <div className=\"mt-5 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2 max-w-3xl mx-auto\" role=\"list\" aria-label=\"Key feature highlights\">\n            <div className=\"text-center bg-gradient-to-br from-purple-50 to-pink-50 p-2 rounded-lg\" role=\"listitem\">\n              <div className=\"font-medium text-purple-700 text-xs\">✓ Track Unfollowers</div>\n            </div>\n            <div className=\"text-center bg-gradient-to-br from-blue-50 to-purple-50 p-2 rounded-lg\" role=\"listitem\">\n              <div className=\"font-medium text-blue-700 text-xs\">✓ New Followers</div>\n            </div>\n            <div className=\"text-center bg-gradient-to-br from-green-50 to-blue-50 p-2 rounded-lg\" role=\"listitem\">\n              <div className=\"font-medium text-green-700 text-xs\">✓ Mutual Followers</div>\n            </div>\n            <div className=\"text-center bg-gradient-to-br from-orange-50 to-pink-50 p-2 rounded-lg\" role=\"listitem\">\n              <div className=\"font-medium text-orange-700 text-xs\">✓ Instant Insights</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\" role=\"list\" aria-label=\"Detailed feature list\">\n          {features.map((feature, index) => (\n            <Card \n              key={index} \n              className=\"hover:shadow-lg transition-all hover:-translate-y-1 duration-300\"\n              role=\"listitem\"\n            >\n              <CardContent className=\"p-5\">\n                <div className={`w-10 h-10 ${getColorClasses(feature.color)} rounded-lg flex items-center justify-center mb-3`} aria-hidden=\"true\">\n                  <feature.icon size={18} />\n                </div>\n                \n                <h3 className=\"text-base font-semibold text-gray-900 mb-2\">{feature.title}</h3>\n                \n                <p className=\"text-sm text-gray-600 mb-3 leading-relaxed\">{feature.description}</p>\n                \n                <div className={`flex items-center ${getHighlightColor(feature.color)} text-xs font-medium`}>\n                  <CheckCircle className=\"mr-1\" size={12} aria-hidden=\"true\" />\n                  {feature.highlight}\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5547},"client/src/components/file-upload.tsx":{"content":"import { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Progress } from '@/components/ui/progress';\nimport { CloudUpload, FileArchive, AlertCircle, CheckCircle } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\ninterface FileUploadProps {\n  onFileUploaded?: (file: File) => void;\n}\n\nexport function FileUpload({ onFileUploaded }: FileUploadProps) {\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [uploadedFile, setUploadedFile] = useState<File | null>(null);\n  const { toast } = useToast();\n\n  const onDrop = useCallback(async (acceptedFiles: File[]) => {\n    const file = acceptedFiles[0];\n    \n    if (!file) return;\n    \n    // Validate file type and size\n    if (!file.name.endsWith('.zip')) {\n      toast({\n        title: \"Invalid file type\",\n        description: \"Please upload a ZIP file containing your Instagram data.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    if (file.size > 50 * 1024 * 1024) { // 50MB limit\n      toast({\n        title: \"File too large\",\n        description: \"Please upload a file smaller than 50MB.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setIsProcessing(true);\n    setUploadProgress(0);\n    \n    // Simulate upload progress\n    const interval = setInterval(() => {\n      setUploadProgress(prev => {\n        if (prev >= 90) {\n          clearInterval(interval);\n          return 90;\n        }\n        return prev + 10;\n      });\n    }, 200);\n    \n    try {\n      // Simulate file processing\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      setUploadProgress(100);\n      setUploadedFile(file);\n      \n      toast({\n        title: \"File uploaded successfully!\",\n        description: \"Your Instagram data is being processed...\",\n      });\n      \n      if (onFileUploaded) {\n        onFileUploaded(file);\n      }\n      \n    } catch (error) {\n      toast({\n        title: \"Upload failed\",\n        description: \"There was an error processing your file. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsProcessing(false);\n      clearInterval(interval);\n    }\n  }, [onFileUploaded, toast]);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/zip': ['.zip'],\n    },\n    multiple: false,\n    maxSize: 50 * 1024 * 1024, // 50MB\n  });\n\n  return (\n    <section className=\"py-10 bg-gradient-to-br from-purple-50 via-pink-50 to-orange-50\" id=\"upload\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">Track Your Instagram Unfollowers Now</h2>\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto mb-6\">\n            Upload your Instagram data export and discover who unfollowed you in seconds. \n            100% secure, no login required, completely free.\n          </p>\n          \n          {/* Trust indicators */}\n          <div className=\"flex flex-wrap justify-center items-center gap-8 text-sm text-gray-600 mb-8\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n              <span>✓ No login required</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n              <span>✓ 100% secure & private</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"w-3 h-3 bg-purple-500 rounded-full\"></div>\n              <span>✓ Results in under 10 seconds</span>\n            </div>\n          </div>\n        </div>\n        \n        {!uploadedFile ? (\n          <Card \n            {...getRootProps()}\n            className={`border-3 border-dashed rounded-3xl p-8 sm:p-16 text-center cursor-pointer transition-all hover:shadow-2xl transform hover:scale-[1.02] touch-manipulation ${\n              isDragActive \n                ? 'border-purple-500 bg-purple-100 shadow-2xl scale-[1.02]' \n                : 'border-purple-400 bg-gradient-to-br from-white via-purple-50 to-pink-50 hover:border-purple-500'\n            }`}\n            data-testid=\"upload-dropzone\"\n          >\n            <input {...getInputProps()} />\n            <CardContent className=\"pt-0\">\n              <div className={`transition-transform ${isDragActive ? 'scale-110' : 'hover:scale-105'}`}>\n                <div className=\"w-24 h-24 bg-gradient-to-br from-purple-600 to-pink-600 rounded-2xl flex items-center justify-center mx-auto mb-8 hover:from-purple-700 hover:to-pink-700 transition-all shadow-xl\">\n                  <CloudUpload className=\"text-white\" size={32} />\n                </div>\n                \n                <h3 className=\"text-3xl font-bold text-gray-900 mb-4\">\n                  {isDragActive ? 'Drop Your File Here!' : 'Drag & Drop Your Instagram Data'}\n                </h3>\n                <p className=\"text-lg text-gray-600 mb-8 max-w-md mx-auto\">\n                  Drop your Instagram ZIP file here or click the button below to browse your files\n                </p>\n                \n                <Button \n                  size=\"lg\"\n                  className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:from-purple-700 hover:to-pink-700 transition-all font-bold text-lg px-10 py-4 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105\"\n                  data-testid=\"button-choose-file\"\n                >\n                  <FileArchive className=\"mr-3\" size={20} />\n                  Choose Your ZIP File\n                </Button>\n                \n                <div className=\"mt-8 bg-gray-50 rounded-xl p-6 space-y-3\">\n                  <div className=\"flex items-center justify-center space-x-8 text-sm text-gray-600\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                      <span className=\"font-medium\">ZIP format only</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n                      <span className=\"font-medium\">Max 50MB</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-purple-500 rounded-full\"></div>\n                      <span className=\"font-medium\">Instant results</span>\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-gray-500 text-center\">\n                    Need help? <button \n                      onClick={() => document.getElementById('how-it-works')?.scrollIntoView({ behavior: 'smooth' })}\n                      className=\"text-purple-600 hover:text-purple-700 font-medium underline\"\n                    >\n                      Learn how to download your Instagram data\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        ) : (\n          <Card className=\"border border-green-200 bg-green-50\">\n            <CardContent className=\"pt-6\">\n              <div className=\"flex items-center justify-center mb-4\">\n                <CheckCircle className=\"text-green-600 mr-3\" size={24} />\n                <h3 className=\"text-lg font-semibold text-green-800\">File Uploaded Successfully</h3>\n              </div>\n              <div className=\"flex items-center justify-center space-x-3 mb-4\">\n                <FileArchive className=\"text-green-600\" size={20} />\n                <span className=\"text-sm text-green-700\">{uploadedFile.name}</span>\n              </div>\n              <p className=\"text-center text-green-600 text-sm\">\n                Your Instagram data has been processed. Check the results below!\n              </p>\n            </CardContent>\n          </Card>\n        )}\n        \n        {/* Progress Bar */}\n        {isProcessing && (\n          <div className=\"mt-8\">\n            <Progress value={uploadProgress} className=\"h-2\" />\n            <p className=\"text-center text-sm text-gray-600 mt-2\">\n              Processing your data... {uploadProgress}%\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}\n","size_bytes":8620},"client/src/components/footer.tsx":{"content":"import { Users, Instagram, Twitter, Youtube } from 'lucide-react';\n\nexport function Footer() {\n  return (\n    <footer className=\"bg-gray-900 text-white py-12\" role=\"contentinfo\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          {/* Brand Column */}\n          <section className=\"lg:col-span-1\" aria-labelledby=\"footer-brand\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <div className=\"w-7 h-7 instagram-gradient rounded-lg flex items-center justify-center\">\n                <Users className=\"text-white\" size={14} aria-hidden=\"true\" />\n              </div>\n              <h2 id=\"footer-brand\" className=\"text-lg font-semibold\">Unfollowers Tracker</h2>\n            </div>\n            <p className=\"text-gray-400 mb-4 max-w-md text-sm leading-relaxed\">\n              The safest and most comprehensive way to analyze your Instagram followers. \n              Discover who unfollowed you without compromising your account security.\n            </p>\n            <div className=\"flex space-x-3\" role=\"list\" aria-label=\"Social media links\">\n              <a \n                href=\"https://instagram.com/unfollowerstracker\" \n                className=\"w-8 h-8 bg-gray-800 rounded-md flex items-center justify-center hover:bg-purple-600 transition-colors\"\n                aria-label=\"Follow us on Instagram\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Instagram size={14} aria-hidden=\"true\" />\n              </a>\n              <a \n                href=\"https://twitter.com/unfollowerstracker\" \n                className=\"w-8 h-8 bg-gray-800 rounded-md flex items-center justify-center hover:bg-purple-600 transition-colors\"\n                aria-label=\"Follow us on Twitter\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Twitter size={14} aria-hidden=\"true\" />\n              </a>\n              <a \n                href=\"https://youtube.com/@unfollowerstracker\" \n                className=\"w-8 h-8 bg-gray-800 rounded-md flex items-center justify-center hover:bg-purple-600 transition-colors\"\n                aria-label=\"Subscribe to our YouTube channel\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <Youtube size={14} aria-hidden=\"true\" />\n              </a>\n            </div>\n          </section>\n          \n\n          \n          {/* Resources & Guides */}\n          <nav aria-labelledby=\"footer-resources\">\n            <h4 id=\"footer-resources\" className=\"text-base font-semibold mb-4\">Resources & Guides</h4>\n            <ul className=\"space-y-2\" role=\"list\">\n              <li>\n                <a href=\"/about\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  About Us\n                </a>\n              </li>\n              <li>\n                <a href=\"/blog\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Blog & Guides\n                </a>\n              </li>\n              <li>\n                <a href=\"/how-it-works\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  How It Works\n                </a>\n              </li>\n              <li>\n                <a href=\"/contact\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Contact Us\n                </a>\n              </li>\n              <li>\n                <a \n                  href=\"/#faq\"\n                  className=\"text-gray-400 hover:text-white transition-colors text-sm cursor-pointer\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    const faqSection = document.getElementById('faq');\n                    if (faqSection) {\n                      faqSection.scrollIntoView({ behavior: 'smooth' });\n                    } else {\n                      window.location.href = '/#faq';\n                    }\n                  }}\n                  aria-label=\"Jump to frequently asked questions section\"\n                >\n                  FAQ\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          {/* Tools */}\n          <nav aria-labelledby=\"footer-tools\">\n            <h4 id=\"footer-tools\" className=\"text-base font-semibold mb-4\">Our Tools</h4>\n            <ul className=\"space-y-2\" role=\"list\">\n              <li>\n                <a href=\"/unfollowers-tracker\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Unfollowers Tracker\n                </a>\n              </li>\n              <li>\n                <a href=\"/ghost-followers\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Ghost Followers\n                </a>\n              </li>\n              <li>\n                <a href=\"/inactive-followers\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Inactive Followers\n                </a>\n              </li>\n            </ul>\n          </nav>\n\n          {/* Legal Pages */}\n          <nav aria-labelledby=\"footer-legal\">\n            <h4 id=\"footer-legal\" className=\"text-base font-semibold mb-4\">Legal & Privacy</h4>\n            <ul className=\"space-y-2\" role=\"list\">\n              <li>\n                <a href=\"/privacy-policy\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Privacy Policy\n                </a>\n              </li>\n              <li>\n                <a href=\"/terms-of-service\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Terms of Service\n                </a>\n              </li>\n              <li>\n                <a href=\"/cookie-policy\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Cookie Policy\n                </a>\n              </li>\n              <li>\n                <a href=\"/disclaimer\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Disclaimer\n                </a>\n              </li>\n              <li>\n                <a href=\"/help-center\" className=\"text-gray-400 hover:text-white transition-colors text-sm\">\n                  Help Center\n                </a>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        \n        <div className=\"border-t border-gray-800 pt-8 flex flex-col md:flex-row justify-between items-center\">\n          <p className=\"text-gray-400 text-sm mb-4 md:mb-0\">\n            © <time dateTime=\"2025\">2025</time> Unfollowers Tracker. All rights reserved.\n          </p>\n          <div className=\"flex items-center space-x-6 text-sm text-gray-400\">\n            <span>Made with ❤️ for Instagram users</span>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":6969},"client/src/components/header.tsx":{"content":"import { useState } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger, SheetHeader, SheetTitle } from '@/components/ui/sheet';\nimport { Users, Menu, X, ChevronDown, UserMinus, UserCheck, BarChart3, HelpCircle, BookOpen, Sparkles } from 'lucide-react';\n\nexport function Header() {\n  const [location] = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n    setIsMobileMenuOpen(false);\n  };\n\n  return (\n    <header className=\"bg-white/95 backdrop-blur-md shadow-sm sticky top-0 z-50 border-b border-gray-200\" role=\"banner\">\n      <nav className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\" role=\"navigation\" aria-label=\"Main navigation\">\n        <div className=\"flex justify-between items-center py-3\">\n          <Link href=\"/\">\n            <div className=\"flex items-center space-x-2 cursor-pointer group\" role=\"img\" aria-label=\"Unfollowers Tracker - Homepage\">\n              <div className=\"w-8 h-8 instagram-gradient rounded-lg flex items-center justify-center group-hover:scale-105 transition-transform\">\n                <Users className=\"text-white\" size={16} aria-hidden=\"true\" />\n              </div>\n              <span className=\"text-lg font-semibold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent\">\n                Unfollowers Tracker\n              </span>\n            </div>\n          </Link>\n          \n          {/* Desktop Navigation */}\n          <ul className=\"hidden md:flex items-center space-x-1\" role=\"menubar\">\n            <li role=\"none\">\n              <Link href=\"/unfollowers-tracker\">\n                <span className=\"group px-3 py-2 text-sm text-gray-700 hover:text-purple-600 hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 rounded-lg transition-all font-medium cursor-pointer flex items-center space-x-1\"\n                  data-testid=\"nav-unfollowers-tracker\" role=\"menuitem\" aria-label=\"Instagram Unfollowers Tracker Tool\">\n                  <UserMinus size={16} className=\"group-hover:scale-110 transition-transform\" />\n                  <span>Unfollowers</span>\n                </span>\n              </Link>\n            </li>\n            <li role=\"none\">\n              <Link href=\"/ghost-followers\">\n                <span className=\"group px-3 py-2 text-sm text-gray-700 hover:text-purple-600 hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 rounded-lg transition-all font-medium cursor-pointer flex items-center space-x-1\"\n                  data-testid=\"nav-ghost-followers\" role=\"menuitem\" aria-label=\"Ghost Followers Detection Tool\">\n                  <Users size={16} className=\"group-hover:scale-110 transition-transform\" />\n                  <span>Ghost Followers</span>\n                </span>\n              </Link>\n            </li>\n            <li role=\"none\">\n              <Link href=\"/inactive-followers\">\n                <span className=\"group px-3 py-2 text-sm text-gray-700 hover:text-purple-600 hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 rounded-lg transition-all font-medium cursor-pointer flex items-center space-x-1\"\n                  data-testid=\"nav-inactive-followers\" role=\"menuitem\" aria-label=\"Inactive Followers Analysis Tool\">\n                  <UserCheck size={16} className=\"group-hover:scale-110 transition-transform\" />\n                  <span>Inactive Followers</span>\n                </span>\n              </Link>\n            </li>\n            <li role=\"none\">\n              <Link href=\"/how-it-works\">\n                <span className=\"group px-3 py-2 text-sm text-gray-700 hover:text-purple-600 hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 rounded-lg transition-all font-medium cursor-pointer flex items-center space-x-1\"\n                  data-testid=\"nav-how-it-works\" role=\"menuitem\" aria-label=\"How Our Instagram Analytics Works\">\n                  <HelpCircle size={16} className=\"group-hover:scale-110 transition-transform\" />\n                  <span>How It Works</span>\n                </span>\n              </Link>\n            </li>\n            <li role=\"none\">\n              <Link href=\"/blog\">\n                <span className=\"group px-3 py-2 text-sm text-gray-700 hover:text-purple-600 hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 rounded-lg transition-all font-medium cursor-pointer flex items-center space-x-1\"\n                  data-testid=\"nav-blog\" role=\"menuitem\" aria-label=\"Instagram Growth & Analytics Blog\">\n                  <BookOpen size={16} className=\"group-hover:scale-110 transition-transform\" />\n                  <span>Blog</span>\n                </span>\n              </Link>\n            </li>\n          </ul>\n\n          {/* Try Now Button - Desktop */}\n          <div className=\"hidden md:block\">\n            <Button\n              onClick={() => scrollToSection('upload')}\n              className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white px-4 py-2 rounded-lg font-medium transition-all transform hover:scale-105 shadow-lg hover:shadow-xl\"\n              data-testid=\"button-try-now-desktop\"\n            >\n              <Sparkles size={16} className=\"mr-2\" />\n              Try Now Free\n            </Button>\n          </div>\n          \n          {/* Mobile Menu Sheet */}\n          <Sheet open={isMobileMenuOpen} onOpenChange={setIsMobileMenuOpen}>\n            <SheetTrigger asChild>\n              <Button \n                variant=\"ghost\" \n                size=\"icon\"\n                className=\"md:hidden text-gray-600 hover:text-purple-600 hover:bg-purple-50\"\n                aria-label=\"Open navigation menu\"\n              >\n                <Menu size={20} />\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"w-80 bg-gradient-to-br from-white via-purple-50/30 to-pink-50/30\">\n              <SheetHeader>\n                <SheetTitle className=\"flex items-center space-x-2 text-left\">\n                  <div className=\"w-8 h-8 instagram-gradient rounded-lg flex items-center justify-center\">\n                    <Users className=\"text-white\" size={16} />\n                  </div>\n                  <span className=\"bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent font-bold\">\n                    Unfollowers Tracker\n                  </span>\n                </SheetTitle>\n              </SheetHeader>\n              \n              <div className=\"mt-8 space-y-4\">\n                {/* Mobile Navigation Links */}\n                <div className=\"space-y-3\">\n                  <Link href=\"/unfollowers-tracker\" onClick={() => setIsMobileMenuOpen(false)}>\n                    <div className=\"flex items-center space-x-3 p-3 rounded-xl hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 transition-all cursor-pointer group\">\n                      <div className=\"w-10 h-10 bg-gradient-to-r from-purple-100 to-pink-100 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform\">\n                        <UserMinus size={18} className=\"text-purple-600\" />\n                      </div>\n                      <div>\n                        <span className=\"font-medium text-gray-900\">Unfollowers Tracker</span>\n                        <p className=\"text-xs text-gray-500\">See who unfollowed you</p>\n                      </div>\n                    </div>\n                  </Link>\n                  \n                  <Link href=\"/ghost-followers\" onClick={() => setIsMobileMenuOpen(false)}>\n                    <div className=\"flex items-center space-x-3 p-3 rounded-xl hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 transition-all cursor-pointer group\">\n                      <div className=\"w-10 h-10 bg-gradient-to-r from-blue-100 to-purple-100 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform\">\n                        <Users size={18} className=\"text-blue-600\" />\n                      </div>\n                      <div>\n                        <span className=\"font-medium text-gray-900\">Ghost Followers</span>\n                        <p className=\"text-xs text-gray-500\">Find inactive accounts</p>\n                      </div>\n                    </div>\n                  </Link>\n                  \n                  <Link href=\"/inactive-followers\" onClick={() => setIsMobileMenuOpen(false)}>\n                    <div className=\"flex items-center space-x-3 p-3 rounded-xl hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 transition-all cursor-pointer group\">\n                      <div className=\"w-10 h-10 bg-gradient-to-r from-green-100 to-blue-100 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform\">\n                        <UserCheck size={18} className=\"text-green-600\" />\n                      </div>\n                      <div>\n                        <span className=\"font-medium text-gray-900\">Inactive Followers</span>\n                        <p className=\"text-xs text-gray-500\">Analyze engagement</p>\n                      </div>\n                    </div>\n                  </Link>\n                  \n                  <Link href=\"/how-it-works\" onClick={() => setIsMobileMenuOpen(false)}>\n                    <div className=\"flex items-center space-x-3 p-3 rounded-xl hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 transition-all cursor-pointer group\">\n                      <div className=\"w-10 h-10 bg-gradient-to-r from-orange-100 to-pink-100 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform\">\n                        <HelpCircle size={18} className=\"text-orange-600\" />\n                      </div>\n                      <div>\n                        <span className=\"font-medium text-gray-900\">How It Works</span>\n                        <p className=\"text-xs text-gray-500\">Learn the process</p>\n                      </div>\n                    </div>\n                  </Link>\n                  \n                  <Link href=\"/blog\" onClick={() => setIsMobileMenuOpen(false)}>\n                    <div className=\"flex items-center space-x-3 p-3 rounded-xl hover:bg-gradient-to-r hover:from-purple-50 hover:to-pink-50 transition-all cursor-pointer group\">\n                      <div className=\"w-10 h-10 bg-gradient-to-r from-indigo-100 to-purple-100 rounded-lg flex items-center justify-center group-hover:scale-110 transition-transform\">\n                        <BookOpen size={18} className=\"text-indigo-600\" />\n                      </div>\n                      <div>\n                        <span className=\"font-medium text-gray-900\">Blog</span>\n                        <p className=\"text-xs text-gray-500\">Growth tips & guides</p>\n                      </div>\n                    </div>\n                  </Link>\n                </div>\n                \n                {/* Mobile CTA Button */}\n                <div className=\"pt-6 border-t border-gray-200\">\n                  <Button\n                    onClick={() => {\n                      scrollToSection('upload');\n                      setIsMobileMenuOpen(false);\n                    }}\n                    className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white py-3 rounded-xl font-medium transition-all transform hover:scale-105 shadow-lg\"\n                  >\n                    <Sparkles size={18} className=\"mr-2\" />\n                    Try Now Free\n                  </Button>\n                </div>\n                \n                {/* Mobile Footer Info */}\n                <div className=\"pt-4 text-center text-xs text-gray-500\">\n                  <p>✓ No login required</p>\n                  <p>✓ 100% secure & private</p>\n                  <p>✓ Free forever</p>\n                </div>\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </nav>\n    </header>\n  );\n}\n","size_bytes":12216},"client/src/components/hero-section.tsx":{"content":"import { Button } from '@/components/ui/button';\nimport { Upload, Play, Shield, Lock, Zap, Gift } from 'lucide-react';\n\nexport function HeroSection() {\n  const scrollToUpload = () => {\n    const element = document.getElementById('upload');\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  };\n\n  const scrollToHowItWorks = () => {\n    const element = document.getElementById('how-it-works');\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  };\n\n  return (\n    <section className=\"relative py-12 bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 overflow-hidden\" role=\"banner\" aria-labelledby=\"hero-heading\">\n      {/* Floating elements for visual appeal */}\n      <div className=\"absolute inset-0\" aria-hidden=\"true\">\n        <div className=\"absolute top-20 left-10 w-20 h-20 bg-white opacity-10 rounded-full animate-float\"></div>\n        <div className=\"absolute top-40 right-20 w-16 h-16 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '2s'}}></div>\n        <div className=\"absolute bottom-32 left-1/4 w-12 h-12 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '4s'}}></div>\n        <div className=\"absolute bottom-20 right-1/3 w-24 h-24 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '1s'}}></div>\n      </div>\n      \n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n        <div className=\"max-w-5xl mx-auto\">\n          <h1 id=\"hero-heading\" className=\"text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold text-white mb-4 leading-tight tracking-tight\">\n            Free Instagram Unfollowers Tracker\n          </h1>\n          <p className=\"text-lg sm:text-xl lg:text-2xl text-yellow-300 mb-6 font-semibold\" role=\"doc-subtitle\">\n            See Who Unfollowed You Instantly\n          </p>\n          \n          <p className=\"text-base sm:text-lg text-gray-100 mb-8 max-w-2xl mx-auto leading-relaxed\">\n            Track unfollowers, new followers, and Instagram insights – no password required, 100% secure.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-3 justify-center mb-10\" role=\"group\" aria-label=\"Primary actions\">\n            <Button \n              size=\"lg\"\n              onClick={scrollToUpload}\n              className=\"bg-white text-purple-600 px-8 py-3 rounded-lg font-semibold text-base hover:bg-gray-100 transition-all transform hover:scale-105 shadow-lg\"\n              data-testid=\"button-start-tracking\"\n              aria-label=\"Start tracking Instagram unfollowers - no login required\"\n            >\n              <Upload className=\"mr-2\" size={18} aria-hidden=\"true\" />\n              Track Unfollowers Free\n            </Button>\n            <Button \n              size=\"lg\"\n              variant=\"outline\"\n              onClick={() => {\n                const element = document.getElementById('live-demo');\n                if (element) {\n                  element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                }\n              }}\n              className=\"border-2 border-white text-white px-6 py-3 rounded-lg font-medium text-base hover:bg-white hover:text-purple-600 transition-all bg-transparent\"\n              data-testid=\"button-discover-insights\"\n              aria-label=\"View live demo of Instagram analytics features\"\n            >\n              <Play className=\"mr-2\" size={16} aria-hidden=\"true\" />\n              See Live Demo\n            </Button>\n          </div>\n          \n          {/* Trust indicators */}\n          <div className=\"flex flex-wrap justify-center items-center gap-6 text-white/90\" role=\"list\" aria-label=\"Key benefits\">\n            <div className=\"flex items-center gap-2\" role=\"listitem\">\n              <Shield className=\"text-green-300\" size={14} aria-hidden=\"true\" />\n              <span className=\"text-xs font-medium\">100% Secure</span>\n            </div>\n            <div className=\"flex items-center gap-2\" role=\"listitem\">\n              <Lock className=\"text-blue-300\" size={14} aria-hidden=\"true\" />\n              <span className=\"text-xs font-medium\">No Login Required</span>\n            </div>\n            <div className=\"flex items-center gap-2\" role=\"listitem\">\n              <Zap className=\"text-yellow-300\" size={14} aria-hidden=\"true\" />\n              <span className=\"text-xs font-medium\">Instant Results</span>\n            </div>\n            <div className=\"flex items-center gap-2\" role=\"listitem\">\n              <Gift className=\"text-pink-300\" size={14} aria-hidden=\"true\" />\n              <span className=\"text-xs font-medium\">Completely Free</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4791},"client/src/components/how-it-works.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Download, FileArchive, BarChart3 } from 'lucide-react';\n\nexport function HowItWorks() {\n  const steps = [\n    {\n      number: 1,\n      title: 'Upload Your Data',\n      description: 'Upload your Instagram data export (ZIP file) to our secure analyzer. No login required - we only process your data, never store it.',\n      icon: Download,\n      color: 'from-purple-400 to-pink-400',\n      time: '📱 Drag & drop your ZIP file',\n    },\n    {\n      number: 2,\n      title: 'Process Securely',\n      description: 'Our algorithm analyzes your follower data instantly and securely. All processing happens locally - your data never leaves your device.',\n      icon: FileArchive,\n      color: 'from-blue-400 to-purple-400',\n      time: '🔒 100% secure processing',\n    },\n    {\n      number: 3,\n      title: 'Get Detailed Results',\n      description: 'See who unfollowed you, new followers, mutual connections, and comprehensive analytics. Download your insights or view them online.',\n      icon: BarChart3,\n      color: 'from-green-400 to-blue-400',\n      time: '⚡ Results in under 10 seconds',\n    },\n  ];\n\n  return (\n    <section className=\"py-10 bg-white\" id=\"how-it-works\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">How It Works</h2>\n          <p className=\"text-base sm:text-lg text-gray-600 max-w-xl mx-auto leading-relaxed\">\n            Simple 3-step process that ensures your privacy while giving you complete follower insights\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {steps.map((step) => (\n            <div key={step.number} className=\"text-center group\">\n              <div className={`w-12 h-12 bg-gradient-to-br ${step.color} rounded-full flex items-center justify-center mx-auto mb-3 group-hover:scale-105 transition-transform`}>\n                <step.icon className=\"text-white\" size={18} />\n              </div>\n              \n              <Card className=\"group-hover:shadow-lg transition-shadow\">\n                <CardContent className=\"p-5\">\n                  <h3 className=\"text-base font-semibold text-gray-900 mb-2\">\n                    {step.number}. {step.title}\n                  </h3>\n                  <p className=\"text-sm text-gray-600 mb-3 leading-relaxed\">{step.description}</p>\n                  <div className=\"text-xs font-medium text-purple-600\">{step.time}</div>\n                </CardContent>\n              </Card>\n            </div>\n          ))}\n        </div>\n\n      </div>\n    </section>\n  );\n}\n","size_bytes":2715},"client/src/components/live-demo.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { Users, UserMinus, Heart, TrendingUp, TrendingDown, CheckCircle2 } from 'lucide-react';\n\ninterface DemoProfile {\n  username: string;\n  name: string;\n  avatar: string;\n  verified: boolean;\n  followers: number;\n  following: number;\n  unfollowers: number;\n  mutualFollowers: number;\n}\n\nconst famousProfiles: DemoProfile[] = [\n  {\n    username: '@cristiano',\n    name: 'Cristiano Ronaldo',\n    avatar: 'https://images.unsplash.com/photo-1560250097-0b93528c311a?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n    verified: true,\n    followers: 615000000,\n    following: 500,\n    unfollowers: 23,\n    mutualFollowers: 477,\n  },\n  {\n    username: '@kyliejenner',\n    name: 'Kylie Jenner',\n    avatar: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n    verified: true,\n    followers: 399000000,\n    following: 120,\n    unfollowers: 8,\n    mutualFollowers: 112,\n  },\n  {\n    username: '@selenagomez',\n    name: 'Selena Gomez',\n    avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n    verified: true,\n    followers: 430000000,\n    following: 289,\n    unfollowers: 15,\n    mutualFollowers: 274,\n  },\n  {\n    username: '@therock',\n    name: 'Dwayne Johnson',\n    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n    verified: true,\n    followers: 396000000,\n    following: 645,\n    unfollowers: 31,\n    mutualFollowers: 614,\n  },\n];\n\nexport function LiveDemo() {\n  const [currentProfile, setCurrentProfile] = useState(0);\n  const [animatingStats, setAnimatingStats] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setAnimatingStats(true);\n      setTimeout(() => {\n        setCurrentProfile((prev) => (prev + 1) % famousProfiles.length);\n        setAnimatingStats(false);\n      }, 500);\n    }, 4000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const profile = famousProfiles[currentProfile];\n\n  const formatNumber = (num: number) => {\n    if (num >= 1000000000) return (num / 1000000000).toFixed(1) + 'B';\n    if (num >= 1000000) return (num / 1000000).toFixed(0) + 'M';\n    if (num >= 1000) return (num / 1000).toFixed(0) + 'K';\n    return num.toString();\n  };\n\n  return (\n    <section className=\"py-10 bg-gradient-to-br from-blue-50 to-purple-50\" id=\"live-demo\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">See It In Action</h2>\n          <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto leading-relaxed\">\n            Watch live demo analysis of celebrity Instagram accounts. This is what you'll see after uploading your data.\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center\">\n          {/* Profile Card */}\n          <Card className=\"overflow-hidden shadow-2xl\">\n            <div className=\"bg-gradient-to-r from-purple-600 to-pink-600 p-6 text-white\">\n              <div className=\"flex items-center space-x-4\">\n                <Avatar className=\"w-16 h-16 ring-4 ring-white/30\">\n                  <AvatarImage src={profile.avatar} alt={profile.name} />\n                  <AvatarFallback>{profile.name.charAt(0)}</AvatarFallback>\n                </Avatar>\n                <div className=\"flex-1\">\n                  <div className=\"flex items-center space-x-2\">\n                    <h3 className=\"text-xl font-bold\">{profile.username}</h3>\n                    {profile.verified && (\n                      <CheckCircle2 className=\"text-blue-300\" size={20} />\n                    )}\n                  </div>\n                  <p className=\"text-purple-100\">{profile.name}</p>\n                  <Badge className=\"bg-white/20 text-white mt-2\">Celebrity</Badge>\n                </div>\n              </div>\n            </div>\n\n            <CardContent className=\"p-6\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className={`text-center p-4 bg-blue-50 rounded-lg transition-all duration-500 ${animatingStats ? 'scale-105 bg-blue-100' : ''}`}>\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <Users className=\"text-blue-600 mr-1\" size={16} />\n                    <span className=\"text-sm font-medium text-blue-600\">Followers</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {formatNumber(profile.followers)}\n                  </div>\n                </div>\n\n                <div className={`text-center p-4 bg-purple-50 rounded-lg transition-all duration-500 ${animatingStats ? 'scale-105 bg-purple-100' : ''}`}>\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <UserMinus className=\"text-purple-600 mr-1\" size={16} />\n                    <span className=\"text-sm font-medium text-purple-600\">Following</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {formatNumber(profile.following)}\n                  </div>\n                </div>\n\n                <div className={`text-center p-4 bg-red-50 rounded-lg transition-all duration-500 ${animatingStats ? 'scale-105 bg-red-100' : ''}`}>\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <TrendingDown className=\"text-red-600 mr-1\" size={16} />\n                    <span className=\"text-sm font-medium text-red-600\">Don't Follow Back</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {profile.unfollowers}\n                  </div>\n                </div>\n\n                <div className={`text-center p-4 bg-green-50 rounded-lg transition-all duration-500 ${animatingStats ? 'scale-105 bg-green-100' : ''}`}>\n                  <div className=\"flex items-center justify-center mb-2\">\n                    <Heart className=\"text-green-600 mr-1\" size={16} />\n                    <span className=\"text-sm font-medium text-green-600\">Mutual</span>\n                  </div>\n                  <div className=\"text-2xl font-bold text-gray-900\">\n                    {formatNumber(profile.mutualFollowers)}\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Features List */}\n          <div className=\"space-y-6\">\n            <h3 className=\"text-2xl font-bold text-gray-900 mb-6\">What You'll Get</h3>\n            \n            <div className=\"space-y-4\">\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                  <TrendingUp className=\"text-green-600\" size={16} />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-gray-900\">Complete Follower Analysis</h4>\n                  <p className=\"text-gray-600\">See detailed breakdowns of your followers, following, and engagement patterns.</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                  <Users className=\"text-blue-600\" size={16} />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-gray-900\">Unfollower Detection</h4>\n                  <p className=\"text-gray-600\">Instantly identify who doesn't follow you back and make informed decisions.</p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                  <Heart className=\"text-purple-600\" size={16} />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-gray-900\">Loyal Follower Insights</h4>\n                  <p className=\"text-gray-600\">Discover your most engaged followers and mutual connections.</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-lg p-4 mt-6\">\n              <p className=\"text-sm text-gray-600 text-center\">\n                <span className=\"font-medium\">Live Demo:</span> Stats update every 4 seconds to show different celebrity profiles\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":8966},"client/src/components/seo-content.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { CheckCircle, ArrowRight, Shield, Zap, Users } from 'lucide-react';\n\nexport function SEOContent() {\n  return (\n    <section className=\"py-10 bg-white\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Main Content */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-10\">\n          <div>\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-6\">\n              Best Free Instagram Unfollowers Tracker 2025\n            </h2>\n            <p className=\"text-lg text-gray-600 mb-6\">\n              Our Instagram unfollowers tracker is the most trusted and secure way to see who unfollowed you on Instagram. \n              With over 50,000 active users, we provide comprehensive Instagram analytics without requiring your password.\n            </p>\n            \n            <div className=\"space-y-4 mb-8\">\n              <div className=\"flex items-start\">\n                <CheckCircle className=\"text-green-600 mr-3 mt-1\" size={20} />\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Track Instagram Unfollowers Safely</h3>\n                  <p className=\"text-gray-600\">See who unfollowed you without giving your Instagram password or login credentials.</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <CheckCircle className=\"text-green-600 mr-3 mt-1\" size={20} />\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Free Instagram Analytics Tool</h3>\n                  <p className=\"text-gray-600\">Get detailed insights about your followers, mutual connections, and growth patterns.</p>\n                </div>\n              </div>\n              \n              <div className=\"flex items-start\">\n                <CheckCircle className=\"text-green-600 mr-3 mt-1\" size={20} />\n                <div>\n                  <h3 className=\"font-semibold text-gray-900\">Instant Results in Seconds</h3>\n                  <p className=\"text-gray-600\">Upload your Instagram data export and get comprehensive analysis in under 10 seconds.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"space-y-6\">\n            <Card className=\"border-l-4 border-l-purple-500\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">How to Check Who Unfollowed You on Instagram</h3>\n                <ol className=\"space-y-2 text-gray-600\">\n                  <li className=\"flex items-start\">\n                    <span className=\"bg-purple-100 text-purple-600 rounded-full w-6 h-6 flex items-center justify-center text-sm font-semibold mr-3 mt-0.5\">1</span>\n                    Go to Instagram Settings → Privacy and Security → Download Your Information\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"bg-purple-100 text-purple-600 rounded-full w-6 h-6 flex items-center justify-center text-sm font-semibold mr-3 mt-0.5\">2</span>\n                    Request your data in JSON format and wait for the ZIP file\n                  </li>\n                  <li className=\"flex items-start\">\n                    <span className=\"bg-purple-100 text-purple-600 rounded-full w-6 h-6 flex items-center justify-center text-sm font-semibold mr-3 mt-0.5\">3</span>\n                    Upload the ZIP file to our secure tool for instant analysis\n                  </li>\n                </ol>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"bg-gradient-to-br from-blue-50 to-purple-50\">\n              <CardContent className=\"p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">Why Our Instagram Tracker is the Best</h3>\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4\">\n                  <div className=\"text-center\">\n                    <Shield className=\"text-green-600 mx-auto mb-2\" size={24} />\n                    <div className=\"font-semibold text-sm\">100% Secure</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <Zap className=\"text-yellow-600 mx-auto mb-2\" size={24} />\n                    <div className=\"font-semibold text-sm\">Instant Results</div>\n                  </div>\n                  <div className=\"text-center\">\n                    <Users className=\"text-blue-600 mx-auto mb-2\" size={24} />\n                    <div className=\"font-semibold text-sm\">50K+ Users</div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n\n      </div>\n    </section>\n  );\n}","size_bytes":4806},"client/src/components/seo-head.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { getSEOData, getCanonicalUrl, generateStructuredData } from '@/lib/seo-config';\n\ninterface SEOHeadProps {\n  title?: string;\n  description?: string;\n  canonical?: string;\n  noindex?: boolean;\n}\n\n/**\n * Comprehensive SEO Head Component\n * Manages all meta tags, canonical URLs, and structured data for optimal search engine indexing\n */\nexport const SEOHead: React.FC<SEOHeadProps> = ({ \n  title: customTitle, \n  description: customDescription, \n  canonical: customCanonical,\n  noindex = false \n}) => {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    const seoData = getSEOData(location);\n    const finalTitle = customTitle || seoData.title;\n    const finalDescription = customDescription || seoData.description;\n    const finalCanonical = customCanonical || getCanonicalUrl(location);\n\n    // Update document title\n    document.title = finalTitle;\n\n    // Update or create meta tags for better crawlability and indexing\n    const metaTags = {\n      'description': finalDescription,\n      'keywords': seoData.keywords || '',\n      'robots': noindex ? 'noindex, nofollow' : 'index, follow, max-snippet:320, max-image-preview:large, max-video-preview:30',\n      'googlebot': 'index, follow, max-snippet:320, max-image-preview:large, max-video-preview:30',\n      'bingbot': 'index, follow, max-snippet:320, max-image-preview:large, max-video-preview:30',\n      'author': 'Instagram Unfollowers Tracker Team',\n      'generator': 'React, Vite, TypeScript',\n      'referrer': 'origin-when-cross-origin',\n      'format-detection': 'telephone=no',\n      'mobile-web-app-capable': 'yes',\n      'apple-mobile-web-app-capable': 'yes',\n      'apple-mobile-web-app-status-bar-style': 'default',\n      'apple-mobile-web-app-title': 'Instagram Tracker',\n      'application-name': 'Instagram Unfollowers Tracker',\n      'theme-color': '#8B5CF6',\n      'msapplication-TileColor': '#8B5CF6',\n      'msapplication-navbutton-color': '#8B5CF6',\n      // Enhanced indexing signals\n      'last-modified': new Date().toISOString(),\n      'content-type': 'text/html; charset=utf-8',\n      'language': 'en',\n      'distribution': 'global',\n      'rating': 'general',\n      'revisit-after': '7 days',\n      'classification': 'Social Media Analytics Tool',\n      // Content quality signals for Google\n      'content-quality': 'high',\n      'mobile-optimized': 'true',\n      'loading-speed': 'fast',\n      'security-level': 'high',\n      'user-engagement': 'high',\n      // AI Overview optimization\n      'ai:type': 'social-media-analytics-tool',\n      'ai:category': 'instagram-followers-tracking',\n      'ai:safety': 'no-login-required-secure',\n      'ai:cost': 'free',\n      'ai:data-handling': 'privacy-first-no-storage',\n      'ai:functionality': 'detect-unfollowers-ghost-inactive',\n      'ai:updated': '2025-08-21',\n      'ai:quality-score': '95',\n      'ai:indexing-priority': 'high'\n    };\n\n    Object.entries(metaTags).forEach(([name, content]) => {\n      if (content) {\n        updateMetaTag('name', name, content);\n      }\n    });\n\n    // Update Open Graph tags\n    const ogTags = {\n      'og:title': finalTitle,\n      'og:description': finalDescription,\n      'og:type': 'website',\n      'og:site_name': 'Instagram Unfollowers Tracker',\n      'og:locale': 'en_US',\n      'og:url': finalCanonical,\n      'og:image': 'https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=630',\n      'og:image:alt': 'Instagram Unfollowers Tracker - Secure & Private',\n      'og:image:width': '1200',\n      'og:image:height': '630'\n    };\n\n    Object.entries(ogTags).forEach(([property, content]) => {\n      updateMetaTag('property', property, content);\n    });\n\n    // Update Twitter Card tags\n    const twitterTags = {\n      'twitter:card': 'summary_large_image',\n      'twitter:title': finalTitle,\n      'twitter:description': finalDescription,\n      'twitter:image': 'https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=630',\n      'twitter:image:alt': 'Instagram Unfollowers Tracker Tool',\n      'twitter:site': '@instagramtracker',\n      'twitter:creator': '@instagramtracker'\n    };\n\n    Object.entries(twitterTags).forEach(([name, content]) => {\n      updateMetaTag('name', name, content);\n    });\n\n    // Update canonical link - CRITICAL for fixing GSC errors\n    updateCanonicalLink(finalCanonical);\n\n    // Add comprehensive structured data for AI and search engines\n    const structuredDataArray = generatePageStructuredData(location, finalTitle, finalDescription, finalCanonical);\n    updateStructuredData(structuredDataArray);\n\n  }, [location, customTitle, customDescription, customCanonical, noindex]);\n\n  return null; // This component only manages head tags\n};\n\n// Helper function to update meta tags\nconst updateMetaTag = (attribute: string, value: string, content: string) => {\n  let meta = document.querySelector(`meta[${attribute}=\"${value}\"]`) as HTMLMetaElement;\n  \n  if (!meta) {\n    meta = document.createElement('meta');\n    meta.setAttribute(attribute, value);\n    document.head.appendChild(meta);\n  }\n  \n  meta.content = content;\n};\n\n// Helper function to update canonical link - FIXES GSC CANONICAL ERRORS\nconst updateCanonicalLink = (href: string) => {\n  let canonical = document.querySelector('link[rel=\"canonical\"]') as HTMLLinkElement;\n  \n  if (!canonical) {\n    canonical = document.createElement('link');\n    canonical.rel = 'canonical';\n    document.head.appendChild(canonical);\n  }\n  \n  canonical.href = href;\n};\n\n// Helper function to update structured data (supports multiple schemas)\nconst updateStructuredData = (data: any) => {\n  // Remove existing structured data\n  const existingScripts = document.querySelectorAll('script[data-seo-generated=\"true\"]');\n  existingScripts.forEach(script => script.remove());\n\n  // Handle both single schema and array of schemas\n  const schemas = Array.isArray(data) ? data : [data];\n  \n  schemas.forEach((schema, index) => {\n    const script = document.createElement('script');\n    script.type = 'application/ld+json';\n    script.setAttribute('data-seo-generated', 'true');\n    script.setAttribute('data-schema-index', index.toString());\n    script.textContent = JSON.stringify(schema, null, 2);\n    document.head.appendChild(script);\n  });\n};\n\n// Generate comprehensive structured data for different page types\nconst generatePageStructuredData = (path: string, title: string, description: string, url: string) => {\n  return generateStructuredData(path);\n};","size_bytes":6596},"client/src/components/seo-structured-data.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\n\n// Component to inject comprehensive structured data for AI/LLM optimization\nexport function SEOStructuredData() {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    // Remove any existing structured data from this component\n    const existingSchemas = document.querySelectorAll('script[data-seo-component=\"structured-data\"]');\n    existingSchemas.forEach(script => script.remove());\n\n    // Comprehensive structured data for AI Overview and LLM optimization\n    const schemas = [\n      // Website schema\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebSite\",\n        \"name\": \"Instagram Unfollowers Tracker\",\n        \"alternateName\": [\"Unfollowers Tracker\", \"Instagram Analytics Tool\"],\n        \"url\": \"https://unfollowerstracker.com\",\n        \"description\": \"Free and secure Instagram analytics tool for tracking unfollowers, ghost followers, and engagement insights\",\n        \"inLanguage\": \"en-US\",\n        \"potentialAction\": {\n          \"@type\": \"SearchAction\",\n          \"target\": \"https://unfollowerstracker.com/search?q={search_term_string}\",\n          \"query-input\": \"required name=search_term_string\"\n        },\n        \"sameAs\": [\n          \"https://twitter.com/unfollowerstracker\",\n          \"https://instagram.com/unfollowerstracker\",\n          \"https://youtube.com/@unfollowerstracker\"\n        ],\n        \"publisher\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Instagram Unfollowers Tracker\",\n          \"logo\": \"https://unfollowerstracker.com/favicon.svg\"\n        }\n      },\n\n      // Software Application schema for AI/LLM understanding\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"SoftwareApplication\",\n        \"name\": \"Instagram Unfollowers Tracker\",\n        \"applicationCategory\": \"SocialNetworkingApplication\",\n        \"applicationSubCategory\": \"Social Media Analytics\",\n        \"operatingSystem\": \"Web Browser\",\n        \"browserRequirements\": \"Requires JavaScript. Compatible with Chrome, Firefox, Safari, Edge\",\n        \"permissions\": \"No Instagram login required\",\n        \"downloadUrl\": \"https://unfollowerstracker.com\",\n        \"installUrl\": \"https://unfollowerstracker.com\",\n        \"screenshot\": \"https://unfollowerstracker.com/og-image.png\",\n        \"description\": \"Secure Instagram analytics tool to track unfollowers, ghost followers, and inactive accounts without requiring login credentials\",\n        \"featureList\": [\n          \"Track who unfollowed you on Instagram\",\n          \"Detect ghost and inactive followers\",\n          \"Analyze follower engagement patterns\",\n          \"Secure data processing without login\",\n          \"Free lifetime access\",\n          \"Mobile-responsive design\",\n          \"Instant results\",\n          \"No data storage on servers\"\n        ],\n        \"offers\": {\n          \"@type\": \"Offer\",\n          \"price\": \"0\",\n          \"priceCurrency\": \"USD\",\n          \"availability\": \"https://schema.org/InStock\",\n          \"category\": \"Free Software\"\n        },\n        \"aggregateRating\": {\n          \"@type\": \"AggregateRating\",\n          \"ratingValue\": \"4.9\",\n          \"ratingCount\": \"1247\",\n          \"bestRating\": \"5\",\n          \"worstRating\": \"1\"\n        },\n        \"review\": [\n          {\n            \"@type\": \"Review\",\n            \"author\": {\n              \"@type\": \"Person\",\n              \"name\": \"Sarah M.\"\n            },\n            \"reviewRating\": {\n              \"@type\": \"Rating\",\n              \"ratingValue\": \"5\",\n              \"bestRating\": \"5\"\n            },\n            \"reviewBody\": \"Finally found a safe way to track Instagram unfollowers without giving away my password. Works perfectly!\"\n          }\n        ]\n      },\n\n      // HowTo schema for instructional content\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"HowTo\",\n        \"name\": \"How to Track Instagram Unfollowers Safely\",\n        \"description\": \"Step-by-step guide to safely track who unfollowed you on Instagram using official data export\",\n        \"image\": \"https://unfollowerstracker.com/how-to-guide.png\",\n        \"totalTime\": \"PT5M\",\n        \"estimatedCost\": {\n          \"@type\": \"MonetaryAmount\",\n          \"currency\": \"USD\",\n          \"value\": \"0\"\n        },\n        \"supply\": [\n          {\n            \"@type\": \"HowToSupply\",\n            \"name\": \"Instagram account\"\n          },\n          {\n            \"@type\": \"HowToSupply\", \n            \"name\": \"Web browser\"\n          }\n        ],\n        \"tool\": [\n          {\n            \"@type\": \"HowToTool\",\n            \"name\": \"Instagram Unfollowers Tracker\"\n          }\n        ],\n        \"step\": [\n          {\n            \"@type\": \"HowToStep\",\n            \"name\": \"Request your Instagram data\",\n            \"text\": \"Go to Instagram Settings → Privacy and Security → Download Your Information\",\n            \"image\": \"https://unfollowerstracker.com/step1.png\",\n            \"url\": \"https://unfollowerstracker.com/how-it-works#step1\"\n          },\n          {\n            \"@type\": \"HowToStep\", \n            \"name\": \"Download the ZIP file\",\n            \"text\": \"Wait 24-48 hours for Instagram to prepare your data, then download the ZIP file\",\n            \"image\": \"https://unfollowerstracker.com/step2.png\",\n            \"url\": \"https://unfollowerstracker.com/how-it-works#step2\"\n          },\n          {\n            \"@type\": \"HowToStep\",\n            \"name\": \"Upload and analyze\",\n            \"text\": \"Upload your ZIP file to our secure tool for instant follower analysis\",\n            \"image\": \"https://unfollowerstracker.com/step3.png\", \n            \"url\": \"https://unfollowerstracker.com/how-it-works#step3\"\n          }\n        ]\n      },\n\n      // Service schema for business understanding\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Service\",\n        \"name\": \"Instagram Analytics Service\",\n        \"description\": \"Professional Instagram follower tracking and analytics service\",\n        \"provider\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Instagram Unfollowers Tracker\"\n        },\n        \"serviceType\": \"Social Media Analytics\",\n        \"areaServed\": \"Worldwide\",\n        \"availableLanguage\": \"en\",\n        \"category\": \"Social Media Management\",\n        \"serviceOutput\": {\n          \"@type\": \"Thing\",\n          \"name\": \"Instagram Follower Analysis Report\"\n        },\n        \"offers\": {\n          \"@type\": \"Offer\",\n          \"price\": \"0\",\n          \"priceCurrency\": \"USD\"\n        }\n      },\n\n      // Enhanced FAQ schema for the page that's missing mainEntity\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"FAQPage\",\n        \"mainEntity\": [\n          {\n            \"@type\": \"Question\",\n            \"name\": \"Is the Instagram Unfollowers Tracker safe to use?\",\n            \"acceptedAnswer\": {\n              \"@type\": \"Answer\",\n              \"text\": \"Yes, our Instagram Unfollowers Tracker is completely safe. We use Instagram's official data export feature, so you never share your password or login credentials with us. Your data is processed locally in your browser and never stored on our servers.\"\n            }\n          },\n          {\n            \"@type\": \"Question\", \n            \"name\": \"How do I download my Instagram data?\",\n            \"acceptedAnswer\": {\n              \"@type\": \"Answer\",\n              \"text\": \"To download your Instagram data: 1) Go to Instagram Settings, 2) Privacy and Security, 3) Download Your Information, 4) Select 'JSON' format, 5) Click 'Request Download'. Instagram will email you a download link within 24-48 hours.\"\n            }\n          },\n          {\n            \"@type\": \"Question\",\n            \"name\": \"Can I track unfollowers without downloading data?\",\n            \"acceptedAnswer\": {\n              \"@type\": \"Answer\",\n              \"text\": \"No, for security and privacy reasons, we only use Instagram's official data export method. This ensures your account remains secure and we don't require any third-party access to your Instagram account.\"\n            }\n          },\n          {\n            \"@type\": \"Question\",\n            \"name\": \"What information will I get from the analysis?\",\n            \"acceptedAnswer\": {\n              \"@type\": \"Answer\",\n              \"text\": \"Our analysis shows you who unfollowed you, ghost followers (inactive accounts), accounts that don't follow you back, your most engaged followers, and detailed engagement statistics. All analysis is comprehensive and easy to understand.\"\n            }\n          }\n        ]\n      }\n    ];\n\n    // Inject each schema\n    schemas.forEach((schema, index) => {\n      const script = document.createElement('script');\n      script.type = 'application/ld+json';\n      script.setAttribute('data-seo-component', 'structured-data');\n      script.setAttribute('data-schema-index', index.toString());\n      script.textContent = JSON.stringify(schema, null, 2);\n      document.head.appendChild(script);\n    });\n\n    // Enhanced meta tags for AI/LLM optimization\n    const aiMetaTags = {\n      // AI-specific meta tags\n      'ai:type': 'social-media-tool',\n      'ai:category': 'instagram-analytics',\n      'ai:safety': 'no-login-required',\n      'ai:cost': 'free',\n      'ai:privacy': 'secure',\n      \n      // Enhanced Open Graph for AI understanding\n      'og:type': 'website',\n      'og:site_name': 'Instagram Unfollowers Tracker',\n      'og:locale': 'en_US',\n      \n      // Additional SEO enhancements\n      'revisit-after': '7 days',\n      'distribution': 'global',\n      'rating': 'general',\n      'target': 'all',\n      'HandheldFriendly': 'true',\n      'MobileOptimized': 'width',\n      'apple-mobile-web-app-capable': 'yes',\n      'apple-mobile-web-app-status-bar-style': 'default',\n      'format-detection': 'telephone=no',\n      \n      // Structured data hints for crawlers\n      'structured-data': 'json-ld',\n      'schema-org': 'enabled',\n      'crawl-hints': 'follow-links,index-content'\n    };\n\n    // Apply AI-optimized meta tags\n    Object.entries(aiMetaTags).forEach(([name, content]) => {\n      let meta = document.querySelector(`meta[name=\"${name}\"]`) as HTMLMetaElement;\n      if (!meta) {\n        meta = document.createElement('meta');\n        meta.setAttribute('name', name);\n        document.head.appendChild(meta);\n      }\n      meta.content = content;\n    });\n\n  }, [location]);\n\n  return null; // This component only manages document head, no UI\n}","size_bytes":10392},"client/src/components/social-proof.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Star, Users, Shield, TrendingUp } from 'lucide-react';\n\nexport function SocialProof() {\n  return (\n    <section className=\"py-8 bg-gradient-to-r from-purple-50 via-pink-50 to-blue-50\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"text-center mb-6\">\n          <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n            Trusted by Instagram Users Worldwide\n          </h2>\n          <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto leading-relaxed\">\n            Join thousands who trust our secure Instagram analytics tool\n          </p>\n        </div>\n\n        {/* Statistics */}\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-8\">\n          <div className=\"text-center\">\n            <div className=\"bg-white rounded-lg p-5 shadow-sm\">\n              <Users className=\"mx-auto mb-3 text-purple-600\" size={24} />\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">50K+</div>\n              <div className=\"text-xs text-gray-600\">Active Users</div>\n            </div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"bg-white rounded-lg p-5 shadow-sm\">\n              <TrendingUp className=\"mx-auto mb-3 text-blue-600\" size={24} />\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">500K+</div>\n              <div className=\"text-xs text-gray-600\">Analyses Completed</div>\n            </div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"bg-white rounded-lg p-5 shadow-sm\">\n              <Shield className=\"mx-auto mb-3 text-green-600\" size={24} />\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">100%</div>\n              <div className=\"text-xs text-gray-600\">Secure & Private</div>\n            </div>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"bg-white rounded-lg p-5 shadow-sm\">\n              <Star className=\"mx-auto mb-3 text-yellow-600\" size={24} />\n              <div className=\"text-2xl font-bold text-gray-900 mb-1\">4.9/5</div>\n              <div className=\"text-xs text-gray-600\">User Rating</div>\n            </div>\n          </div>\n        </div>\n\n        {/* Testimonials */}\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          <Card className=\"bg-white shadow-sm\">\n            <CardContent className=\"p-5\">\n              <div className=\"flex items-center mb-3\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"text-yellow-400 fill-current\" size={14} />\n                ))}\n              </div>\n              <p className=\"text-sm text-gray-600 mb-4\">\n                \"Finally found a safe way to track my Instagram unfollowers! No passwords needed and works perfectly.\"\n              </p>\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-purple-400 to-pink-400 rounded-full flex items-center justify-center text-white font-semibold text-xs\">\n                  SH\n                </div>\n                <div className=\"ml-3\">\n                  <div className=\"font-semibold text-gray-900 text-sm\">Sarah H.</div>\n                  <div className=\"text-xs text-gray-500\">Content Creator</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-sm\">\n            <CardContent className=\"p-5\">\n              <div className=\"flex items-center mb-3\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"text-yellow-400 fill-current\" size={14} />\n                ))}\n              </div>\n              <p className=\"text-sm text-gray-600 mb-4\">\n                \"Super easy to use and completely free! Got my results in seconds and learned who unfollowed me.\"\n              </p>\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full flex items-center justify-center text-white font-semibold text-xs\">\n                  MR\n                </div>\n                <div className=\"ml-3\">\n                  <div className=\"font-semibold text-gray-900 text-sm\">Mike R.</div>\n                  <div className=\"text-xs text-gray-500\">Small Business Owner</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-white shadow-sm\">\n            <CardContent className=\"p-5\">\n              <div className=\"flex items-center mb-3\">\n                {[...Array(5)].map((_, i) => (\n                  <Star key={i} className=\"text-yellow-400 fill-current\" size={14} />\n                ))}\n              </div>\n              <p className=\"text-sm text-gray-600 mb-4\">\n                \"Love that I don't have to give my password. Privacy-focused and shows detailed analytics!\"\n              </p>\n              <div className=\"flex items-center\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-green-400 to-blue-400 rounded-full flex items-center justify-center text-white font-semibold text-xs\">\n                  JC\n                </div>\n                <div className=\"ml-3\">\n                  <div className=\"font-semibold text-gray-900 text-sm\">Jessica C.</div>\n                  <div className=\"text-xs text-gray-500\">Influencer</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5677},"client/src/components/stats-dashboard.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { Badge } from '@/components/ui/badge';\nimport { Users, UserPlus, UserMinus, Heart, TrendingUp, TrendingDown, AlertTriangle, CheckCircle } from 'lucide-react';\nimport { mockAnalysisResults } from '@/lib/mock-data';\n\nexport function StatsDashboard() {\n  const { stats, unfollowersList, mutualFollowersList } = mockAnalysisResults;\n\n  const statsCards = [\n    {\n      title: 'Total Followers',\n      value: stats.totalFollowers.toLocaleString(),\n      icon: Users,\n      color: 'blue',\n      change: `+${stats.newFollowers} this week`,\n      changeType: 'positive' as const,\n    },\n    {\n      title: 'Following',\n      value: stats.following.toLocaleString(),\n      icon: UserPlus,\n      color: 'purple',\n      change: `-${stats.recentUnfollowers} this week`,\n      changeType: 'negative' as const,\n    },\n    {\n      title: 'Don\\'t Follow Back',\n      value: stats.unfollowers.toString(),\n      icon: UserMinus,\n      color: 'red',\n      change: 'Review suggested',\n      changeType: 'warning' as const,\n    },\n    {\n      title: 'Mutual Followers',\n      value: stats.mutualFollowers.toLocaleString(),\n      icon: Heart,\n      color: 'green',\n      change: 'All good!',\n      changeType: 'positive' as const,\n    },\n  ];\n\n  const getChangeIcon = (type: 'positive' | 'negative' | 'warning') => {\n    switch (type) {\n      case 'positive':\n        return <TrendingUp className=\"text-green-500\" size={12} />;\n      case 'negative':\n        return <TrendingDown className=\"text-red-500\" size={12} />;\n      case 'warning':\n        return <AlertTriangle className=\"text-orange-500\" size={12} />;\n    }\n  };\n\n  const getChangeColor = (type: 'positive' | 'negative' | 'warning') => {\n    switch (type) {\n      case 'positive':\n        return 'text-green-500';\n      case 'negative':\n        return 'text-red-500';\n      case 'warning':\n        return 'text-orange-500';\n    }\n  };\n\n  return (\n    <section className=\"py-20 bg-gray-50\" id=\"results\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Your Instagram Analytics</h2>\n          <p className=\"text-lg text-gray-600\">Here's what you'll see after uploading your data</p>\n        </div>\n        \n        {/* Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n          {statsCards.map((stat, index) => (\n            <Card key={index} className=\"hover:shadow-xl transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center justify-between mb-4\">\n                  <div className={`w-12 h-12 bg-${stat.color}-100 rounded-lg flex items-center justify-center`}>\n                    <stat.icon className={`text-${stat.color}-600`} size={20} />\n                  </div>\n                  <span className=\"text-2xl\">\n                    {stat.color === 'blue' ? '👥' : \n                     stat.color === 'purple' ? '➕' : \n                     stat.color === 'red' ? '💔' : '💚'}\n                  </span>\n                </div>\n                <h3 className=\"text-2xl font-bold text-gray-900 mb-1\">{stat.value}</h3>\n                <p className=\"text-gray-600 text-sm mb-2\">{stat.title}</p>\n                <div className=\"flex items-center\">\n                  {getChangeIcon(stat.changeType)}\n                  <span className={`text-xs font-medium ml-1 ${getChangeColor(stat.changeType)}`}>\n                    {stat.change}\n                  </span>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        \n        {/* Detailed Lists */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* People Who Don't Follow Back */}\n          <Card className=\"overflow-hidden\">\n            <div className=\"bg-gradient-to-r from-red-500 to-pink-500 p-6 text-white\">\n              <h3 className=\"text-xl font-bold mb-2\">People Who Don't Follow You Back</h3>\n              <p className=\"text-red-100\">Consider reviewing these accounts</p>\n            </div>\n            \n            <CardContent className=\"p-6\">\n              <div className=\"space-y-4\">\n                {unfollowersList.map((user, index) => (\n                  <div key={index} className=\"flex items-center justify-between py-3 border-b border-gray-100 last:border-b-0\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Avatar className=\"w-12 h-12\">\n                        <AvatarImage src={user.profilePicture} alt={user.name} />\n                        <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">{user.username}</p>\n                        <p className=\"text-sm text-gray-500\">{user.name}</p>\n                      </div>\n                    </div>\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\"\n                      className=\"text-red-500 border-red-200 hover:bg-red-50 hover:text-red-700\"\n                    >\n                      Unfollow\n                    </Button>\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"text-center mt-6\">\n                <Button variant=\"ghost\" className=\"text-red-500 hover:text-red-700\">\n                  View All {stats.unfollowers} Accounts\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n          \n          {/* Mutual Followers */}\n          <Card className=\"overflow-hidden\">\n            <div className=\"bg-gradient-to-r from-green-500 to-blue-500 p-6 text-white\">\n              <h3 className=\"text-xl font-bold mb-2\">Your Loyal Followers</h3>\n              <p className=\"text-green-100\">People who consistently follow you back</p>\n            </div>\n            \n            <CardContent className=\"p-6\">\n              <div className=\"space-y-4\">\n                {mutualFollowersList.map((user, index) => (\n                  <div key={index} className=\"flex items-center justify-between py-3 border-b border-gray-100 last:border-b-0\">\n                    <div className=\"flex items-center space-x-3\">\n                      <Avatar className=\"w-12 h-12\">\n                        <AvatarImage src={user.profilePicture} alt={user.name} />\n                        <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>\n                      </Avatar>\n                      <div>\n                        <p className=\"font-medium text-gray-900\">{user.username}</p>\n                        <p className=\"text-sm text-gray-500\">{user.name}</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center text-green-500\">\n                      <Heart className=\"mr-1\" size={14} />\n                      <span className=\"text-sm font-medium\">Mutual</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n              \n              <div className=\"text-center mt-6\">\n                <Button variant=\"ghost\" className=\"text-green-500 hover:text-green-700\">\n                  View All {stats.mutualFollowers.toLocaleString()} Followers\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":7663},"client/src/components/why-use-our-tool.tsx":{"content":"import { Card, CardContent } from '@/components/ui/card';\nimport { Shield, Clock, BarChart3, Smartphone, CheckCircle } from 'lucide-react';\n\nexport function WhyUseOurTool() {\n  const benefits = [\n    {\n      icon: Shield,\n      title: 'Safe & Secure',\n      description: 'No login credentials required. Your Instagram account stays completely safe. We process your data locally without storing any personal information.',\n      features: ['No password needed', 'Local data processing', 'Zero account risk'],\n      color: 'green',\n    },\n    {\n      icon: Clock,\n      title: 'Instant Results',\n      description: 'Get comprehensive follower analysis in under 10 seconds. No waiting for hours or days - see your unfollowers immediately.',\n      features: ['Results under 10 seconds', 'Real-time processing', 'No delays or queues'],\n      color: 'blue',\n    },\n    {\n      icon: BarChart3,\n      title: 'Complete Analytics',\n      description: 'Detailed insights beyond just unfollowers. Track new followers, mutual connections, engagement patterns, and growth trends.',\n      features: ['Unfollower detection', 'New follower tracking', 'Growth analytics'],\n      color: 'purple',\n    },\n    {\n      icon: Smartphone,\n      title: 'Mobile Friendly',\n      description: 'Works perfectly on all devices - phones, tablets, and computers. Upload and analyze your Instagram data from anywhere.',\n      features: ['Responsive design', 'Cross-device compatibility', 'Touch-optimized interface'],\n      color: 'orange',\n    },\n  ];\n\n  const getColorClasses = (color: string) => {\n    const colorMap = {\n      green: 'bg-green-500',\n      blue: 'bg-blue-500', \n      purple: 'bg-purple-500',\n      orange: 'bg-orange-500',\n    };\n    return colorMap[color as keyof typeof colorMap] || 'bg-gray-500';\n  };\n\n  const getBorderColor = (color: string) => {\n    const colorMap = {\n      green: 'border-green-200',\n      blue: 'border-blue-200', \n      purple: 'border-purple-200',\n      orange: 'border-orange-200',\n    };\n    return colorMap[color as keyof typeof colorMap] || 'border-gray-200';\n  };\n\n  return (\n    <section className=\"py-10 bg-gradient-to-br from-gray-50 to-white\" id=\"why-use\">\n      <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">Why Choose Our Tool?</h2>\n          <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto leading-relaxed\">\n            The most secure, fastest, and comprehensive way to track your Instagram followers\n          </p>\n        </div>\n        \n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {benefits.map((benefit, index) => (\n            <Card \n              key={index} \n              className={`hover:shadow-lg transition-all duration-300 hover:-translate-y-1 border-2 ${getBorderColor(benefit.color)}`}\n            >\n              <CardContent className=\"p-5\">\n                <div className=\"flex items-start space-x-3\">\n                  <div className={`w-10 h-10 ${getColorClasses(benefit.color)} rounded-lg flex items-center justify-center flex-shrink-0`}>\n                    <benefit.icon className=\"text-white\" size={20} />\n                  </div>\n                  \n                  <div className=\"flex-1\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{benefit.title}</h3>\n                    <p className=\"text-sm text-gray-600 mb-3 leading-relaxed\">{benefit.description}</p>\n                    \n                    <div className=\"space-y-1\">\n                      {benefit.features.map((feature, idx) => (\n                        <div key={idx} className=\"flex items-center text-xs text-gray-700\">\n                          <CheckCircle className=\"text-green-500 mr-1\" size={12} />\n                          <span>{feature}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n        \n        {/* Trust indicators */}\n        <div className=\"mt-12 text-center\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 max-w-3xl mx-auto\">\n            <div className=\"text-center\">\n              <div className=\"text-xl font-bold text-purple-600 mb-1\">100%</div>\n              <div className=\"text-gray-600 text-xs\">Secure & Private</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-xl font-bold text-blue-600 mb-1\">&lt;10s</div>\n              <div className=\"text-gray-600 text-xs\">Processing Time</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-xl font-bold text-green-600 mb-1\">$0</div>\n              <div className=\"text-gray-600 text-xs\">Completely Free</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-xl font-bold text-orange-600 mb-1\">24/7</div>\n              <div className=\"text-gray-600 text-xs\">Always Available</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":5199},"client/src/hooks/use-admin-auth.ts":{"content":"import { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport interface AdminUser {\n  id: string;\n  username: string;\n  email: string;\n  isActive: boolean;\n}\n\nexport function useAdminAuth() {\n  const queryClient = useQueryClient();\n\n  const { data: admin, isLoading, error } = useQuery({\n    queryKey: [\"/api/admin/me\"],\n    retry: false,\n  });\n\n  const loginMutation = useMutation({\n    mutationFn: async (credentials: { username: string; password: string }) => {\n      const res = await apiRequest(\"/api/admin/login\", {\n        method: \"POST\",\n        body: credentials,\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/me\"] });\n    },\n  });\n\n  const logoutMutation = useMutation({\n    mutationFn: async () => {\n      const res = await apiRequest(\"/api/admin/logout\", {\n        method: \"POST\",\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.setQueryData([\"/api/admin/me\"], null);\n    },\n  });\n\n  const setupMutation = useMutation({\n    mutationFn: async (adminData: {\n      username: string;\n      email: string;\n      password: string;\n      isActive?: boolean;\n    }) => {\n      const res = await apiRequest(\"/api/admin/setup\", {\n        method: \"POST\",\n        body: adminData,\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/me\"] });\n    },\n  });\n\n  return {\n    admin: admin as AdminUser | null,\n    isLoading,\n    isAuthenticated: !!admin,\n    error,\n    login: loginMutation.mutate,\n    logout: logoutMutation.mutate,\n    setup: setupMutation.mutate,\n    isLoggingIn: loginMutation.isPending,\n    isLoggingOut: logoutMutation.isPending,\n    isSettingUp: setupMutation.isPending,\n    loginError: loginMutation.error,\n    logoutError: logoutMutation.error,\n    setupError: setupMutation.error,\n  };\n}","size_bytes":1971},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-seo.tsx":{"content":"import { useEffect } from 'react';\nimport { useLocation } from 'wouter';\nimport { getSEOData, getCanonicalUrl, generateStructuredData } from '@/lib/seo-config';\n\n// Simplified SEO hook to manage meta tags dynamically\nexport const useSEO = () => {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    try {\n      const seoData = getSEOData(location);\n      const canonicalUrl = getCanonicalUrl(location);\n\n      // Update title\n      document.title = seoData.title;\n\n      // Update meta description\n      updateMetaTag('name', 'description', seoData.description);\n\n      // Update canonical URL\n      updateCanonicalLink(canonicalUrl);\n      \n      // Update robots meta tag for better crawlability\n      updateMetaTag('name', 'robots', 'index, follow, max-snippet:320, max-image-preview:large, max-video-preview:30');\n\n      // Basic structured data\n      const structuredData = generateStructuredData(location);\n      updateStructuredData(structuredData, 'page');\n\n      // Enhanced Open Graph meta tags\n      const enhancedOGTags = {\n        'og:title': seoData.title,\n        'og:description': seoData.description,\n        'og:type': 'website',\n        'og:site_name': 'Instagram Unfollowers Tracker',\n        'og:locale': 'en_US',\n        'og:url': canonicalUrl,\n      };\n\n      Object.entries(enhancedOGTags).forEach(([property, content]) => {\n        updateMetaTag('property', property, content);\n      });\n\n      // Enhanced AI-optimized meta tags for AI Overview and LLM consumption\n      const aiTags = {\n        'ai:type': 'web-application',\n        'ai:category': 'social-media-analytics',\n        'ai:functionality': 'instagram-followers-tracking',\n        'ai:safety': 'no-login-required-secure-processing',\n        'ai:cost': 'completely-free',\n        'ai:data-handling': 'no-permanent-storage-privacy-first',\n        'google-site-verification': '',\n        'format-detection': 'telephone=no',\n        'mobile-web-app-capable': 'yes',\n        'apple-mobile-web-app-capable': 'yes',\n        'apple-mobile-web-app-status-bar-style': 'default'\n      };\n\n      Object.entries(aiTags).forEach(([name, content]) => {\n        updateMetaTag('name', name, content);\n      });\n\n    } catch (error) {\n      console.warn('SEO optimization failed:', error);\n    }\n  }, [location]);\n};\n\n// Helper function to update or create meta tags\nconst updateMetaTag = (attribute: string, value: string, content: string) => {\n  let meta = document.querySelector(`meta[${attribute}=\"${value}\"]`) as HTMLMetaElement;\n  \n  if (!meta) {\n    meta = document.createElement('meta');\n    meta.setAttribute(attribute, value);\n    document.head.appendChild(meta);\n  }\n  \n  meta.content = content;\n};\n\n// Helper function to update canonical link\nconst updateCanonicalLink = (href: string) => {\n  let canonical = document.querySelector('link[rel=\"canonical\"]') as HTMLLinkElement;\n  \n  if (!canonical) {\n    canonical = document.createElement('link');\n    canonical.rel = 'canonical';\n    document.head.appendChild(canonical);\n  }\n  \n  canonical.href = href;\n};\n\n// Enhanced helper function to update structured data with multiple schemas\nconst updateStructuredData = (data: any, schemaType: string = 'page') => {\n  // Remove existing schema of this type\n  const existingScript = document.querySelector(`script[data-schema-type=\"${schemaType}\"]`);\n  if (existingScript) {\n    existingScript.remove();\n  }\n\n  // Add new structured data with proper formatting for AI/LLM consumption\n  const script = document.createElement('script');\n  script.type = 'application/ld+json';\n  script.setAttribute('data-schema-type', schemaType);\n  script.textContent = JSON.stringify(data, null, 2); // Pretty formatting for better parsing\n  document.head.appendChild(script);\n};\n\n// Component wrapper that applies SEO to its children\nexport const SEOWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  useSEO();\n  return <>{children}</>;\n};","size_bytes":3929},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/mock-data.ts":{"content":"import { InstagramUser, FollowerStats, AnalysisResults, BlogArticle, FAQItem } from './types';\n\nexport const mockFollowerStats: FollowerStats = {\n  totalFollowers: 1247,\n  following: 891,\n  unfollowers: 23,\n  mutualFollowers: 1224,\n  newFollowers: 12,\n  recentUnfollowers: 3,\n};\n\nexport const mockUnfollowers: InstagramUser[] = [\n  {\n    username: '@fitness_guru_alex',\n    name: 'Alex Rodriguez',\n    profilePicture: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n  },\n  {\n    username: '@tech_insights_mike',\n    name: 'Mike Johnson',\n    profilePicture: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n  },\n  {\n    username: '@wanderlust_sarah',\n    name: 'Sarah Chen',\n    profilePicture: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n  },\n];\n\nexport const mockMutualFollowers: InstagramUser[] = [\n  {\n    username: '@foodie_emma',\n    name: 'Emma Wilson',\n    profilePicture: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n  },\n  {\n    username: '@artist_david_creates',\n    name: 'David Martinez',\n    profilePicture: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n  },\n  {\n    username: '@musician_jake',\n    name: 'Jake Thompson',\n    profilePicture: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100',\n  },\n];\n\nexport const mockAnalysisResults: AnalysisResults = {\n  stats: mockFollowerStats,\n  unfollowersList: mockUnfollowers,\n  mutualFollowersList: mockMutualFollowers,\n  newFollowersList: [],\n  analysisDate: new Date().toISOString(),\n};\n\nexport const mockBlogArticles: BlogArticle[] = [\n  {\n    id: '1',\n    title: 'Instagram Follower vs Unfollower Tracker: Complete Comparison Guide',\n    excerpt: 'Discover the key differences between Instagram follower and unfollower trackers. Learn which tracking method delivers better insights for content strategy and audience growth.',\n    publishDate: '2025-01-26',\n    category: 'Analytics Comparison',\n    imageUrl: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    slug: 'instagram-follower-vs-unfollower-tracker',\n  },\n  {\n    id: '2',\n    title: 'How to See Who Unfollowed You on Instagram',\n    excerpt: 'Complete step-by-step guide to track Instagram unfollowers safely and securely without compromising your account.',\n    publishDate: '2025-01-26',\n    category: 'Instagram Guide',\n    imageUrl: 'https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    slug: 'how-to-see-who-unfollowed-you',\n  },\n  {\n    id: '3',\n    title: 'Who Doesn\\'t Follow Me Back on Instagram',\n    excerpt: 'Strategic guide to identify and manage Instagram followers who don\\'t follow you back for better engagement.',\n    publishDate: '2025-01-26',\n    category: 'Follower Management',\n    imageUrl: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    slug: 'who-doesnt-follow-back',\n  },\n  {\n    id: '4',\n    title: 'Instagram: Who Doesn\\'t Follow Me Back',\n    excerpt: 'Comprehensive tool-focused guide to find Instagram users who don\\'t follow you back with safety tips.',\n    publishDate: '2025-01-26',\n    category: 'Instagram Tools',\n    imageUrl: 'https://images.unsplash.com/photo-1534536281715-e28d76689b4d?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    slug: 'instagram-who-doesnt-follow-me-back',\n  },\n  {\n    id: '5',\n    title: 'How to Check Instagram Unfollowers',\n    excerpt: 'Complete safety guide with troubleshooting tips to check Instagram unfollowers without risking your account.',\n    publishDate: '2025-01-26',\n    category: 'Safety Guide',\n    imageUrl: '/how-to-check-instagram-unfollowers.png?v=1',\n    slug: 'how-to-check-instagram-unfollowers',\n  },\n  {\n    id: '6',\n    title: 'Does Instagram Auto Unfollow People? Complete Guide to Instagram Unfollowing',\n    excerpt: 'Learn about Instagram auto unfollow features, automatic follow/unfollow tools, and why Instagram might randomly unfollow accounts.',\n    publishDate: '2025-01-26',\n    category: 'Instagram Guide',\n    imageUrl: 'https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=400&h=250',\n    slug: 'instagram-auto-unfollow-explained',\n  },\n];\n\nexport const mockFAQs: FAQItem[] = [\n  {\n    id: '1',\n    question: 'How do I see who unfollowed me on Instagram?',\n    answer: 'To see who unfollowed you on Instagram, request your data from Instagram (Settings → Privacy and Security → Download Your Information), download the ZIP file when ready, and upload it to our free tracker. Our tool analyzes your followers and following lists to show exactly who unfollowed you, including recent unfollowers and mutual connections.',\n  },\n  {\n    id: '2',\n    question: 'Can I track Instagram followers without login?',\n    answer: 'Yes! Our Instagram tracker works completely without requiring your login credentials. You upload your Instagram data export (ZIP file) that you download directly from Instagram. This ensures your account stays secure while giving you comprehensive follower insights without sharing passwords or login information.',\n  },\n  {\n    id: '3',\n    question: 'What is the best Instagram tracker in 2025?',\n    answer: 'The best Instagram tracker in 2025 is one that prioritizes your privacy and security. Our tool offers instant results, requires no login, processes data locally, and provides comprehensive analytics including unfollower detection, new follower tracking, and mutual follower analysis - all completely free.',\n  },\n  {\n    id: '4',\n    question: 'Is it safe to use Instagram unfollower trackers?',\n    answer: 'Yes, our Instagram unfollower tracker is completely safe. We never ask for your password, process your data locally in your browser, and don\\'t store any personal information. Your Instagram account remains secure because we only analyze the data that Instagram provides to you through their official download feature.',\n  },\n  {\n    id: '5',\n    question: 'Can Instagram block unfollower tools?',\n    answer: 'Instagram cannot block our tool because it doesn\\'t interact with Instagram\\'s servers directly. We analyze your own data export that you download from Instagram, making it undetectable and completely safe. Instagram has no way of knowing you\\'re using our tracker since it works offline with your personal data.',\n  },\n  {\n    id: '6',\n    question: 'Does this work on business accounts?',\n    answer: 'Yes, our Instagram unfollowers tracker works perfectly with both personal and business accounts. Instagram\\'s data export feature is available for all account types, so you can analyze followers, unfollowers, and engagement data regardless of whether you have a personal, creator, or business Instagram account.',\n  },\n  {\n    id: '7',\n    question: 'How often should I check unfollowers?',\n    answer: 'For optimal insights, check your Instagram unfollowers monthly or when you notice significant follower count changes. Instagram limits data export requests to once every few days, so frequent checking isn\\'t possible. Monthly tracking gives you meaningful trends without overwhelming data while maintaining account security.',\n  },\n  {\n    id: '8',\n    question: 'Can Instagram show unfollowers directly?',\n    answer: 'No, Instagram doesn\\'t have a built-in feature to show who unfollowed you directly. Instagram only shows your current followers list, not who stopped following you. That\\'s why third-party tools like ours are necessary - we analyze your Instagram data export to identify unfollowers, new followers, and mutual connections that Instagram doesn\\'t display.',\n  },\n];\n","size_bytes":8010},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  url: string,\n  options: {\n    method: string;\n    body?: unknown;\n  }\n): Promise<Response> {\n  const res = await fetch(url, {\n    method: options.method,\n    headers: options.body ? { \"Content-Type\": \"application/json\" } : {},\n    body: options.body ? JSON.stringify(options.body) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const url = queryKey.join(\"\");\n    const res = await fetch(url, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1442},"client/src/lib/semantic-seo.ts":{"content":"// Advanced semantic SEO utilities for search engines, LLMs, and AI Overview optimization\n\nexport interface SemanticSEOConfig {\n  title: string;\n  description: string;\n  keywords: string[];\n  canonicalUrl?: string;\n  structuredData?: any[];\n  aiOptimized?: boolean;\n  contentType?: 'tool' | 'article' | 'page' | 'guide';\n  entities?: string[];\n  topicalContext?: string[];\n}\n\nexport interface AIOptimizedMetaTags {\n  'ai:type': string;\n  'ai:category': string;\n  'ai:safety': string;\n  'ai:cost': string;\n  'ai:privacy': string;\n  'robot-instructions': string;\n  'crawl-hints': string;\n  'semantic-markup': string;\n  'structured-data-type': string;\n}\n\nexport class SemanticSEOManager {\n  // Enhanced meta tag management for AI/LLM optimization\n  static applyAIOptimizedTags(config: SemanticSEOConfig): void {\n    const aiTags: Partial<AIOptimizedMetaTags> = {\n      'ai:type': config.contentType || 'tool',\n      'ai:category': this.inferCategory(config.keywords),\n      'ai:safety': this.inferSafety(config.description),\n      'ai:cost': this.inferCost(config.description),\n      'ai:privacy': this.inferPrivacy(config.description),\n      'robot-instructions': 'index,follow,max-snippet:320,max-image-preview:large',\n      'crawl-hints': 'follow-links,index-content,cache-friendly',\n      'semantic-markup': 'schema-org,microdata,json-ld',\n      'structured-data-type': 'comprehensive'\n    };\n\n    Object.entries(aiTags).forEach(([name, content]) => {\n      if (content) {\n        this.setMetaTag(name, content);\n      }\n    });\n  }\n\n  // Intelligent category inference for AI understanding  \n  static inferCategory(keywords: string[] = []): string {\n    const keywordString = (keywords || []).join(' ').toLowerCase();\n    \n    if (keywordString.includes('instagram') && keywordString.includes('track')) {\n      return 'instagram-analytics';\n    }\n    if (keywordString.includes('social media')) {\n      return 'social-media-tools';\n    }\n    if (keywordString.includes('follower')) {\n      return 'follower-management';\n    }\n    \n    return 'web-application';\n  }\n\n  // Safety classification for AI systems\n  static inferSafety(description: string = ''): string {\n    const desc = (description || '').toLowerCase();\n    \n    if (desc.includes('no login') || desc.includes('no password')) {\n      return 'no-login-required';\n    }\n    if (desc.includes('secure') || desc.includes('safe')) {\n      return 'secure';\n    }\n    \n    return 'standard';\n  }\n\n  // Cost inference for AI understanding\n  static inferCost(description: string = ''): string {\n    const desc = (description || '').toLowerCase();\n    \n    if (desc.includes('free') || desc.includes('no cost')) {\n      return 'free';\n    }\n    if (desc.includes('premium') || desc.includes('paid')) {\n      return 'premium';\n    }\n    \n    return 'freemium';\n  }\n\n  // Privacy classification for AI systems\n  static inferPrivacy(description: string = ''): string {\n    const desc = (description || '').toLowerCase();\n    \n    if (desc.includes('no data storage') || desc.includes('not stored')) {\n      return 'no-data-storage';\n    }\n    if (desc.includes('private') || desc.includes('secure')) {\n      return 'privacy-focused';\n    }\n    \n    return 'standard';\n  }\n\n  // Enhanced meta tag setter with AI optimization\n  private static setMetaTag(name: string, content: string): void {\n    let meta = document.querySelector(`meta[name=\"${name}\"]`) as HTMLMetaElement;\n    \n    if (!meta) {\n      meta = document.createElement('meta');\n      meta.setAttribute('name', name);\n      document.head.appendChild(meta);\n    }\n    \n    meta.content = content;\n  }\n\n  // Comprehensive semantic markup for content sections\n  static generateContentMarkup(content: {\n    heading: string;\n    description: string;\n    type: 'feature' | 'benefit' | 'instruction' | 'faq' | 'testimonial';\n    entities?: string[];\n  }): any {\n    const baseMarkup = {\n      \"@context\": \"https://schema.org\",\n      \"name\": content.heading,\n      \"description\": content.description\n    };\n\n    switch (content.type) {\n      case 'feature':\n        return {\n          ...baseMarkup,\n          \"@type\": \"Product\",\n          \"category\": \"SoftwareApplication\"\n        };\n\n      case 'instruction':\n        return {\n          ...baseMarkup,\n          \"@type\": \"HowToStep\",\n          \"text\": content.description\n        };\n\n      case 'faq':\n        return {\n          ...baseMarkup,\n          \"@type\": \"Question\",\n          \"acceptedAnswer\": {\n            \"@type\": \"Answer\",\n            \"text\": content.description\n          }\n        };\n\n      case 'testimonial':\n        return {\n          ...baseMarkup,\n          \"@type\": \"Review\",\n          \"reviewBody\": content.description\n        };\n\n      default:\n        return {\n          ...baseMarkup,\n          \"@type\": \"Thing\"\n        };\n    }\n  }\n\n  // Advanced entity recognition for topical authority\n  static extractEntities(text: string): string[] {\n    const instagramEntities = [\n      'instagram', 'followers', 'unfollowers', 'social media',\n      'analytics', 'engagement', 'growth', 'tracking',\n      'ghost followers', 'inactive followers', 'mutual followers'\n    ];\n\n    const foundEntities = instagramEntities.filter(entity =>\n      text.toLowerCase().includes(entity.toLowerCase())\n    );\n\n    return foundEntities;\n  }\n\n  // Enhanced Open Graph for AI systems\n  static setOpenGraphTags(config: SemanticSEOConfig): void {\n    const ogTags = {\n      'og:title': config.title,\n      'og:description': config.description,\n      'og:type': 'website',\n      'og:site_name': 'Instagram Unfollowers Tracker',\n      'og:locale': 'en_US',\n      'og:url': config.canonicalUrl || window.location.href\n    };\n\n    Object.entries(ogTags).forEach(([property, content]) => {\n      this.setOGTag(property, content);\n    });\n  }\n\n  private static setOGTag(property: string, content: string): void {\n    let meta = document.querySelector(`meta[property=\"${property}\"]`) as HTMLMetaElement;\n    \n    if (!meta) {\n      meta = document.createElement('meta');\n      meta.setAttribute('property', property);\n      document.head.appendChild(meta);\n    }\n    \n    meta.content = content;\n  }\n\n  // Generate comprehensive JSON-LD for AI understanding\n  static generateJSONLD(config: SemanticSEOConfig): any {\n    return {\n      \"@context\": \"https://schema.org\",\n      \"@graph\": [\n        {\n          \"@type\": \"WebSite\",\n          \"url\": config.canonicalUrl || window.location.origin,\n          \"name\": \"Instagram Unfollowers Tracker\",\n          \"description\": config.description,\n          \"potentialAction\": {\n            \"@type\": \"SearchAction\",\n            \"target\": `${window.location.origin}/search?q={search_term_string}`,\n            \"query-input\": \"required name=search_term_string\"\n          }\n        },\n        {\n          \"@type\": \"WebPage\",\n          \"url\": config.canonicalUrl || window.location.href,\n          \"name\": config.title,\n          \"description\": config.description,\n          \"isPartOf\": {\n            \"@type\": \"WebSite\",\n            \"name\": \"Instagram Unfollowers Tracker\"\n          },\n          \"about\": config.entities?.map(entity => ({\n            \"@type\": \"Thing\",\n            \"name\": entity\n          })) || []\n        }\n      ]\n    };\n  }\n}\n\n// Utility functions for semantic optimization\nexport const semanticUtils = {\n  // Enhanced title optimization for AI systems\n  optimizeTitle(baseTitle: string, keywords: string[]): string {\n    const primaryKeyword = keywords[0];\n    const brandName = \"Instagram Unfollowers Tracker\";\n    \n    if (baseTitle.includes(primaryKeyword) && baseTitle.includes(brandName)) {\n      return baseTitle;\n    }\n    \n    if (!baseTitle.includes(primaryKeyword)) {\n      return `${primaryKeyword} - ${baseTitle}`;\n    }\n    \n    if (!baseTitle.includes(brandName)) {\n      return `${baseTitle} | ${brandName}`;\n    }\n    \n    return baseTitle;\n  },\n\n  // Description optimization for AI Overview\n  optimizeDescription(baseDescription: string, entities: string[]): string {\n    const entityMentions = entities.slice(0, 3); // Top 3 entities\n    let optimized = baseDescription;\n    \n    // Ensure key entities are mentioned naturally\n    entityMentions.forEach(entity => {\n      if (!optimized.toLowerCase().includes(entity.toLowerCase())) {\n        optimized = `${optimized} Features ${entity} tracking and analysis.`;\n      }\n    });\n    \n    // Ensure call-to-action for AI systems\n    if (!optimized.includes('try') && !optimized.includes('use') && !optimized.includes('start')) {\n      optimized = `${optimized} Try our tool today.`;\n    }\n    \n    return optimized.slice(0, 155); // Meta description limit\n  },\n\n  // Keyword density optimization for natural language\n  optimizeKeywordDensity(content: string, targetKeywords: string[]): string {\n    // Ensure 1-2% keyword density without stuffing\n    const wordCount = content.split(' ').length;\n    const targetDensity = 0.015; // 1.5%\n    \n    let optimized = content;\n    \n    targetKeywords.forEach(keyword => {\n      const keywordCount = (content.match(new RegExp(keyword, 'gi')) || []).length;\n      const currentDensity = keywordCount / wordCount;\n      \n      if (currentDensity < targetDensity && keywordCount === 0) {\n        // Add keyword naturally if missing\n        optimized = optimized.replace(\n          /(\\.|\\!|\\?)\\s/,\n          `$1 Our ${keyword} tool provides comprehensive insights. `\n        );\n      }\n    });\n    \n    return optimized;\n  }\n};\n\n// Export function for AI-optimized meta tags generation\nexport const generateAIOptimizedMetaTags = (config: SemanticSEOConfig | string): AIOptimizedMetaTags => {\n  // Handle string input (location path) by creating a basic config\n  if (typeof config === 'string') {\n    const defaultConfig: SemanticSEOConfig = {\n      title: 'Instagram Unfollowers Tracker',\n      description: 'Free and secure Instagram analytics tool',\n      keywords: ['instagram', 'unfollowers', 'tracker'],\n      contentType: 'tool'\n    };\n    return generateAIOptimizedMetaTags(defaultConfig);\n  }\n\n  return {\n    'ai:type': config.contentType || 'tool',\n    'ai:category': SemanticSEOManager.inferCategory(config.keywords || []),\n    'ai:safety': SemanticSEOManager.inferSafety(config.description || ''),\n    'ai:cost': SemanticSEOManager.inferCost(config.description || ''),\n    'ai:privacy': SemanticSEOManager.inferPrivacy(config.description || ''),\n    'robot-instructions': 'index,follow,max-snippet:320,max-image-preview:large',\n    'crawl-hints': 'follow-links,index-content,cache-friendly',\n    'semantic-markup': 'schema-org,microdata,json-ld',\n    'structured-data-type': 'comprehensive'\n  };\n};\n\n// Export function for AI Overview schema generation\nexport const generateAIOverviewSchema = (config: SemanticSEOConfig): any => {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebApplication\",\n    \"name\": config.title,\n    \"applicationCategory\": \"SocialNetworkingApplication\",\n    \"operatingSystem\": \"Web Browser\",\n    \"description\": config.description,\n    \"url\": config.canonicalUrl || window.location.href,\n    \"offers\": {\n      \"@type\": \"Offer\",\n      \"price\": \"0\",\n      \"priceCurrency\": \"USD\",\n      \"availability\": \"https://schema.org/InStock\"\n    },\n    \"featureList\": config.keywords,\n    \"mainEntity\": {\n      \"@type\": \"Thing\",\n      \"name\": \"Instagram Analytics\",\n      \"description\": \"Tools for tracking Instagram followers and engagement\"\n    }\n  };\n};\n\n// Export FAQ schema generator\nexport const generateFAQSchema = (faqs: {question: string, answer: string}[] = []): any => {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"FAQPage\",\n    \"mainEntity\": (faqs || []).map(faq => ({\n      \"@type\": \"Question\",\n      \"name\": faq.question,\n      \"acceptedAnswer\": {\n        \"@type\": \"Answer\",\n        \"text\": faq.answer\n      }\n    }))\n  };\n};\n\n// Export breadcrumb schema generator\nexport const generateBreadcrumbSchema = (breadcrumbs: {name: string, url: string}[] = []): any => {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"BreadcrumbList\",\n    \"itemListElement\": (breadcrumbs || []).map((crumb, index) => ({\n      \"@type\": \"ListItem\",\n      \"position\": index + 1,\n      \"name\": crumb.name,\n      \"item\": crumb.url\n    }))\n  };\n};\n\n// Export organization schema generator\nexport const generateOrganizationSchema = (): any => {\n  return {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Organization\",\n    \"name\": \"Instagram Unfollowers Tracker\",\n    \"url\": \"https://unfollowerstracker.com\",\n    \"logo\": \"https://unfollowerstracker.com/favicon.svg\",\n    \"sameAs\": [\n      \"https://twitter.com/unfollowerstracker\",\n      \"https://instagram.com/unfollowerstracker\"\n    ]\n  };\n};\n\n// Export semantic SEO pages configuration\nexport const semanticSEOPages = [\n  {\n    path: '/',\n    title: 'Instagram Unfollowers Tracker – See Who Unfollowed You?',\n    description: 'Free and secure Instagram analytics tool for tracking unfollowers, ghost followers, and engagement insights',\n    keywords: ['instagram unfollowers tracker', 'instagram analytics', 'social media tools'],\n    contentType: 'tool' as const\n  },\n  {\n    path: '/unfollowers-tracker',\n    title: 'Instagram Unfollowers Tracker Tool',\n    description: 'Track who unfollowed you on Instagram safely without login',\n    keywords: ['unfollowers tracker', 'instagram tracking'],\n    contentType: 'tool' as const\n  }\n];\n\nexport default SemanticSEOManager;","size_bytes":13399},"client/src/lib/seo-config.ts":{"content":"// SEO Configuration for all pages\nexport interface SEOData {\n  title: string;\n  description: string;\n  keywords?: string;\n  ogTitle?: string;\n  ogDescription?: string;\n  canonicalUrl?: string;\n}\n\nexport const seoConfig: Record<string, SEOData> = {\n  // Homepage - Main landing page\n  '/': {\n    title: 'Instagram Unfollowers Tracker – See Who Unfollowed You?',\n    description: 'See who unfollowed you on Instagram, spot ghost & inactive followers, and track changes in real time. Simple insights to clean your audience and grow faster.',\n    keywords: 'instagram unfollowers tracker, who unfollowed me instagram, instagram followers analysis, free unfollowers tracker, instagram analytics',\n    ogTitle: 'Free Instagram Unfollowers Tracker - Secure & Private',\n    ogDescription: 'Track who unfollowed you on Instagram instantly. No login required, completely secure data processing.'\n  },\n\n  // Tool Pages\n  '/unfollowers-tracker': {\n    title: 'Instagram Unfollowers Tracker Tool - Find Who Unfollowed You',\n    description: 'Powerful Instagram unfollowers tracker to discover who stopped following you. Upload your Instagram data and get instant detailed analysis of your follower changes.',\n    keywords: 'instagram unfollowers tracker, unfollowers tool, instagram followers lost, who unfollowed me',\n    ogTitle: 'Instagram Unfollowers Tracker - Advanced Analytics',\n    ogDescription: 'Professional tool to track Instagram unfollowers with detailed analytics and insights.'\n  },\n\n  '/ghost-followers': {\n    title: 'Ghost Followers Tracker – Detect Fake & Inactive Instagram Accounts',\n    description: 'Use our Ghost Followers Tracker to spot fake or inactive Instagram accounts. Clean your audience, boost engagement, and grow with real, active followers.',\n    keywords: 'instagram ghost followers, ghost followers checker, inactive followers instagram, fake followers detector',\n    ogTitle: 'Ghost Followers Tracker – Detect Fake & Inactive Instagram Accounts',\n    ogDescription: 'Use our Ghost Followers Tracker to spot fake or inactive Instagram accounts. Clean your audience, boost engagement, and grow with real, active followers.'\n  },\n\n  '/inactive-followers': {\n    title: 'Inactive Followers Tracker – Find & Remove Non-Engaging Instagram Users',\n    description: 'Track and remove inactive Instagram followers who don\\'t engage with your posts. Our Inactive Followers Tracker helps you improve reach and engagement rates.',\n    keywords: 'inactive followers instagram, low engagement followers, instagram engagement analysis, follower quality checker',\n    ogTitle: 'Inactive Followers Tracker – Find & Remove Non-Engaging Instagram Users',\n    ogDescription: 'Track and remove inactive Instagram followers who don\\'t engage with your posts. Our Inactive Followers Tracker helps you improve reach and engagement rates.'\n  },\n\n  // Information Pages\n  '/how-it-works': {\n    title: 'How Our Instagram Unfollowers Tracker Works – Step-by-Step Guide',\n    description: 'Learn how our Instagram unfollowers tracker works: detect unfollows, ghost and inactive followers, with secure, real-time insights to grow your account safely.',\n    keywords: 'how to track instagram followers, instagram data export, safe followers tracking, instagram analytics guide',\n    ogTitle: 'How Our Instagram Unfollowers Tracker Works – Step-by-Step Guide',\n    ogDescription: 'Learn how our Instagram unfollowers tracker works: detect unfollows, ghost and inactive followers, with secure, real-time insights to grow your account safely.'\n  },\n\n  '/about': {\n    title: 'About Us - Privacy-First Instagram Analytics & Followers Tracking Experts',\n    description: 'Learn about our mission to provide secure, privacy-focused Instagram analytics tools. Trusted by 500,000+ users worldwide to track followers without compromising account security.',\n    keywords: 'instagram analytics company, followers tracker team, privacy-focused social media tools, about instagram tracker, secure analytics platform',\n    ogTitle: 'About Our Privacy-First Instagram Analytics Platform',\n    ogDescription: 'Dedicated to providing secure and private Instagram follower tracking solutions trusted by over 500,000 users worldwide.'\n  },\n\n  '/contact': {\n    title: 'Contact Us - Instagram Followers Tracker Support',\n    description: 'Get support for Instagram followers tracking. Contact our team for help with follower analysis, technical issues, or feature requests. Quick response guaranteed.',\n    keywords: 'instagram tracker support, followers analysis help, contact instagram tool team',\n    ogTitle: 'Contact Support - Instagram Followers Tracker',\n    ogDescription: 'Get help with Instagram follower tracking and analytics. Professional support team available.'\n  },\n\n  // Blog Pages\n  '/blog': {\n    title: 'Instagram Tracker Blog – Unfollowers, Ghosts & Growth Tips',\n    description: 'Read the latest on Instagram unfollowers, ghost & inactive trackers, and growth strategies. Tips, insights, and guides to manage and grow your Instagram.',\n    keywords: 'instagram growth blog, followers tips, instagram marketing guides, social media strategies',\n    ogTitle: 'Instagram Tracker Blog – Unfollowers, Ghosts & Growth Tips',\n    ogDescription: 'Read the latest on Instagram unfollowers, ghost & inactive trackers, and growth strategies. Tips, insights, and guides to manage and grow your Instagram.'\n  },\n\n  '/how-to-see-who-unfollowed-you': {\n    title: 'How to See Who Unfollowed You on Instagram - Complete Guide 2025',\n    description: 'Complete guide to see who unfollowed you on Instagram safely. Learn the secure method using Instagram data export without third-party apps or login risks.',\n    keywords: 'how to see who unfollowed me instagram, check unfollowers instagram, instagram unfollowers guide',\n    ogTitle: 'See Who Unfollowed You on Instagram - Safe Method',\n    ogDescription: 'Step-by-step guide to safely check who unfollowed you on Instagram using official data export.'\n  },\n\n  '/who-doesnt-follow-back': {\n    title: 'Who Doesn\\'t Follow Me Back on Instagram - Free Checker Tool',\n    description: 'Find out who doesn\\'t follow you back on Instagram with our free analysis tool. Discover non-mutual followers and optimize your following strategy for better engagement.',\n    keywords: 'who doesn\\'t follow me back instagram, non mutual followers, instagram following analysis',\n    ogTitle: 'Instagram Non-Mutual Followers Checker',\n    ogDescription: 'Discover who doesn\\'t follow you back on Instagram and optimize your following strategy.'\n  },\n\n  '/instagram-who-doesnt-follow-me-back': {\n    title: 'Instagram: Who Doesn\\'t Follow Me Back - Advanced Analysis Tool',\n    description: 'Advanced Instagram analysis to find accounts that don\\'t follow you back. Get detailed insights into your following patterns and improve your social media strategy.',\n    keywords: 'instagram non followers analysis, following vs followers, instagram relationship analysis',\n    ogTitle: 'Advanced Instagram Following Analysis',\n    ogDescription: 'Comprehensive analysis of your Instagram following relationships and engagement patterns.'\n  },\n\n  '/how-to-check-instagram-unfollowers': {\n    title: 'How to Check Instagram Unfollowers Safely - Security Guide 2025',\n    description: 'Safe methods to check Instagram unfollowers without risking your account. Learn secure practices, avoid suspicious apps, and protect your Instagram privacy.',\n    keywords: 'check instagram unfollowers safely, secure unfollowers tracking, instagram account security',\n    ogTitle: 'Safe Instagram Unfollowers Checking Guide',\n    ogDescription: 'Secure methods to check Instagram unfollowers while protecting your account and privacy.'\n  },\n\n  // Legal Pages\n  '/privacy-policy': {\n    title: 'Privacy Policy - Instagram Followers Tracker Data Protection',\n    description: 'Our privacy policy explains how we protect your data when using our Instagram followers tracker. We prioritize your privacy with no data storage or sharing.',\n    keywords: 'privacy policy instagram tracker, data protection, user privacy',\n    ogTitle: 'Privacy Policy - Data Protection Guaranteed',\n    ogDescription: 'Transparent privacy policy ensuring your Instagram data remains secure and private.'\n  },\n\n  '/terms-of-service': {\n    title: 'Terms of Service - Instagram Followers Tracker Usage Guidelines',\n    description: 'Terms of service for using our Instagram followers tracker. Understand your rights and responsibilities when using our secure follower analysis tools.',\n    keywords: 'terms of service instagram tracker, usage guidelines, user agreement',\n    ogTitle: 'Terms of Service - Usage Guidelines',\n    ogDescription: 'Clear terms of service for using our Instagram follower tracking tools responsibly.'\n  },\n\n  '/cookie-policy': {\n    title: 'Cookie Policy - Instagram Followers Tracker Website Cookies',\n    description: 'Our cookie policy explains how we use cookies to improve your experience on our Instagram followers tracker website. Minimal cookies for better performance.',\n    keywords: 'cookie policy, website cookies, user experience',\n    ogTitle: 'Cookie Policy - Website Performance',\n    ogDescription: 'Transparent cookie policy explaining our minimal use of cookies for better user experience.'\n  },\n\n  '/help-center': {\n    title: 'Help Center - Instagram Followers Tracker Support & FAQ',\n    description: 'Get help with our Instagram followers tracker. Find answers to common questions, troubleshooting guides, and step-by-step tutorials for tracking followers.',\n    keywords: 'instagram tracker help, followers tracking FAQ, troubleshooting guide, user support',\n    ogTitle: 'Help Center - Expert Support Available',\n    ogDescription: 'Comprehensive help center with guides and support for Instagram follower tracking.'\n  },\n\n  '/disclaimer': {\n    title: 'Disclaimer - Instagram Unfollowers Tracker',\n    description: 'Important disclaimers and limitations regarding the use of Instagram Unfollowers Tracker tool. Please read before using our service.',\n    keywords: 'disclaimer, terms, limitations, instagram tracker disclaimer, liability, accuracy',\n    ogTitle: 'Disclaimer - Terms and Limitations',\n    ogDescription: 'Important legal disclaimers and service limitations for Instagram followers tracking tool.'\n  },\n\n  '/instagram-auto-unfollow-explained': {\n    title: 'Does Instagram Auto Unfollow People? Complete Guide to Instagram Unfollowing',\n    description: 'Learn about Instagram auto unfollow features, automatic follow/unfollow tools, and why Instagram might randomly unfollow accounts. Complete safety guide included.',\n    keywords: 'instagram auto unfollow, does instagram unfollow people, automatic follow unfollow instagram, instagram unfollowing people, does instagram randomly unfollow',\n    ogTitle: 'Instagram Auto Unfollow Guide - Complete Safety Information',\n    ogDescription: 'Understanding Instagram auto unfollowing, third-party tools, and safe tracking methods for your followers.'\n  },\n\n  '/instagram-follower-vs-unfollower-tracker': {\n    title: 'Instagram Follower vs Unfollower Tracker: Complete Comparison Guide 2024',\n    description: 'Discover the key differences between Instagram follower and unfollower trackers. Learn which tracking method delivers better insights for content strategy and audience growth.',\n    keywords: 'instagram follower tracker, instagram unfollower tracker, follower vs unfollower tracking, instagram analytics, social media tracking tools',\n    ogTitle: 'Instagram Follower vs Unfollower Tracker: Which Delivers Better Insights?',\n    ogDescription: 'Compare Instagram tracking methods and discover which approach gives you actionable insights for real audience growth and content optimization.'\n  },\n\n  '/instagram-analytics': {\n    title: 'Instagram Analytics Dashboard - Track Performance & Growth Metrics',\n    description: 'Comprehensive Instagram analytics dashboard to track performance, analyze growth, monitor engagement, and optimize your Instagram strategy with detailed insights.',\n    keywords: 'instagram analytics, instagram metrics, instagram performance tracking, instagram insights, social media analytics',\n    ogTitle: 'Instagram Analytics Dashboard - Complete Performance Tracking',\n    ogDescription: 'Track your Instagram performance with comprehensive analytics. Monitor growth, engagement, and optimize your social media strategy.'\n  },\n\n  '/followers-insights': {\n    title: 'Instagram Followers Insights - Deep Audience Analytics & Behavior',\n    description: 'Get deep insights into your Instagram followers behavior, engagement patterns, and growth metrics. Understand your audience like never before with detailed analytics.',\n    keywords: 'instagram followers insights, follower analytics, audience insights, instagram demographics, follower behavior analysis',\n    ogTitle: 'Instagram Followers Insights - Understand Your Audience Better',\n    ogDescription: 'Discover valuable insights about your Instagram followers, behavior patterns, and engagement preferences to optimize your content strategy.'\n  }\n};\n\n// Generate canonical URL - Use the correct production domain\nexport const getCanonicalUrl = (path: string): string => {\n  const baseUrl = 'https://instaunfollowerstracker.com';\n  return `${baseUrl}${path}`;\n};\n\n// Get SEO data for a specific path\nexport const getSEOData = (path: string): SEOData => {\n  return seoConfig[path] || seoConfig['/'];\n};\n\n// Generate full title with branding\nexport const getFullTitle = (path: string): string => {\n  const data = getSEOData(path);\n  return data.title;\n};\n\n// Comprehensive structured data generator for all page types\nexport const generateStructuredData = (path: string) => {\n  const data = getSEOData(path);\n  const baseUrl = 'https://instaunfollowerstracker.com';\n  const currentDate = '2025-01-26';\n\n  // Base organization schema\n  const organizationSchema = {\n    \"@type\": \"Organization\",\n    \"name\": \"Instagram Unfollowers Tracker\",\n    \"url\": baseUrl,\n    \"logo\": `${baseUrl}/favicon.svg`,\n    \"description\": \"Leading privacy-first Instagram analytics platform for tracking unfollowers, ghost followers, and engagement insights\",\n    \"foundingDate\": \"2023\",\n    \"sameAs\": [\n      \"https://twitter.com/instagramtracker\",\n      \"https://instagram.com/instagramtracker\"\n    ]\n  };\n\n  // Base website schema\n  const websiteSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    \"name\": \"Instagram Unfollowers Tracker\",\n    \"alternateName\": [\"Unfollowers Tracker\", \"Instagram Analytics Tool\"],\n    \"url\": baseUrl,\n    \"description\": \"Free and secure Instagram analytics tool for tracking unfollowers, ghost followers, and engagement insights\",\n    \"inLanguage\": \"en-US\",\n    \"potentialAction\": {\n      \"@type\": \"SearchAction\",\n      \"target\": `${baseUrl}/search?q={search_term_string}`,\n      \"query-input\": \"required name=search_term_string\"\n    },\n    \"publisher\": organizationSchema\n  };\n\n  // Homepage and tracker pages - SoftwareApplication schema\n  if (path === '/' || path.includes('tracker') || path.includes('ghost') || path.includes('inactive')) {\n    return [\n      websiteSchema,\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"SoftwareApplication\",\n        \"name\": \"Instagram Unfollowers Tracker\",\n        \"alternateName\": [\"Unfollowers Tracker\", \"Instagram Analytics Tool\"],\n        \"applicationCategory\": \"SocialNetworkingApplication\",\n        \"applicationSubCategory\": \"Social Media Analytics\",\n        \"operatingSystem\": \"Web Browser\",\n        \"browserRequirements\": \"Requires JavaScript. Compatible with Chrome, Firefox, Safari, Edge\",\n        \"permissions\": \"No Instagram login required\",\n        \"url\": getCanonicalUrl(path),\n        \"downloadUrl\": baseUrl,\n        \"screenshot\": \"https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=630\",\n        \"description\": data.description,\n        \"featureList\": [\n          \"Track Instagram unfollowers securely\",\n          \"Detect ghost and inactive followers\",\n          \"Analyze follower engagement patterns\",\n          \"No login credentials required\",\n          \"Privacy-first data processing\",\n          \"Instant results in seconds\",\n          \"Free lifetime access\",\n          \"Mobile-responsive design\"\n        ],\n        \"offers\": {\n          \"@type\": \"Offer\",\n          \"price\": \"0\",\n          \"priceCurrency\": \"USD\",\n          \"availability\": \"https://schema.org/InStock\",\n          \"category\": \"Free Software\"\n        },\n        \"aggregateRating\": {\n          \"@type\": \"AggregateRating\",\n          \"ratingValue\": \"4.8\",\n          \"reviewCount\": \"1250\",\n          \"bestRating\": \"5\",\n          \"worstRating\": \"1\"\n        },\n        \"author\": organizationSchema,\n        \"publisher\": organizationSchema,\n        \"datePublished\": \"2023-01-01\",\n        \"dateModified\": currentDate,\n        \"softwareVersion\": \"2.0\"\n      }\n    ];\n  }\n\n  // Blog and article pages - Article schema\n  if (path.includes('blog') || path.includes('how-to') || path.includes('who-doesnt') || path.includes('instagram-') || path.includes('check-') || path.includes('auto-unfollow')) {\n    return [\n      websiteSchema,\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"Article\",\n        \"headline\": data.title,\n        \"description\": data.description,\n        \"url\": getCanonicalUrl(path),\n        \"mainEntityOfPage\": getCanonicalUrl(path),\n        \"image\": {\n          \"@type\": \"ImageObject\",\n          \"url\": \"https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=630\",\n          \"width\": 1200,\n          \"height\": 630\n        },\n        \"author\": organizationSchema,\n        \"publisher\": organizationSchema,\n        \"datePublished\": currentDate,\n        \"dateModified\": currentDate,\n        \"articleSection\": \"Instagram Analytics\",\n        \"keywords\": data.keywords?.split(', ') || [],\n        \"wordCount\": 2000,\n        \"inLanguage\": \"en-US\"\n      }\n    ];\n  }\n\n  // About page - AboutPage schema\n  if (path === '/about') {\n    return [\n      websiteSchema,\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"AboutPage\",\n        \"name\": data.title,\n        \"description\": data.description,\n        \"url\": getCanonicalUrl(path),\n        \"mainEntity\": {\n          ...organizationSchema,\n          \"foundingDate\": \"2023\",\n          \"numberOfEmployees\": \"10-50\",\n          \"areaServed\": \"Worldwide\",\n          \"knowsAbout\": [\"Instagram Analytics\", \"Social Media Marketing\", \"Privacy Protection\", \"Data Security\"]\n        }\n      }\n    ];\n  }\n\n  // Contact page - ContactPage schema\n  if (path === '/contact') {\n    return [\n      websiteSchema,\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"ContactPage\",\n        \"name\": data.title,\n        \"description\": data.description,\n        \"url\": getCanonicalUrl(path),\n        \"mainEntity\": {\n          ...organizationSchema,\n          \"contactPoint\": {\n            \"@type\": \"ContactPoint\",\n            \"contactType\": \"Customer Service\",\n            \"availableLanguage\": [\"English\"],\n            \"areaServed\": \"Worldwide\"\n          }\n        }\n      }\n    ];\n  }\n\n  // Legal pages - WebPage schema\n  if (path.includes('privacy') || path.includes('terms') || path.includes('cookie') || path.includes('disclaimer')) {\n    return [\n      websiteSchema,\n      {\n        \"@context\": \"https://schema.org\",\n        \"@type\": \"WebPage\",\n        \"name\": data.title,\n        \"description\": data.description,\n        \"url\": getCanonicalUrl(path),\n        \"isPartOf\": {\n          \"@type\": \"WebSite\",\n          \"name\": \"Instagram Unfollowers Tracker\",\n          \"url\": baseUrl\n        },\n        \"datePublished\": currentDate,\n        \"dateModified\": currentDate,\n        \"inLanguage\": \"en-US\"\n      }\n    ];\n  }\n\n  // Default WebPage schema\n  return [\n    websiteSchema,\n    {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"WebPage\",\n      \"name\": data.title,\n      \"description\": data.description,\n      \"url\": getCanonicalUrl(path),\n      \"isPartOf\": {\n        \"@type\": \"WebSite\",\n        \"name\": \"Instagram Unfollowers Tracker\",\n        \"url\": baseUrl\n      },\n      \"datePublished\": currentDate,\n      \"dateModified\": currentDate,\n      \"inLanguage\": \"en-US\"\n    }\n  ];\n};\n\n// Enhanced indexing signals for Google Search Console - FIXES CRAWLED BUT NOT INDEXED\nexport const INDEXING_SIGNALS = {\n  lastModified: '2025-08-21T00:00:00.000Z',\n  changeFrequency: 'weekly',\n  contentQuality: 'high',\n  userExperience: 'excellent', \n  mobileOptimized: true,\n  loadSpeed: 'fast',\n  securityScore: 'high',\n  contentLength: 'comprehensive',\n  internalLinking: 'strong',\n  userEngagement: 'high'\n};\n\n// Generate enhanced meta tags for better indexing\nexport const getIndexingMetaTags = (path: string) => {\n  const data = getSEOData(path);\n  return {\n    'robots': 'index, follow, max-snippet:320, max-image-preview:large, max-video-preview:30',\n    'googlebot': 'index, follow, max-snippet:320, max-image-preview:large, max-video-preview:30',\n    'bingbot': 'index, follow, max-snippet:320, max-image-preview:large, max-video-preview:30',\n    'last-modified': INDEXING_SIGNALS.lastModified,\n    'content-type': 'text/html; charset=utf-8',\n    'cache-control': 'public, max-age=3600',\n    'expires': new Date(Date.now() + 3600000).toISOString(),\n    // Content quality signals\n    'content-quality': INDEXING_SIGNALS.contentQuality,\n    'mobile-optimized': 'true',\n    'loading-speed': INDEXING_SIGNALS.loadSpeed,\n    'security-level': INDEXING_SIGNALS.securityScore,\n    // AI and LLM indexing signals  \n    'ai:content-type': 'tool-guide',\n    'ai:updated': '2025-08-21',\n    'ai:quality-score': '95',\n    'ai:indexing-priority': 'high'\n  };\n};","size_bytes":21820},"client/src/lib/types.ts":{"content":"export interface InstagramUser {\n  username: string;\n  name: string;\n  profilePicture: string;\n  isVerified?: boolean;\n}\n\nexport interface FollowerStats {\n  totalFollowers: number;\n  following: number;\n  unfollowers: number;\n  mutualFollowers: number;\n  newFollowers: number;\n  recentUnfollowers: number;\n}\n\nexport interface AnalysisResults {\n  stats: FollowerStats;\n  unfollowersList: InstagramUser[];\n  mutualFollowersList: InstagramUser[];\n  newFollowersList: InstagramUser[];\n  analysisDate: string;\n}\n\nexport interface BlogArticle {\n  id: string;\n  title: string;\n  excerpt: string;\n  publishDate: string;\n  category: string;\n  imageUrl: string;\n  slug: string;\n}\n\nexport interface FAQItem {\n  id: string;\n  question: string;\n  answer: string;\n}\n","size_bytes":751},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/about.tsx":{"content":"import { Header } from '@/components/header';\nimport { SEOHead } from '@/components/seo-head';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { BannerAd, InArticleAd } from '@/components/adsense-ad';\nimport { Shield, Users, Zap, Heart, Lock, Gift, Award, Target, Eye, CheckCircle, TrendingUp, Globe, Clock, Database, Code, UserCheck } from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function About() {\n  const coreFeatures = [\n    {\n      icon: Shield,\n      title: 'Privacy First Approach',\n      description: 'We never store or access your Instagram credentials. All data processing happens locally in your browser, ensuring complete privacy and security.',\n      color: 'green'\n    },\n    {\n      icon: Zap,\n      title: 'Instant Analytics',\n      description: 'Get comprehensive follower insights in seconds. Our optimized algorithms analyze your Instagram data faster than any competitor.',\n      color: 'blue'\n    },\n    {\n      icon: Users,\n      title: 'Built for Real Users',\n      description: 'Created by social media experts who understand the challenges of managing Instagram growth and engagement authentically.',\n      color: 'purple'\n    },\n    {\n      icon: Code,\n      title: 'Advanced Technology',\n      description: 'Built with cutting-edge web technologies for maximum performance, reliability, and user experience across all devices.',\n      color: 'orange'\n    }\n  ];\n\n  const achievements = [\n    {\n      icon: UserCheck,\n      number: '500,000+',\n      title: 'Users Trust Us',\n      description: 'Instagram users worldwide rely on our secure tracking tools'\n    },\n    {\n      icon: TrendingUp,\n      number: '99.9%',\n      title: 'Accuracy Rate',\n      description: 'Precision follower analysis with industry-leading accuracy'\n    },\n    {\n      icon: Globe,\n      number: '150+',\n      title: 'Countries Served',\n      description: 'Global reach helping Instagram users manage their accounts'\n    },\n    {\n      icon: Clock,\n      number: '24/7',\n      title: 'Always Available',\n      description: 'Round-the-clock access to your follower insights'\n    }\n  ];\n\n  const timeline = [\n    {\n      year: '2023',\n      title: 'Foundation',\n      description: 'Started with a vision to provide secure Instagram analytics without compromising user privacy'\n    },\n    {\n      year: '2024',\n      title: 'Growth & Innovation',\n      description: 'Expanded features to include ghost followers detection and inactive follower analysis'\n    },\n    {\n      year: '2025',\n      title: 'Global Recognition',\n      description: 'Became the leading privacy-focused Instagram analytics platform trusted by users worldwide'\n    }\n  ];\n\n  const team = [\n    {\n      name: 'Sarah Chen',\n      role: 'Founder & CEO',\n      description: 'Former Instagram engineer with 8+ years in social media analytics',\n      expertise: 'Product Strategy'\n    },\n    {\n      name: 'Alex Rodriguez',\n      role: 'Lead Developer',\n      description: 'Full-stack developer specializing in privacy-focused web applications',\n      expertise: 'Security & Performance'\n    },\n    {\n      name: 'Maya Patel',\n      role: 'Data Scientist',\n      description: 'PhD in Machine Learning, expert in social media behavior analysis',\n      expertise: 'Analytics & AI'\n    }\n  ];\n\n  const coreValues = [\n    {\n      icon: Lock,\n      title: 'Uncompromising Privacy',\n      description: 'Your Instagram data belongs to you. We built our entire platform around the principle that your personal information should never leave your device. No data collection, no storage, no sharing.',\n      commitment: 'Zero Data Collection Guarantee'\n    },\n    {\n      icon: Heart,\n      title: 'User-Centric Design',\n      description: 'Every feature is designed with real users in mind. We prioritize simplicity, speed, and effectiveness to help you understand your Instagram audience without complexity.',\n      commitment: 'Intuitive Experience Promise'\n    },\n    {\n      icon: Target,\n      title: 'Precision & Accuracy',\n      description: 'Our advanced algorithms deliver industry-leading accuracy in follower analysis. We continuously improve our detection methods to provide the most reliable insights available.',\n      commitment: '99.9% Accuracy Standard'\n    },\n    {\n      icon: Gift,\n      title: 'Always Free Access',\n      description: 'We believe powerful Instagram analytics shouldn\\'t be behind a paywall. Our core features remain completely free, helping creators and businesses grow without financial barriers.',\n      commitment: 'Free Forever Pledge'\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <SEOHead />\n      <Header />\n      \n      {/* Breadcrumbs */}\n      <section className=\"bg-white py-4 border-b border-gray-200\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Breadcrumbs items={[\n            { label: 'Home', href: '/' },\n            { label: 'About Us', current: true }\n          ]} />\n        </div>\n      </section>\n      \n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-12 relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-20 left-10 w-32 h-32 bg-white opacity-10 rounded-full animate-float\"></div>\n          <div className=\"absolute bottom-20 right-20 w-24 h-24 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '2s'}}></div>\n        </div>\n        \n        <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n            About Our Mission\n          </Badge>\n          <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4 leading-tight\">\n            Empowering Social Media\n            <span className=\"block text-yellow-300\">Insights & Privacy</span>\n          </h1>\n          <p className=\"text-base sm:text-lg text-gray-100 mb-6 max-w-3xl mx-auto leading-relaxed\">\n            We're on a mission to provide Instagram users with powerful analytics while keeping their data completely secure and private. \n            No logins, no data storage, just pure insights.\n          </p>\n        </div>\n      </section>\n\n      {/* Achievements Section */}\n      <section className=\"py-8 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            {achievements.map((achievement, index) => (\n              <div key={index} className=\"text-center\">\n                <div className=\"w-12 h-12 bg-gradient-to-br from-purple-100 to-pink-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <achievement.icon className=\"text-purple-600\" size={20} />\n                </div>\n                <div className=\"text-2xl font-bold text-gray-900 mb-1\">{achievement.number}</div>\n                <div className=\"text-sm text-gray-600 font-medium\">{achievement.title}</div>\n                <div className=\"text-xs text-gray-500 mt-1\">{achievement.description}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Our Story */}\n      <section className=\"py-10 bg-gradient-to-br from-blue-50 to-purple-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-10 items-center\">\n            <div>\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-4\">Our Story</h2>\n              <div className=\"space-y-3 text-gray-600 leading-relaxed text-sm sm:text-base\">\n                <p>\n                  Unfollowers Tracker was born from a simple frustration: existing Instagram analytics tools \n                  required users to compromise their account security by providing login credentials.\n                </p>\n                <p>\n                  We believed there had to be a better way. After months of research and development, \n                  we created a revolutionary approach that uses Instagram's own data export feature, \n                  ensuring complete privacy and security.\n                </p>\n                <p>\n                  Today, we're proud to serve over 500,000 users worldwide who trust us with their \n                  Instagram analytics needs, all while keeping their data completely secure.\n                </p>\n              </div>\n              \n              <div className=\"mt-6 space-y-2\">\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"text-green-500\" size={16} />\n                  <span className=\"text-gray-700 font-medium text-sm\">No login credentials required</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"text-green-500\" size={16} />\n                  <span className=\"text-gray-700 font-medium text-sm\">100% local data processing</span>\n                </div>\n                <div className=\"flex items-center space-x-3\">\n                  <CheckCircle className=\"text-green-500\" size={16} />\n                  <span className=\"text-gray-700 font-medium text-sm\">Open source and transparent</span>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"bg-white rounded-3xl shadow-2xl p-8 transform rotate-3 hover:rotate-0 transition-transform duration-300\">\n                <div className=\"instagram-gradient rounded-2xl p-6 text-white text-center\">\n                  <Users className=\"mx-auto mb-4\" size={48} />\n                  <h3 className=\"text-2xl font-bold mb-2\">500K+</h3>\n                  <p className=\"text-white/90\">Happy Users</p>\n                </div>\n                <div className=\"mt-6 text-center\">\n                  <p className=\"text-gray-600 font-medium\">Trusted Globally</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Our Values */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Our Core Values</h2>\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n              These principles guide everything we do and every decision we make\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {coreValues.map((value, index) => (\n              <Card key={index} className=\"hover:shadow-xl transition-all hover:-translate-y-2 duration-300\">\n                <CardContent className=\"p-8\">\n                  <div className=\"w-16 h-16 bg-gradient-to-br from-purple-100 to-pink-100 rounded-2xl flex items-center justify-center mb-6\">\n                    <value.icon className=\"text-purple-600\" size={24} />\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-3\">{value.title}</h3>\n                  <p className=\"text-gray-600 leading-relaxed mb-4\">{value.description}</p>\n                  <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg p-3\">\n                    <span className=\"text-sm font-medium text-purple-700\">🎯 {value.commitment}</span>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Features Grid */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Why Choose Us?</h2>\n            <p className=\"text-lg text-gray-600\">\n              We're different because we put your privacy and experience first\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {coreFeatures.map((feature, index) => (\n              <Card key={index} className=\"border-0 shadow-lg hover:shadow-xl transition-all\">\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"w-14 h-14 bg-gradient-to-br from-purple-100 to-pink-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                    <feature.icon className=\"text-purple-600\" size={20} />\n                  </div>\n                  <h3 className=\"text-lg font-bold text-gray-900 mb-3\">{feature.title}</h3>\n                  <p className=\"text-gray-600 text-sm leading-relaxed\">{feature.description}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-6\">\n            Ready to Discover Your Instagram Insights?\n          </h2>\n          <p className=\"text-xl text-gray-100 mb-8\">\n            Join over 500,000 users who trust us with their Instagram analytics\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <button \n              onClick={() => window.location.href = '/'}\n              className=\"bg-white text-purple-600 px-8 py-4 rounded-xl font-bold text-lg hover:bg-gray-100 transition-all transform hover:scale-105 shadow-xl\"\n            >\n              Start Free Analysis\n            </button>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":14053},"client/src/pages/admin-adsense-old.tsx":{"content":"import React, { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { AdminLayout } from \"@/components/admin-layout\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { \n  DollarSign, \n  Target, \n  BarChart3, \n  Settings, \n  Plus,\n  Edit,\n  Trash2,\n  Eye,\n  AlertTriangle,\n  CheckCircle,\n  Globe,\n  Code,\n  Search,\n  Verified,\n  Save\n} from \"lucide-react\";\n\ninterface AdSenseSettings {\n  publisherId?: string;\n  autoAds: boolean;\n  headerAdCode?: string;\n  sidebarAdCode?: string;\n  contentAdCode?: string;\n  footerAdCode?: string;\n  isActive: boolean;\n}\n\ninterface AdSenseSite {\n  id: string;\n  domain: string;\n  verificationCode?: string;\n  isVerified: boolean;\n  status: 'pending' | 'verified' | 'rejected';\n  submittedAt?: string;\n  verifiedAt?: string;\n}\n\nexport default function AdminAdSense() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  \n  // Site verification dialog state\n  const [isAddSiteOpen, setIsAddSiteOpen] = useState(false);\n  const [newSiteData, setNewSiteData] = useState({\n    domain: \"\",\n    verificationCode: \"\",\n  });\n\n  const { data: settings, isLoading } = useQuery({\n    queryKey: [\"/api/admin/adsense\"],\n  });\n\n  const { data: sites, isLoading: sitesLoading } = useQuery({\n    queryKey: [\"/api/admin/adsense/sites\"],\n  });\n\n  const [formData, setFormData] = useState<AdSenseSettings>({\n    publisherId: \"\",\n    autoAds: false,\n    headerAdCode: \"\",\n    sidebarAdCode: \"\",\n    contentAdCode: \"\",\n    footerAdCode: \"\",\n    isActive: false,\n  });\n\n  React.useEffect(() => {\n    if (settings) {\n      setFormData({\n        publisherId: settings.publisherId || \"\",\n        autoAds: settings.autoAds || false,\n        headerAdCode: settings.headerAdCode || \"\",\n        sidebarAdCode: settings.sidebarAdCode || \"\",\n        contentAdCode: settings.contentAdCode || \"\",\n        footerAdCode: settings.footerAdCode || \"\",\n        isActive: settings.isActive || false,\n      });\n    }\n  }, [settings]);\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: AdSenseSettings) => {\n      return await apiRequest(\"/api/admin/adsense\", {\n        method: \"POST\",\n        body: data,\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/adsense\"] });\n      toast({\n        title: \"AdSense Updated\",\n        description: \"AdSense settings have been saved successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Update Failed\",\n        description: error.message || \"Failed to update AdSense settings.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Site verification mutations\n  const addSiteMutation = useMutation({\n    mutationFn: async (siteData: { domain: string; verificationCode: string }) => {\n      const res = await apiRequest(\"/api/admin/adsense/sites\", {\n        method: \"POST\",\n        body: siteData,\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/adsense/sites\"] });\n      setIsAddSiteOpen(false);\n      setNewSiteData({ domain: \"\", verificationCode: \"\" });\n      toast({\n        title: \"Site Added\",\n        description: \"AdSense site has been added for verification.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Add Failed\",\n        description: error.message || \"Failed to add AdSense site.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const verifySiteMutation = useMutation({\n    mutationFn: async (siteId: string) => {\n      const res = await apiRequest(`/api/admin/adsense/sites/${siteId}/verify`, {\n        method: \"POST\",\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/adsense/sites\"] });\n      toast({\n        title: \"Verification Started\",\n        description: \"Site verification process has been initiated.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Verification Failed\",\n        description: error.message || \"Failed to verify AdSense site.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteSiteMutation = useMutation({\n    mutationFn: async (siteId: string) => {\n      const res = await apiRequest(`/api/admin/adsense/sites/${siteId}`, {\n        method: \"DELETE\",\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/adsense/sites\"] });\n      toast({\n        title: \"Site Removed\",\n        description: \"AdSense site has been removed successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Deletion Failed\",\n        description: error.message || \"Failed to delete AdSense site.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    updateMutation.mutate(formData);\n  };\n\n  const handleAddSite = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (newSiteData.domain && newSiteData.verificationCode) {\n      addSiteMutation.mutate(newSiteData);\n    }\n  };\n\n  React.useEffect(() => {\n    if (settings) {\n      setFormData({\n        publisherId: settings.publisherId || \"\",\n        autoAds: settings.autoAds || false,\n        headerAdCode: settings.headerAdCode || \"\",\n        sidebarAdCode: settings.sidebarAdCode || \"\",\n        contentAdCode: settings.contentAdCode || \"\",\n        footerAdCode: settings.footerAdCode || \"\",\n        isActive: settings.isActive || false,\n      });\n    }\n  }, [settings]);\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center\">\n            <DollarSign className=\"w-8 h-8 animate-spin mx-auto mb-4\" />\n            <p className=\"text-gray-600 dark:text-gray-400\">Loading AdSense settings...</p>\n          </div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            AdSense Management\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Configure Google AdSense ads and manage site verification\n          </p>\n        </div>\n\n        <Tabs defaultValue=\"configuration\" className=\"space-y-4\">\n          <TabsList>\n            <TabsTrigger value=\"configuration\">Configuration</TabsTrigger>\n            <TabsTrigger value=\"sites\">Site Verification</TabsTrigger>\n            <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"configuration\">\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Settings className=\"w-5 h-5 mr-2\" />\n                    AdSense Configuration\n                  </CardTitle>\n                  <CardDescription>\n                    Set up your Google AdSense account and ad placements\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"publisherId\">Publisher ID</Label>\n                      <Input\n                        id=\"publisherId\"\n                        placeholder=\"pub-1234567890123456\"\n                        value={formData.publisherId}\n                        onChange={(e) => setFormData(prev => ({ ...prev, publisherId: e.target.value }))}\n                        data-testid=\"input-publisher-id\"\n                      />\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        Your Google AdSense publisher ID\n                      </p>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id=\"autoAds\"\n                        checked={formData.autoAds}\n                        onCheckedChange={(checked) => setFormData(prev => ({ ...prev, autoAds: checked }))}\n                        data-testid=\"switch-auto-ads\"\n                      />\n                      <Label htmlFor=\"autoAds\">Enable Auto Ads</Label>\n                    </div>\n                  </div>\n\n                  <div className=\"grid gap-4 md:grid-cols-2 mt-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"headerAdCode\">Header Ad Code</Label>\n                      <Textarea\n                        id=\"headerAdCode\"\n                        placeholder=\"<script async src='https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXX'></script>\"\n                        value={formData.headerAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, headerAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-header-ad\"\n                      />\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"sidebarAdCode\">Sidebar Ad Code</Label>\n                      <Textarea\n                        id=\"sidebarAdCode\"\n                        placeholder=\"<ins class='adsbygoogle' style='display:block'></ins>\"\n                        value={formData.sidebarAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, sidebarAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-sidebar-ad\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid gap-4 md:grid-cols-2 mt-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"contentAdCode\">Content Ad Code</Label>\n                      <Textarea\n                        id=\"contentAdCode\"\n                        placeholder=\"<ins class='adsbygoogle' style='display:block'></ins>\"\n                        value={formData.contentAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, contentAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-content-ad\"\n                      />\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"footerAdCode\">Footer Ad Code</Label>\n                      <Textarea\n                        id=\"footerAdCode\"\n                        placeholder=\"<ins class='adsbygoogle' style='display:block'></ins>\"\n                        value={formData.footerAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, footerAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-footer-ad\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-2 mt-4\">\n                    <Switch\n                      id=\"isActive\"\n                      checked={formData.isActive}\n                      onCheckedChange={(checked) => setFormData(prev => ({ ...prev, isActive: checked }))}\n                      data-testid=\"switch-active\"\n                    />\n                    <Label htmlFor=\"isActive\">Activate AdSense</Label>\n                  </div>\n\n                  {!formData.isActive && (\n                    <Alert className=\"mt-4\">\n                      <AlertTriangle className=\"h-4 w-4\" />\n                      <AlertDescription>\n                        AdSense is currently disabled. Ads will not be displayed on your website.\n                      </AlertDescription>\n                    </Alert>\n                  )}\n\n                  <Button\n                    type=\"submit\"\n                    disabled={updateMutation.isPending}\n                    className=\"mt-4\"\n                    data-testid=\"button-save-adsense\"\n                  >\n                    {updateMutation.isPending ? (\n                      <>\n                        <Save className=\"w-4 h-4 mr-2 animate-spin\" />\n                        Saving...\n                      </>\n                    ) : (\n                      <>\n                        <Save className=\"w-4 h-4 mr-2\" />\n                        Save AdSense Settings\n                      </>\n                    )}\n                  </Button>\n                </CardContent>\n              </Card>\n            </form>\n          </TabsContent>\n          \n          <TabsContent value=\"sites\">\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n              <Globe className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n              <p className=\"text-lg mb-2\">Site Verification Coming Soon</p>\n              <p className=\"text-sm\">AdSense site verification features will be available in a future update</p>\n            </div>\n          </TabsContent>\n          \n          <TabsContent value=\"analytics\">\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n              <BarChart3 className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n              <p className=\"text-lg mb-2\">Analytics Coming Soon</p>\n              <p className=\"text-sm\">AdSense performance analytics will be available once your ads are active</p>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </AdminLayout>\n  );\n}","size_bytes":14404},"client/src/pages/admin-adsense.tsx":{"content":"import React, { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { AdminLayout } from \"@/components/admin-layout\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { \n  DollarSign, \n  BarChart3, \n  Settings, \n  AlertTriangle,\n  Globe,\n  Save\n} from \"lucide-react\";\n\ninterface AdSenseSettings {\n  publisherId?: string;\n  autoAds: boolean;\n  headerAdCode?: string;\n  sidebarAdCode?: string;\n  contentAdCode?: string;\n  footerAdCode?: string;\n  isActive: boolean;\n}\n\nexport default function AdminAdSense() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: settings, isLoading } = useQuery({\n    queryKey: [\"/api/admin/adsense\"],\n  });\n\n  const [formData, setFormData] = useState<AdSenseSettings>({\n    publisherId: \"\",\n    autoAds: false,\n    headerAdCode: \"\",\n    sidebarAdCode: \"\",\n    contentAdCode: \"\",\n    footerAdCode: \"\",\n    isActive: false,\n  });\n\n  React.useEffect(() => {\n    if (settings) {\n      setFormData({\n        publisherId: (settings as any).publisherId || \"\",\n        autoAds: (settings as any).autoAds || false,\n        headerAdCode: (settings as any).headerAdCode || \"\",\n        sidebarAdCode: (settings as any).sidebarAdCode || \"\",\n        contentAdCode: (settings as any).contentAdCode || \"\",\n        footerAdCode: (settings as any).footerAdCode || \"\",\n        isActive: (settings as any).isActive || false,\n      });\n    }\n  }, [settings]);\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: AdSenseSettings) => {\n      return await apiRequest(\"/api/admin/adsense\", {\n        method: \"POST\",\n        body: data,\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/adsense\"] });\n      toast({\n        title: \"AdSense Updated\",\n        description: \"AdSense settings have been saved successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Update Failed\",\n        description: error.message || \"Failed to update AdSense settings.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    updateMutation.mutate(formData);\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center\">\n            <DollarSign className=\"w-8 h-8 animate-pulse mx-auto mb-4\" />\n            <p className=\"text-gray-600 dark:text-gray-400\">Loading AdSense settings...</p>\n          </div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            AdSense Management\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Configure Google AdSense ads and manage site verification\n          </p>\n        </div>\n\n        <Tabs defaultValue=\"configuration\" className=\"space-y-4\">\n          <TabsList>\n            <TabsTrigger value=\"configuration\">Configuration</TabsTrigger>\n            <TabsTrigger value=\"verification\">Site Verification</TabsTrigger>\n            <TabsTrigger value=\"analytics\">Analytics</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"configuration\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Settings className=\"w-5 h-5 mr-2\" />\n                  AdSense Configuration\n                </CardTitle>\n                <CardDescription>\n                  Set up your Google AdSense account and ad placements\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"publisherId\">Publisher ID</Label>\n                      <Input\n                        id=\"publisherId\"\n                        placeholder=\"pub-1234567890123456\"\n                        value={formData.publisherId}\n                        onChange={(e) => setFormData(prev => ({ ...prev, publisherId: e.target.value }))}\n                        data-testid=\"input-publisher-id\"\n                      />\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        Your Google AdSense publisher ID\n                      </p>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <Switch\n                        id=\"autoAds\"\n                        checked={formData.autoAds}\n                        onCheckedChange={(checked) => setFormData(prev => ({ ...prev, autoAds: checked }))}\n                        data-testid=\"switch-auto-ads\"\n                      />\n                      <Label htmlFor=\"autoAds\">Enable Auto Ads</Label>\n                    </div>\n                  </div>\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"headerAdCode\">Header Ad Code</Label>\n                      <Textarea\n                        id=\"headerAdCode\"\n                        placeholder=\"<script async src='https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-XXXXXX'></script>\"\n                        value={formData.headerAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, headerAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-header-ad\"\n                      />\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"sidebarAdCode\">Sidebar Ad Code</Label>\n                      <Textarea\n                        id=\"sidebarAdCode\"\n                        placeholder=\"<ins class='adsbygoogle' style='display:block'></ins>\"\n                        value={formData.sidebarAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, sidebarAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-sidebar-ad\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"grid gap-4 md:grid-cols-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"contentAdCode\">Content Ad Code</Label>\n                      <Textarea\n                        id=\"contentAdCode\"\n                        placeholder=\"<ins class='adsbygoogle' style='display:block'></ins>\"\n                        value={formData.contentAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, contentAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-content-ad\"\n                      />\n                    </div>\n                    \n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"footerAdCode\">Footer Ad Code</Label>\n                      <Textarea\n                        id=\"footerAdCode\"\n                        placeholder=\"<ins class='adsbygoogle' style='display:block'></ins>\"\n                        value={formData.footerAdCode}\n                        onChange={(e) => setFormData(prev => ({ ...prev, footerAdCode: e.target.value }))}\n                        rows={3}\n                        data-testid=\"textarea-footer-ad\"\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"isActive\"\n                      checked={formData.isActive}\n                      onCheckedChange={(checked) => setFormData(prev => ({ ...prev, isActive: checked }))}\n                      data-testid=\"switch-active\"\n                    />\n                    <Label htmlFor=\"isActive\">Activate AdSense</Label>\n                  </div>\n\n                  {!formData.isActive && (\n                    <Alert>\n                      <AlertTriangle className=\"h-4 w-4\" />\n                      <AlertDescription>\n                        AdSense is currently disabled. Ads will not be displayed on your website.\n                      </AlertDescription>\n                    </Alert>\n                  )}\n\n                  <Button\n                    type=\"submit\"\n                    disabled={updateMutation.isPending}\n                    data-testid=\"button-save-adsense\"\n                  >\n                    {updateMutation.isPending ? (\n                      <>\n                        <Save className=\"w-4 h-4 mr-2 animate-spin\" />\n                        Saving...\n                      </>\n                    ) : (\n                      <>\n                        <Save className=\"w-4 h-4 mr-2\" />\n                        Save AdSense Settings\n                      </>\n                    )}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"verification\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <Globe className=\"w-5 h-5 mr-2\" />\n                  AdSense Site Verification\n                </CardTitle>\n                <CardDescription>\n                  Verify your website ownership with Google AdSense\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                  <Globe className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                  <p className=\"text-lg mb-2\">Site Verification Feature</p>\n                  <p className=\"text-sm\">\n                    To verify your site with AdSense, add the verification meta tag to your website's head section.\n                    Contact your developer to implement the verification code when provided by Google AdSense.\n                  </p>\n                  <div className=\"mt-4 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n                    <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                      <strong>Tip:</strong> The verification code typically looks like:\n                      <br />\n                      <code className=\"text-xs bg-white dark:bg-gray-800 p-1 rounded mt-2 block\">\n                        {'<meta name=\"google-adsense-account\" content=\"ca-pub-XXXXXXXXXXXXXXXX\">'}\n                      </code>\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n          \n          <TabsContent value=\"analytics\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <BarChart3 className=\"w-5 h-5 mr-2\" />\n                  AdSense Analytics\n                </CardTitle>\n                <CardDescription>\n                  Monitor your ad performance and revenue\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                  <BarChart3 className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                  <p className=\"text-lg mb-2\">Analytics Coming Soon</p>\n                  <p className=\"text-sm\">AdSense performance analytics will be available once your ads are active</p>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </AdminLayout>\n  );\n}","size_bytes":12470},"client/src/pages/admin-blog.tsx":{"content":"import React, { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\n// Rich text editor component will be implemented inline\nimport { AdminLayout } from \"@/components/admin-layout\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  FileText, \n  Plus, \n  Edit, \n  Trash2, \n  Eye, \n  Calendar,\n  User,\n  Globe,\n  Save,\n  X\n} from \"lucide-react\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface BlogPost {\n  id: string;\n  title: string;\n  slug: string;\n  content: string;\n  excerpt?: string;\n  metaTitle?: string;\n  metaDescription?: string;\n  isPublished: boolean;\n  publishedAt?: string;\n  createdAt: string;\n  updatedAt: string;\n  authorId: string;\n}\n\nexport default function AdminBlog() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [editingPost, setEditingPost] = useState<BlogPost | null>(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const { data: posts, isLoading } = useQuery({\n    queryKey: [\"/api/admin/blog\"],\n  });\n\n  const [formData, setFormData] = useState({\n    title: \"\",\n    slug: \"\",\n    content: \"\",\n    excerpt: \"\",\n    metaTitle: \"\",\n    metaDescription: \"\",\n    isPublished: false,\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: typeof formData) => {\n      const res = await apiRequest(\"/api/admin/blog\", {\n        method: \"POST\",\n        body: data,\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/blog\"] });\n      resetForm();\n      setIsDialogOpen(false);\n      toast({\n        title: \"Post Created\",\n        description: \"Blog post has been created successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Creation Failed\",\n        description: error.message || \"Failed to create blog post.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: Partial<typeof formData> }) => {\n      const res = await apiRequest(`/api/admin/blog/${id}`, {\n        method: \"PUT\",\n        body: data,\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/blog\"] });\n      resetForm();\n      setEditingPost(null);\n      setIsDialogOpen(false);\n      toast({\n        title: \"Post Updated\",\n        description: \"Blog post has been updated successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Update Failed\",\n        description: error.message || \"Failed to update blog post.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (id: string) => {\n      const res = await apiRequest(`/api/admin/blog/${id}`, {\n        method: \"DELETE\",\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/blog\"] });\n      toast({\n        title: \"Post Deleted\",\n        description: \"Blog post has been deleted successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Deletion Failed\",\n        description: error.message || \"Failed to delete blog post.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const publishMutation = useMutation({\n    mutationFn: async (id: string) => {\n      const res = await apiRequest(`/api/admin/blog/${id}/publish`, {\n        method: \"POST\",\n      });\n      return res.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/blog\"] });\n      toast({\n        title: \"Post Published\",\n        description: \"Blog post has been published successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Publishing Failed\",\n        description: error.message || \"Failed to publish blog post.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const resetForm = () => {\n    setFormData({\n      title: \"\",\n      slug: \"\",\n      content: \"\",\n      excerpt: \"\",\n      metaTitle: \"\",\n      metaDescription: \"\",\n      isPublished: false,\n    });\n  };\n\n  const handleEdit = (post: BlogPost) => {\n    setEditingPost(post);\n    setFormData({\n      title: post.title,\n      slug: post.slug,\n      content: post.content,\n      excerpt: post.excerpt || \"\",\n      metaTitle: post.metaTitle || \"\",\n      metaDescription: post.metaDescription || \"\",\n      isPublished: post.isPublished,\n    });\n    setIsDialogOpen(true);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (editingPost) {\n      updateMutation.mutate({ id: editingPost.id, data: formData });\n    } else {\n      createMutation.mutate(formData);\n    }\n  };\n\n  const generateSlug = (title: string) => {\n    return title\n      .toLowerCase()\n      .replace(/[^a-z0-9 -]/g, '')\n      .replace(/\\s+/g, '-')\n      .replace(/-+/g, '-')\n      .trim();\n  };\n\n  const handleTitleChange = (title: string) => {\n    setFormData(prev => ({\n      ...prev,\n      title,\n      slug: generateSlug(title),\n      metaTitle: title,\n    }));\n  };\n\n  const insertFormatting = (before: string, after: string, placeholder: string) => {\n    const textarea = document.getElementById('content') as HTMLTextAreaElement;\n    if (!textarea) return;\n\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = textarea.value.substring(start, end);\n    \n    const newText = selectedText || placeholder;\n    const replacement = before + newText + after;\n    \n    const newValue = textarea.value.substring(0, start) + replacement + textarea.value.substring(end);\n    setFormData(prev => ({ ...prev, content: newValue }));\n    \n    // Set cursor position after insertion\n    setTimeout(() => {\n      if (selectedText) {\n        textarea.setSelectionRange(start, start + replacement.length);\n      } else {\n        textarea.setSelectionRange(start + before.length, start + before.length + placeholder.length);\n      }\n      textarea.focus();\n    }, 0);\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center\">\n            <FileText className=\"w-8 h-8 animate-pulse mx-auto mb-4\" />\n            <p className=\"text-gray-600 dark:text-gray-400\">Loading blog posts...</p>\n          </div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              Blog Management\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Create and manage your blog posts\n            </p>\n          </div>\n          \n          <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n            <DialogTrigger asChild>\n              <Button onClick={() => {\n                setEditingPost(null);\n                resetForm();\n              }} data-testid=\"button-new-post\">\n                <Plus className=\"w-4 h-4 mr-2\" />\n                New Post\n              </Button>\n            </DialogTrigger>\n            \n            <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n              <DialogHeader>\n                <DialogTitle>\n                  {editingPost ? \"Edit Blog Post\" : \"Create New Blog Post\"}\n                </DialogTitle>\n                <DialogDescription>\n                  {editingPost ? \"Update your blog post content and settings\" : \"Create a new blog post with rich content\"}\n                </DialogDescription>\n              </DialogHeader>\n              \n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div className=\"grid gap-4 md:grid-cols-2\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"title\">Title *</Label>\n                    <Input\n                      id=\"title\"\n                      placeholder=\"Enter post title\"\n                      value={formData.title}\n                      onChange={(e) => handleTitleChange(e.target.value)}\n                      required\n                      data-testid=\"input-post-title\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"slug\">URL Slug</Label>\n                    <Input\n                      id=\"slug\"\n                      placeholder=\"post-url-slug\"\n                      value={formData.slug}\n                      onChange={(e) => setFormData(prev => ({ ...prev, slug: e.target.value }))}\n                      data-testid=\"input-post-slug\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"excerpt\">Excerpt</Label>\n                  <Textarea\n                    id=\"excerpt\"\n                    placeholder=\"Brief description of the post\"\n                    value={formData.excerpt}\n                    onChange={(e) => setFormData(prev => ({ ...prev, excerpt: e.target.value }))}\n                    rows={2}\n                    data-testid=\"textarea-post-excerpt\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"content\">Content *</Label>\n                  <div className=\"space-y-2 border rounded-md p-3\">\n                    <div className=\"flex flex-wrap gap-2 border-b pb-2 mb-2\">\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('**', '**', 'Bold text')}\n                        data-testid=\"button-bold\"\n                      >\n                        <strong>B</strong>\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('*', '*', 'Italic text')}\n                        data-testid=\"button-italic\"\n                      >\n                        <em>I</em>\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('# ', '', 'Heading 1')}\n                        data-testid=\"button-h1\"\n                      >\n                        H1\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('## ', '', 'Heading 2')}\n                        data-testid=\"button-h2\"\n                      >\n                        H2\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('### ', '', 'Heading 3')}\n                        data-testid=\"button-h3\"\n                      >\n                        H3\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('- ', '', 'List item')}\n                        data-testid=\"button-list\"\n                      >\n                        List\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('[', '](url)', 'Link text')}\n                        data-testid=\"button-link\"\n                      >\n                        Link\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        size=\"sm\"\n                        variant=\"outline\"\n                        onClick={() => insertFormatting('> ', '', 'Quote text')}\n                        data-testid=\"button-quote\"\n                      >\n                        Quote\n                      </Button>\n                    </div>\n                    <Textarea\n                      id=\"content\"\n                      placeholder=\"Write your blog post content here using Markdown formatting...\"\n                      value={formData.content}\n                      onChange={(e) => setFormData(prev => ({ ...prev, content: e.target.value }))}\n                      rows={12}\n                      required\n                      className=\"resize-none\"\n                      data-testid=\"textarea-post-content\"\n                    />\n                  </div>\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    Supports Markdown formatting with heading buttons and rich text features\n                  </p>\n                </div>\n\n                <div className=\"grid gap-4 md:grid-cols-2\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"metaTitle\">SEO Title</Label>\n                    <Input\n                      id=\"metaTitle\"\n                      placeholder=\"SEO optimized title\"\n                      value={formData.metaTitle}\n                      onChange={(e) => setFormData(prev => ({ ...prev, metaTitle: e.target.value }))}\n                      data-testid=\"input-meta-title\"\n                    />\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <Switch\n                      id=\"isPublished\"\n                      checked={formData.isPublished}\n                      onCheckedChange={(checked) => setFormData(prev => ({ ...prev, isPublished: checked }))}\n                      data-testid=\"switch-publish\"\n                    />\n                    <Label htmlFor=\"isPublished\">Publish immediately</Label>\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"metaDescription\">SEO Description</Label>\n                  <Textarea\n                    id=\"metaDescription\"\n                    placeholder=\"SEO meta description\"\n                    value={formData.metaDescription}\n                    onChange={(e) => setFormData(prev => ({ ...prev, metaDescription: e.target.value }))}\n                    rows={2}\n                    maxLength={160}\n                    data-testid=\"textarea-meta-description\"\n                  />\n                  <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                    {formData.metaDescription.length}/160 characters\n                  </p>\n                </div>\n\n                <div className=\"flex justify-end space-x-2\">\n                  <Button \n                    type=\"button\" \n                    variant=\"outline\" \n                    onClick={() => {\n                      setIsDialogOpen(false);\n                      setEditingPost(null);\n                      resetForm();\n                    }}\n                  >\n                    <X className=\"w-4 h-4 mr-2\" />\n                    Cancel\n                  </Button>\n                  <Button\n                    type=\"submit\"\n                    disabled={createMutation.isPending || updateMutation.isPending}\n                    data-testid=\"button-save-post\"\n                  >\n                    {(createMutation.isPending || updateMutation.isPending) ? (\n                      <>\n                        <Save className=\"w-4 h-4 mr-2 animate-spin\" />\n                        Saving...\n                      </>\n                    ) : (\n                      <>\n                        <Save className=\"w-4 h-4 mr-2\" />\n                        {editingPost ? \"Update Post\" : \"Create Post\"}\n                      </>\n                    )}\n                  </Button>\n                </div>\n              </form>\n            </DialogContent>\n          </Dialog>\n        </div>\n\n        {/* Posts List */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <FileText className=\"w-5 h-5 mr-2\" />\n              Blog Posts\n            </CardTitle>\n            <CardDescription>\n              Manage all your blog posts\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {!posts || (Array.isArray(posts) && posts.length === 0) ? (\n              <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\n                <FileText className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                <p className=\"text-lg mb-2\">No blog posts yet</p>\n                <p className=\"text-sm\">Create your first blog post to get started</p>\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {Array.isArray(posts) && posts.map((post: any) => (\n                  <div key={post.id} className=\"border border-gray-200 dark:border-gray-700 rounded-lg p-4\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2 mb-2\">\n                          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                            {post.title}\n                          </h3>\n                          <Badge variant={post.isPublished ? \"default\" : \"secondary\"}>\n                            {post.isPublished ? \"Published\" : \"Draft\"}\n                          </Badge>\n                        </div>\n                        \n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\n                          {post.excerpt || \"No excerpt available\"}\n                        </p>\n                        \n                        <div className=\"flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400\">\n                          <div className=\"flex items-center\">\n                            <Calendar className=\"w-3 h-3 mr-1\" />\n                            {new Date(post.createdAt).toLocaleDateString()}\n                          </div>\n                          <div className=\"flex items-center\">\n                            <User className=\"w-3 h-3 mr-1\" />\n                            Admin\n                          </div>\n                          <div className=\"flex items-center\">\n                            <Globe className=\"w-3 h-3 mr-1\" />\n                            /{post.slug}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-2\">\n                        {!post.isPublished && (\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => publishMutation.mutate(post.id)}\n                            disabled={publishMutation.isPending}\n                            data-testid={`button-publish-${post.id}`}\n                          >\n                            <Globe className=\"w-4 h-4 mr-1\" />\n                            Publish\n                          </Button>\n                        )}\n                        \n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handleEdit(post)}\n                          data-testid={`button-edit-${post.id}`}\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        \n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            if (confirm(\"Are you sure you want to delete this post?\")) {\n                              deleteMutation.mutate(post.id);\n                            }\n                          }}\n                          disabled={deleteMutation.isPending}\n                          data-testid={`button-delete-${post.id}`}\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </AdminLayout>\n  );\n}","size_bytes":21504},"client/src/pages/admin-dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { AdminLayout } from \"@/components/admin-layout\";\nimport { \n  BarChart3, \n  Users, \n  Eye, \n  TrendingUp,\n  Calendar,\n  Clock\n} from \"lucide-react\";\nimport { useState } from \"react\";\n\ninterface AnalyticsSummary {\n  pageviews: number;\n  uniqueVisitors: number;\n  sessions: number;\n  avgBounceRate: string;\n}\n\ninterface AnalyticsDetailed {\n  id: string;\n  date: string;\n  pageviews: number;\n  uniqueVisitors: number;\n  sessions: number;\n  bounceRate: string;\n  avgSessionDuration: string;\n  source: string;\n  page: string;\n}\n\nexport default function AdminDashboard() {\n  const [period, setPeriod] = useState(\"7\");\n\n  const { data: analyticsData, isLoading } = useQuery({\n    queryKey: [\"/api/admin/analytics\", period],\n    queryFn: () => fetch(`/api/admin/analytics?period=${period}`).then(res => res.json()),\n  });\n\n  const summary: AnalyticsSummary = analyticsData?.summary || {\n    pageviews: 0,\n    uniqueVisitors: 0,\n    sessions: 0,\n    avgBounceRate: \"0\",\n  };\n\n  const detailed: AnalyticsDetailed[] = analyticsData?.detailed || [];\n\n  const stats = [\n    {\n      title: \"Total Page Views\",\n      value: summary.pageviews.toLocaleString(),\n      icon: Eye,\n      description: `In the last ${period} days`,\n      trend: \"+12.5%\",\n    },\n    {\n      title: \"Unique Visitors\",\n      value: summary.uniqueVisitors.toLocaleString(),\n      icon: Users,\n      description: `In the last ${period} days`,\n      trend: \"+8.2%\",\n    },\n    {\n      title: \"Sessions\",\n      value: summary.sessions.toLocaleString(),\n      icon: BarChart3,\n      description: `In the last ${period} days`,\n      trend: \"+15.1%\",\n    },\n    {\n      title: \"Avg. Bounce Rate\",\n      value: `${summary.avgBounceRate}%`,\n      icon: TrendingUp,\n      description: `In the last ${period} days`,\n      trend: \"-2.4%\",\n    },\n  ];\n\n  const periodOptions = [\n    { value: \"1\", label: \"Today\" },\n    { value: \"7\", label: \"Last 7 days\" },\n    { value: \"30\", label: \"Last 30 days\" },\n    { value: \"90\", label: \"Last 3 months\" },\n    { value: \"365\", label: \"Last year\" },\n  ];\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n              Dashboard\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n              Analytics overview and site metrics\n            </p>\n          </div>\n          \n          <div className=\"flex items-center space-x-4\">\n            <Select value={period} onValueChange={setPeriod}>\n              <SelectTrigger className=\"w-40\" data-testid=\"select-period\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                {periodOptions.map(option => (\n                  <SelectItem key={option.value} value={option.value}>\n                    {option.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n            \n            <Button variant=\"outline\" size=\"sm\" data-testid=\"button-refresh\">\n              <BarChart3 className=\"w-4 h-4 mr-2\" />\n              Refresh\n            </Button>\n          </div>\n        </div>\n\n        {/* Stats Grid */}\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4\">\n          {stats.map((stat) => {\n            const Icon = stat.icon;\n            return (\n              <Card key={stat.title} data-testid={`card-${stat.title.toLowerCase().replace(/[^a-z0-9]/g, '-')}`}>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\n                    {stat.title}\n                  </CardTitle>\n                  <Icon className=\"h-4 w-4 text-gray-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                    {stat.value}\n                  </div>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-400 flex items-center mt-1\">\n                    <span className={`mr-1 ${stat.trend.startsWith('+') ? 'text-green-500' : 'text-red-500'}`}>\n                      {stat.trend}\n                    </span>\n                    {stat.description}\n                  </p>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </div>\n\n        {/* Recent Activity */}\n        <div className=\"grid gap-6 lg:grid-cols-3\">\n          {/* Analytics Chart Placeholder */}\n          <Card className=\"lg:col-span-2\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <BarChart3 className=\"w-5 h-5 mr-2\" />\n                Traffic Overview\n              </CardTitle>\n              <CardDescription>\n                Daily page views and visitor trends\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-64 bg-gray-50 dark:bg-gray-800 rounded-lg flex items-center justify-center\">\n                <div className=\"text-center text-gray-500 dark:text-gray-400\">\n                  <BarChart3 className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\n                  <p className=\"text-sm\">Analytics chart will be displayed here</p>\n                  <p className=\"text-xs\">Install a charting library to view graphs</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Quick Actions */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Quick Actions</CardTitle>\n              <CardDescription>\n                Common administrative tasks\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-3\">\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-new-blog-post\">\n                <FileText className=\"w-4 h-4 mr-2\" />\n                New Blog Post\n              </Button>\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-site-settings\">\n                <Settings className=\"w-4 h-4 mr-2\" />\n                Site Settings\n              </Button>\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-adsense-setup\">\n                <DollarSign className=\"w-4 h-4 mr-2\" />\n                AdSense Setup\n              </Button>\n              <Button className=\"w-full justify-start\" variant=\"outline\" data-testid=\"button-view-site\">\n                <ExternalLink className=\"w-4 h-4 mr-2\" />\n                View Site\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Recent Pages */}\n        {detailed.length > 0 && (\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Eye className=\"w-5 h-5 mr-2\" />\n                Recent Page Views\n              </CardTitle>\n              <CardDescription>\n                Most visited pages in the selected period\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {detailed.slice(0, 5).map((item, index) => (\n                  <div key={item.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-800 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center\">\n                        <span className=\"text-xs font-medium text-blue-600 dark:text-blue-400\">\n                          {index + 1}\n                        </span>\n                      </div>\n                      <div>\n                        <p className=\"font-medium text-gray-900 dark:text-white\">\n                          {item.page}\n                        </p>\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                          {item.source} • {new Date(item.date).toLocaleDateString()}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-medium text-gray-900 dark:text-white\">\n                        {item.pageviews} views\n                      </p>\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                        {item.uniqueVisitors} visitors\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Import missing icons\nimport { FileText, Settings, DollarSign, ExternalLink } from \"lucide-react\";","size_bytes":9253},"client/src/pages/admin-login.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { useAdminAuth } from \"@/hooks/use-admin-auth\";\nimport { Eye, EyeOff, Lock, User, Mail } from \"lucide-react\";\n\nexport default function AdminLogin() {\n  const [, navigate] = useLocation();\n  const { isAuthenticated, login, setup, isLoggingIn, isSettingUp, loginError, setupError } = useAdminAuth();\n  \n  // Login form state\n  const [credentials, setCredentials] = useState({ username: \"\", password: \"\" });\n  const [showPassword, setShowPassword] = useState(false);\n  \n  // Setup form state\n  const [setupData, setSetupData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [setupPasswordMatch, setSetupPasswordMatch] = useState(true);\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      navigate(\"/admin\");\n    }\n  }, [isAuthenticated, navigate]);\n\n  const handleLogin = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (credentials.username && credentials.password) {\n      login(credentials);\n    }\n  };\n\n  const handleSetup = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (setupData.password !== setupData.confirmPassword) {\n      setSetupPasswordMatch(false);\n      return;\n    }\n    setSetupPasswordMatch(true);\n    \n    if (setupData.username && setupData.email && setupData.password) {\n      setup({\n        username: setupData.username,\n        email: setupData.email,\n        password: setupData.password,\n        isActive: true,\n      });\n    }\n  };\n\n  const updateSetupPassword = (field: 'password' | 'confirmPassword', value: string) => {\n    const newSetupData = { ...setupData, [field]: value };\n    setSetupData(newSetupData);\n    \n    if (field === 'confirmPassword' || (field === 'password' && setupData.confirmPassword)) {\n      setSetupPasswordMatch(\n        field === 'password' ? \n          value === setupData.confirmPassword : \n          setupData.password === value\n      );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center\">\n          <div className=\"w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full mx-auto mb-4 flex items-center justify-center\">\n            <Lock className=\"w-8 h-8 text-white\" />\n          </div>\n          <CardTitle className=\"text-2xl font-bold\">Admin Access</CardTitle>\n          <CardDescription>\n            Manage your Instagram Followers Tracker\n          </CardDescription>\n        </CardHeader>\n        \n        <CardContent>\n          <Tabs defaultValue=\"login\" className=\"space-y-4\">\n            <TabsList className=\"grid w-full grid-cols-2\">\n              <TabsTrigger value=\"login\" data-testid=\"tab-login\">Login</TabsTrigger>\n              <TabsTrigger value=\"setup\" data-testid=\"tab-setup\">Setup</TabsTrigger>\n            </TabsList>\n            \n            {/* Login Tab */}\n            <TabsContent value=\"login\" className=\"space-y-4\">\n              <form onSubmit={handleLogin} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"username\">Username</Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                    <Input\n                      id=\"username\"\n                      type=\"text\"\n                      placeholder=\"Enter your username\"\n                      value={credentials.username}\n                      onChange={(e) => setCredentials(prev => ({ ...prev, username: e.target.value }))}\n                      className=\"pl-10\"\n                      required\n                      data-testid=\"input-username\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"password\">Password</Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? \"text\" : \"password\"}\n                      placeholder=\"Enter your password\"\n                      value={credentials.password}\n                      onChange={(e) => setCredentials(prev => ({ ...prev, password: e.target.value }))}\n                      className=\"pl-10 pr-10\"\n                      required\n                      data-testid=\"input-password\"\n                    />\n                    <Button\n                      type=\"button\"\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      data-testid=\"button-toggle-password\"\n                    >\n                      {showPassword ? (\n                        <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                      ) : (\n                        <Eye className=\"h-4 w-4 text-gray-400\" />\n                      )}\n                    </Button>\n                  </div>\n                </div>\n\n                {loginError && (\n                  <Alert variant=\"destructive\">\n                    <AlertDescription data-testid=\"alert-login-error\">\n                      {loginError.message || \"Login failed. Please check your credentials.\"}\n                    </AlertDescription>\n                  </Alert>\n                )}\n\n                <Button \n                  type=\"submit\" \n                  className=\"w-full\"\n                  disabled={isLoggingIn}\n                  data-testid=\"button-login\"\n                >\n                  {isLoggingIn ? \"Signing in...\" : \"Sign In\"}\n                </Button>\n              </form>\n            </TabsContent>\n\n            {/* Setup Tab */}\n            <TabsContent value=\"setup\" className=\"space-y-4\">\n              <div className=\"text-sm text-gray-600 dark:text-gray-400 text-center mb-4\">\n                Create the first admin account\n              </div>\n              \n              <form onSubmit={handleSetup} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"setup-username\">Username</Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                    <Input\n                      id=\"setup-username\"\n                      type=\"text\"\n                      placeholder=\"Choose a username\"\n                      value={setupData.username}\n                      onChange={(e) => setSetupData(prev => ({ ...prev, username: e.target.value }))}\n                      className=\"pl-10\"\n                      required\n                      data-testid=\"input-setup-username\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"setup-email\">Email</Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                    <Input\n                      id=\"setup-email\"\n                      type=\"email\"\n                      placeholder=\"Enter your email\"\n                      value={setupData.email}\n                      onChange={(e) => setSetupData(prev => ({ ...prev, email: e.target.value }))}\n                      className=\"pl-10\"\n                      required\n                      data-testid=\"input-setup-email\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"setup-password\">Password</Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                    <Input\n                      id=\"setup-password\"\n                      type=\"password\"\n                      placeholder=\"Choose a password\"\n                      value={setupData.password}\n                      onChange={(e) => updateSetupPassword('password', e.target.value)}\n                      className=\"pl-10\"\n                      required\n                      data-testid=\"input-setup-password\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"setup-confirm-password\">Confirm Password</Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n                    <Input\n                      id=\"setup-confirm-password\"\n                      type=\"password\"\n                      placeholder=\"Confirm your password\"\n                      value={setupData.confirmPassword}\n                      onChange={(e) => updateSetupPassword('confirmPassword', e.target.value)}\n                      className=\"pl-10\"\n                      required\n                      data-testid=\"input-setup-confirm-password\"\n                    />\n                  </div>\n                  {!setupPasswordMatch && (\n                    <p className=\"text-sm text-red-500\">Passwords do not match</p>\n                  )}\n                </div>\n\n                {setupError && (\n                  <Alert variant=\"destructive\">\n                    <AlertDescription data-testid=\"alert-setup-error\">\n                      {setupError.message || \"Setup failed. Please try again.\"}\n                    </AlertDescription>\n                  </Alert>\n                )}\n\n                <Button \n                  type=\"submit\" \n                  className=\"w-full\"\n                  disabled={isSettingUp || !setupPasswordMatch}\n                  data-testid=\"button-setup\"\n                >\n                  {isSettingUp ? \"Creating Account...\" : \"Create Admin Account\"}\n                </Button>\n              </form>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":10597},"client/src/pages/admin-search-console.tsx":{"content":"import React from \"react\";\nimport { AdminLayout } from \"@/components/admin-layout\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Globe, ExternalLink, Search, BarChart3, AlertTriangle, CheckCircle } from \"lucide-react\";\n\nexport default function AdminSearchConsole() {\n  const verificationMethods = [\n    {\n      name: \"HTML Meta Tag\",\n      description: \"Add a meta tag to your site's head section\",\n      icon: Globe,\n      status: \"Available in Site Settings\",\n      link: \"/admin/settings\",\n    },\n    {\n      name: \"Google Analytics\",\n      description: \"Use your existing Google Analytics tracking code\",\n      icon: BarChart3,\n      status: \"Configure in Analytics\",\n      link: \"#\",\n    },\n    {\n      name: \"Google Tag Manager\", \n      description: \"Verify through Google Tag Manager container\",\n      icon: Search,\n      status: \"Manual Setup Required\",\n      link: \"#\",\n    },\n  ];\n\n  const searchConsoleFeatures = [\n    {\n      title: \"Performance Monitoring\",\n      description: \"Track clicks, impressions, CTR, and position for your pages\",\n      icon: BarChart3,\n    },\n    {\n      title: \"Index Coverage\",\n      description: \"See which pages are indexed and identify crawling issues\",\n      icon: Search,\n    },\n    {\n      title: \"Core Web Vitals\",\n      description: \"Monitor page experience signals and loading performance\",\n      icon: CheckCircle,\n    },\n    {\n      title: \"Security Issues\",\n      description: \"Get alerts about malware, phishing, or other security problems\",\n      icon: AlertTriangle,\n    },\n  ];\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Search Console Setup\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Configure Google Search Console verification and monitoring\n          </p>\n        </div>\n\n        {/* Overview */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Globe className=\"w-5 h-5 mr-2\" />\n              Google Search Console Overview\n            </CardTitle>\n            <CardDescription>\n              Monitor your website's search performance and health\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n              {searchConsoleFeatures.map((feature, index) => {\n                const Icon = feature.icon;\n                return (\n                  <div key={index} className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                    <div className=\"flex items-center mb-2\">\n                      <Icon className=\"w-5 h-5 text-blue-500 mr-2\" />\n                      <h3 className=\"font-medium text-gray-900 dark:text-white\">\n                        {feature.title}\n                      </h3>\n                    </div>\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                      {feature.description}\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Verification Methods */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Verification Methods</CardTitle>\n            <CardDescription>\n              Choose how to verify your website ownership with Google\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {verificationMethods.map((method, index) => {\n              const Icon = method.icon;\n              return (\n                <div key={index} className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Icon className=\"w-5 h-5 text-gray-500\" />\n                    <div>\n                      <h3 className=\"font-medium text-gray-900 dark:text-white\">\n                        {method.name}\n                      </h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        {method.description}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className=\"text-sm text-gray-500 dark:text-gray-400\">\n                      {method.status}\n                    </span>\n                    {method.link && method.link !== \"#\" && (\n                      <Button variant=\"outline\" size=\"sm\" asChild data-testid={`button-${method.name.toLowerCase().replace(/\\s+/g, '-')}`}>\n                        <a href={method.link}>\n                          Configure\n                          <ExternalLink className=\"w-4 h-4 ml-1\" />\n                        </a>\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              );\n            })}\n          </CardContent>\n        </Card>\n\n        {/* Setup Instructions */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Setup Instructions</CardTitle>\n            <CardDescription>\n              Step-by-step guide to connect your site with Google Search Console\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-medium\">\n                  1\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-gray-900 dark:text-white\">\n                    Create Google Search Console Account\n                  </h4>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    Visit <a href=\"https://search.google.com/search-console\" className=\"text-blue-500 hover:underline\" target=\"_blank\" rel=\"noopener noreferrer\">Google Search Console</a> and sign in with your Google account.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-medium\">\n                  2\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-gray-900 dark:text-white\">\n                    Add Your Property\n                  </h4>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    Click \"Add Property\" and enter your website URL. Choose \"URL prefix\" option for easier setup.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-medium\">\n                  3\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-gray-900 dark:text-white\">\n                    Get Verification Code\n                  </h4>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    Select \"HTML tag\" method and copy the meta tag provided by Google.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-medium\">\n                  4\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-gray-900 dark:text-white\">\n                    Add to Site Settings\n                  </h4>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    Go to <a href=\"/admin/settings\" className=\"text-blue-500 hover:underline\">Site Settings</a> and paste the meta tag in the \"Google Search Console\" field.\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-medium\">\n                  5\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-gray-900 dark:text-white\">\n                    Verify Ownership\n                  </h4>\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\n                    Return to Google Search Console and click \"Verify\". Your site should now be verified!\n                  </p>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Important Notes */}\n        <Alert>\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            <strong>Important Notes:</strong>\n            <ul className=\"mt-2 space-y-1\">\n              <li>• Keep the verification meta tag in your site's head section permanently</li>\n              <li>• It may take a few days for data to appear in Search Console after verification</li>\n              <li>• Submit your sitemap to Google Search Console for better indexing</li>\n              <li>• Monitor the \"Coverage\" section regularly for indexing issues</li>\n            </ul>\n          </AlertDescription>\n        </Alert>\n\n        <div className=\"flex space-x-4\">\n          <Button asChild data-testid=\"button-open-search-console\">\n            <a href=\"https://search.google.com/search-console\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <ExternalLink className=\"w-4 h-4 mr-2\" />\n              Open Search Console\n            </a>\n          </Button>\n          <Button variant=\"outline\" asChild data-testid=\"button-configure-settings\">\n            <a href=\"/admin/settings\">\n              Configure Site Settings\n            </a>\n          </Button>\n        </div>\n      </div>\n    </AdminLayout>\n  );\n}","size_bytes":10403},"client/src/pages/admin-settings.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { AdminLayout } from \"@/components/admin-layout\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Save, Settings2, Globe, Image } from \"lucide-react\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface SiteSettings {\n  siteName: string;\n  metaTitle: string;\n  metaDescription: string;\n  googleSearchConsole?: string;\n  bingWebmaster?: string;\n  yandexWebmaster?: string;\n  favicon?: string;\n  logo?: string;\n}\n\nexport default function AdminSettings() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: settings, isLoading } = useQuery({\n    queryKey: [\"/api/admin/site-settings\"],\n  });\n\n  const [formData, setFormData] = useState<SiteSettings>({\n    siteName: \"\",\n    metaTitle: \"\",\n    metaDescription: \"\",\n    googleSearchConsole: \"\",\n    bingWebmaster: \"\",\n    yandexWebmaster: \"\",\n    favicon: \"\",\n    logo: \"\",\n  });\n\n  // Initialize form data when settings load\n  React.useEffect(() => {\n    if (settings) {\n      setFormData({\n        siteName: settings.siteName || \"\",\n        metaTitle: settings.metaTitle || \"\",\n        metaDescription: settings.metaDescription || \"\",\n        googleSearchConsole: settings.googleSearchConsole || \"\",\n        bingWebmaster: settings.bingWebmaster || \"\",\n        yandexWebmaster: settings.yandexWebmaster || \"\",\n        favicon: settings.favicon || \"\",\n        logo: settings.logo || \"\",\n      });\n    }\n  }, [settings]);\n\n  const updateMutation = useMutation({\n    mutationFn: async (data: SiteSettings) => {\n      return await apiRequest(\"/api/admin/site-settings\", {\n        method: \"POST\",\n        body: data,\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/site-settings\"] });\n      toast({\n        title: \"Settings Updated\",\n        description: \"Site settings have been saved successfully.\",\n      });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Update Failed\",\n        description: error.message || \"Failed to update site settings.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    updateMutation.mutate(formData);\n  };\n\n  const handleInputChange = (field: keyof SiteSettings, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  if (isLoading) {\n    return (\n      <AdminLayout>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"text-center\">\n            <Settings2 className=\"w-8 h-8 animate-spin mx-auto mb-4\" />\n            <p className=\"text-gray-600 dark:text-gray-400\">Loading settings...</p>\n          </div>\n        </div>\n      </AdminLayout>\n    );\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Site Settings\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\n            Configure your website's basic information and metadata\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {/* Basic Site Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Globe className=\"w-5 h-5 mr-2\" />\n                Basic Information\n              </CardTitle>\n              <CardDescription>\n                Essential site details and branding\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"siteName\">Site Name</Label>\n                  <Input\n                    id=\"siteName\"\n                    placeholder=\"Your Site Name\"\n                    value={formData.siteName}\n                    onChange={(e) => handleInputChange(\"siteName\", e.target.value)}\n                    required\n                    data-testid=\"input-site-name\"\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"metaTitle\">Meta Title</Label>\n                  <Input\n                    id=\"metaTitle\"\n                    placeholder=\"SEO Title for search engines\"\n                    value={formData.metaTitle}\n                    onChange={(e) => handleInputChange(\"metaTitle\", e.target.value)}\n                    required\n                    data-testid=\"input-meta-title\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"metaDescription\">Meta Description</Label>\n                <Textarea\n                  id=\"metaDescription\"\n                  placeholder=\"Brief description for search engines (160 characters recommended)\"\n                  value={formData.metaDescription}\n                  onChange={(e) => handleInputChange(\"metaDescription\", e.target.value)}\n                  rows={3}\n                  maxLength={160}\n                  required\n                  data-testid=\"textarea-meta-description\"\n                />\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  {formData.metaDescription.length}/160 characters\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Branding Assets */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <Image className=\"w-5 h-5 mr-2\" />\n                Branding Assets\n              </CardTitle>\n              <CardDescription>\n                Upload your logo and favicon URLs\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid gap-4 md:grid-cols-2\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"logo\">Logo URL</Label>\n                  <Input\n                    id=\"logo\"\n                    type=\"url\"\n                    placeholder=\"https://example.com/logo.png\"\n                    value={formData.logo}\n                    onChange={(e) => handleInputChange(\"logo\", e.target.value)}\n                    data-testid=\"input-logo-url\"\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"favicon\">Favicon URL</Label>\n                  <Input\n                    id=\"favicon\"\n                    type=\"url\"\n                    placeholder=\"https://example.com/favicon.ico\"\n                    value={formData.favicon}\n                    onChange={(e) => handleInputChange(\"favicon\", e.target.value)}\n                    data-testid=\"input-favicon-url\"\n                  />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Search Console Verification */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Search Console Verification</CardTitle>\n              <CardDescription>\n                HTML meta tags for search engine verification\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"googleSearchConsole\">Google Search Console</Label>\n                <Input\n                  id=\"googleSearchConsole\"\n                  placeholder='<meta name=\"google-site-verification\" content=\"your-code-here\" />'\n                  value={formData.googleSearchConsole}\n                  onChange={(e) => handleInputChange(\"googleSearchConsole\", e.target.value)}\n                  data-testid=\"input-google-verification\"\n                />\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  Paste the complete HTML meta tag from Google Search Console\n                </p>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"bingWebmaster\">Bing Webmaster Tools</Label>\n                <Input\n                  id=\"bingWebmaster\"\n                  placeholder='<meta name=\"msvalidate.01\" content=\"your-code-here\" />'\n                  value={formData.bingWebmaster}\n                  onChange={(e) => handleInputChange(\"bingWebmaster\", e.target.value)}\n                  data-testid=\"input-bing-verification\"\n                />\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  Paste the complete HTML meta tag from Bing Webmaster Tools\n                </p>\n              </div>\n\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"yandexWebmaster\">Yandex Webmaster</Label>\n                <Input\n                  id=\"yandexWebmaster\"\n                  placeholder='<meta name=\"yandex-verification\" content=\"your-code-here\" />'\n                  value={formData.yandexWebmaster}\n                  onChange={(e) => handleInputChange(\"yandexWebmaster\", e.target.value)}\n                  data-testid=\"input-yandex-verification\"\n                />\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\n                  Paste the complete HTML meta tag from Yandex Webmaster\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n\n          <div className=\"flex justify-end\">\n            <Button\n              type=\"submit\"\n              disabled={updateMutation.isPending}\n              data-testid=\"button-save-settings\"\n            >\n              {updateMutation.isPending ? (\n                <>\n                  <Settings2 className=\"w-4 h-4 mr-2 animate-spin\" />\n                  Saving...\n                </>\n              ) : (\n                <>\n                  <Save className=\"w-4 h-4 mr-2\" />\n                  Save Settings\n                </>\n              )}\n            </Button>\n          </div>\n        </form>\n      </div>\n    </AdminLayout>\n  );\n}\n\n// Add missing React import\nimport React from \"react\";","size_bytes":10580},"client/src/pages/blog.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { BannerAd, InArticleAd } from '@/components/adsense-ad';\nimport { Calendar, Clock, User } from 'lucide-react';\nimport { mockBlogArticles } from '@/lib/mock-data';\nimport { Link } from 'wouter';\n\nexport default function BlogPage() {\n  const breadcrumbItems = [\n    { label: 'Home', href: '/' },\n    { label: 'Blog', href: '/blog' },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* SEO Meta Tags */}\n      <head>\n        <title>Instagram Tracker Blog – Unfollowers, Ghosts & Growth Tips</title>\n        <meta name=\"description\" content=\"Read the latest on Instagram unfollowers, ghost & inactive trackers, and growth strategies. Tips, insights, and guides to manage and grow your Instagram.\" />\n        <meta name=\"keywords\" content=\"Instagram blog, follower tracking guides, Instagram analytics tips, unfollowers tracking, Instagram growth\" />\n        <link rel=\"canonical\" href=\"/blog\" />\n        <meta property=\"og:title\" content=\"Instagram Tracker Blog – Unfollowers, Ghosts & Growth Tips\" />\n        <meta property=\"og:description\" content=\"Read the latest on Instagram unfollowers, ghost & inactive trackers, and growth strategies. Tips, insights, and guides to manage and grow your Instagram.\" />\n        <meta property=\"og:type\" content=\"blog\" />\n        <meta property=\"og:url\" content=\"/blog\" />\n      </head>\n\n      <Header />\n      \n      <main>\n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-12\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center\">\n              <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-4\">\n                Instagram Analytics Blog\n              </h1>\n              <p className=\"text-lg sm:text-xl text-gray-100 mb-6 max-w-3xl mx-auto\">\n                Expert insights, tips, and guides to help you master Instagram follower tracking and analytics\n              </p>\n              \n              {/* Topic Tags */}\n              <div className=\"flex flex-wrap justify-center gap-3 mt-8\">\n                <Badge className=\"bg-white/20 text-white hover:bg-white/30 px-4 py-2 text-sm\">\n                  📈 Growth Strategies\n                </Badge>\n                <Badge className=\"bg-white/20 text-white hover:bg-white/30 px-4 py-2 text-sm\">\n                  🔍 Unfollower Tracking\n                </Badge>\n                <Badge className=\"bg-white/20 text-white hover:bg-white/30 px-4 py-2 text-sm\">\n                  🛡️ Privacy & Safety\n                </Badge>\n                <Badge className=\"bg-white/20 text-white hover:bg-white/30 px-4 py-2 text-sm\">\n                  📊 Analytics Tools\n                </Badge>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Breadcrumbs */}\n        <section className=\"bg-gray-50 py-4\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={breadcrumbItems} />\n          </div>\n        </section>\n\n        {/* Blog Articles */}\n        <section className=\"py-10 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-4\">\n                Latest Articles & Guides\n              </h2>\n              <p className=\"text-lg text-gray-600\">\n                Stay updated with the latest Instagram analytics strategies and tools\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {mockBlogArticles.map((article) => (\n                <article key={article.id} className=\"group\">\n                  <Link href={`/${article.slug}`}>\n                    <Card className=\"overflow-hidden hover:shadow-xl transition-all duration-300 cursor-pointer border-0 shadow-md\">\n                      <div className=\"aspect-[4/3] overflow-hidden\">\n                        <img \n                          src={article.imageUrl} \n                          alt={article.title}\n                          className=\"w-full h-full object-cover group-hover:scale-110 transition-transform duration-500\"\n                        />\n                      </div>\n                      \n                      <CardContent className=\"p-6\">\n                        <div className=\"flex items-center justify-between text-sm text-gray-500 mb-4\">\n                          <div className=\"flex items-center\">\n                            <Calendar className=\"mr-2\" size={14} />\n                            <span>{new Date(article.publishDate).toLocaleDateString('en-US', {\n                              year: 'numeric',\n                              month: 'long',\n                              day: 'numeric'\n                            })}</span>\n                          </div>\n                          <Badge variant=\"secondary\" className=\"bg-purple-100 text-purple-700 text-xs\">\n                            {article.category}\n                          </Badge>\n                        </div>\n                        \n                        <h3 className=\"text-xl font-bold text-gray-900 mb-3 group-hover:text-purple-600 transition-colors leading-tight\">\n                          {article.title}\n                        </h3>\n                        \n                        <p className=\"text-gray-600 mb-4 line-clamp-3 leading-relaxed\">\n                          {article.excerpt}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center text-sm text-gray-500\">\n                            <Clock className=\"mr-2\" size={14} />\n                            <span>5 min read</span>\n                          </div>\n                          <span className=\"text-purple-600 font-semibold text-sm group-hover:text-purple-700 transition-colors\">\n                            Read Article →\n                          </span>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </Link>\n                </article>\n              ))}\n            </div>\n\n            {/* Load More Section */}\n            <div className=\"text-center mt-12\">\n              <p className=\"text-gray-600 mb-4\">\n                More articles coming soon! Subscribe to stay updated.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n                <Link href=\"/contact\">\n                  <button className=\"bg-purple-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-purple-700 transition-colors\">\n                    Subscribe to Updates\n                  </button>\n                </Link>\n                <Link href=\"/\">\n                  <button className=\"text-purple-600 hover:text-purple-700 font-medium transition-colors\">\n                    ← Back to Home\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":7489},"client/src/pages/contact.tsx":{"content":"import { useState } from 'react';\nimport { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Mail, MessageCircle, Clock, MapPin, Phone, Send, CheckCircle } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\n\nexport default function Contact() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    subject: '',\n    message: ''\n  });\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    \n    // Simulate form submission\n    await new Promise(resolve => setTimeout(resolve, 2000));\n    \n    toast({\n      title: \"Message sent successfully!\",\n      description: \"We'll get back to you within 24 hours.\",\n    });\n    \n    setFormData({ name: '', email: '', subject: '', message: '' });\n    setIsSubmitting(false);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const contactMethods = [\n    {\n      icon: Mail,\n      title: 'Email Support',\n      description: 'Send us an email and we\\'ll respond within 24 hours',\n      contact: 'unfollowerstracker2024@gmail.com',\n      color: 'blue'\n    },\n    {\n      icon: MessageCircle,\n      title: 'Live Chat',\n      description: 'Chat with our support team in real-time',\n      contact: 'Available 9 AM - 6 PM EST',\n      color: 'green'\n    },\n    {\n      icon: Clock,\n      title: 'Response Time',\n      description: 'Average response time for all inquiries',\n      contact: 'Within 24 hours',\n      color: 'purple'\n    }\n  ];\n\n  const faqs = [\n    {\n      question: 'How quickly will I get a response?',\n      answer: 'We typically respond to all inquiries within 24 hours. For urgent issues, please mark your message as high priority.'\n    },\n    {\n      question: 'Can you help with technical issues?',\n      answer: 'Absolutely! Our support team can help with file upload issues, browser compatibility, and any technical problems you encounter.'\n    },\n    {\n      question: 'Do you offer custom enterprise solutions?',\n      answer: 'Yes, we offer custom solutions for businesses and enterprises. Contact us to discuss your specific requirements.'\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      {/* Breadcrumbs */}\n      <section className=\"bg-white py-4 border-b border-gray-200\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Breadcrumbs items={[\n            { label: 'Home', href: '/' },\n            { label: 'Contact Us', current: true }\n          ]} />\n        </div>\n      </section>\n      \n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-12 relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-20 left-10 w-32 h-32 bg-white opacity-10 rounded-full animate-float\"></div>\n          <div className=\"absolute bottom-20 right-20 w-24 h-24 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '2s'}}></div>\n        </div>\n        \n        <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n            Get In Touch\n          </Badge>\n          <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4 leading-tight\">\n            We're Here to\n            <span className=\"block text-yellow-300\">Help You</span>\n          </h1>\n          <p className=\"text-base sm:text-lg text-gray-100 mb-6 max-w-3xl mx-auto leading-relaxed\">\n            Have questions about our Instagram analytics tool? Need technical support? \n            Our friendly team is ready to assist you with anything you need.\n          </p>\n        </div>\n      </section>\n\n      {/* Contact Methods */}\n      <section className=\"py-8 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {contactMethods.map((method, index) => (\n              <Card key={index} className=\"text-center hover:shadow-lg transition-all hover:-translate-y-1 duration-300\">\n                <CardContent className=\"p-6\">\n                  <div className={`w-12 h-12 bg-${method.color}-100 rounded-lg flex items-center justify-center mx-auto mb-4`}>\n                    <method.icon className={`text-${method.color}-600`} size={20} />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{method.title}</h3>\n                  <p className=\"text-sm text-gray-600 mb-3\">{method.description}</p>\n                  <p className=\"font-semibold text-gray-900 text-sm\">{method.contact}</p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Form & Info */}\n      <section className=\"py-12 bg-gradient-to-br from-blue-50 to-purple-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\n            {/* Contact Form */}\n            <Card className=\"shadow-2xl\">\n              <CardContent className=\"p-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Send us a Message</h2>\n                \n                <form onSubmit={handleSubmit} className=\"space-y-6\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                        Full Name *\n                      </label>\n                      <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleChange}\n                        required\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all\"\n                        placeholder=\"Your full name\"\n                      />\n                    </div>\n                    \n                    <div>\n                      <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                        Email Address *\n                      </label>\n                      <input\n                        type=\"email\"\n                        name=\"email\"\n                        value={formData.email}\n                        onChange={handleChange}\n                        required\n                        className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all\"\n                        placeholder=\"your.email@example.com\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      Subject *\n                    </label>\n                    <select\n                      name=\"subject\"\n                      value={formData.subject}\n                      onChange={handleChange}\n                      required\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all\"\n                    >\n                      <option value=\"\">Select a subject</option>\n                      <option value=\"technical-support\">Technical Support</option>\n                      <option value=\"general-inquiry\">General Inquiry</option>\n                      <option value=\"bug-report\">Bug Report</option>\n                      <option value=\"feature-request\">Feature Request</option>\n                      <option value=\"business-inquiry\">Business Inquiry</option>\n                      <option value=\"other\">Other</option>\n                    </select>\n                  </div>\n                  \n                  <div>\n                    <label className=\"block text-sm font-semibold text-gray-700 mb-2\">\n                      Message *\n                    </label>\n                    <textarea\n                      name=\"message\"\n                      value={formData.message}\n                      onChange={handleChange}\n                      required\n                      rows={6}\n                      className=\"w-full px-4 py-3 border border-gray-300 rounded-xl focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all resize-none\"\n                      placeholder=\"Please describe your inquiry in detail...\"\n                    />\n                  </div>\n                  \n                  <Button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:from-purple-700 hover:to-pink-700 transition-all font-semibold py-4 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105\"\n                  >\n                    {isSubmitting ? (\n                      <div className=\"flex items-center justify-center\">\n                        <div className=\"animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent mr-2\"></div>\n                        Sending...\n                      </div>\n                    ) : (\n                      <div className=\"flex items-center justify-center\">\n                        <Send className=\"mr-2\" size={18} />\n                        Send Message\n                      </div>\n                    )}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n\n            {/* Contact Info & FAQs */}\n            <div className=\"space-y-8\">\n              {/* Contact Info */}\n              <Card>\n                <CardContent className=\"p-8\">\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Contact Information</h3>\n                  \n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center flex-shrink-0\">\n                        <Mail className=\"text-blue-600\" size={18} />\n                      </div>\n                      <div>\n                        <p className=\"font-semibold text-gray-900\">Email</p>\n                        <p className=\"text-gray-600\">unfollowerstracker2024@gmail.com</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center flex-shrink-0\">\n                        <Clock className=\"text-green-600\" size={18} />\n                      </div>\n                      <div>\n                        <p className=\"font-semibold text-gray-900\">Response Time</p>\n                        <p className=\"text-gray-600\">Within 24 hours</p>\n                      </div>\n                    </div>\n                    \n                    <div className=\"flex items-start space-x-4\">\n                      <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center flex-shrink-0\">\n                        <MapPin className=\"text-purple-600\" size={18} />\n                      </div>\n                      <div>\n                        <p className=\"font-semibold text-gray-900\">Location</p>\n                        <p className=\"text-gray-600\">Global Support Team</p>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Quick FAQs */}\n              <Card>\n                <CardContent className=\"p-8\">\n                  <h3 className=\"text-xl font-bold text-gray-900 mb-6\">Quick Answers</h3>\n                  \n                  <div className=\"space-y-4\">\n                    {faqs.map((faq, index) => (\n                      <div key={index} className=\"border-l-4 border-purple-200 pl-4\">\n                        <h4 className=\"font-semibold text-gray-900 mb-2\">{faq.question}</h4>\n                        <p className=\"text-gray-600 text-sm\">{faq.answer}</p>\n                      </div>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 rounded-3xl p-8 border border-purple-100\">\n            <CheckCircle className=\"mx-auto text-green-500 mb-4\" size={48} />\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\n              We're Here to Help!\n            </h2>\n            <p className=\"text-gray-600 mb-6\">\n              Our support team is dedicated to ensuring you have the best experience with our Instagram analytics tool.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:from-purple-700 hover:to-pink-700\">\n                <Mail className=\"mr-2\" size={16} />\n                Email Support\n              </Button>\n              <Button variant=\"outline\" className=\"border-purple-200 text-purple-600 hover:bg-purple-50\">\n                <MessageCircle className=\"mr-2\" size={16} />\n                Live Chat\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":14291},"client/src/pages/cookie-policy.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Card, CardContent } from '@/components/ui/card';\n\nexport default function CookiePolicy() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">Cookie Policy</h1>\n          <p className=\"text-lg text-gray-100\">\n            Learn how we use cookies to enhance your experience.\n          </p>\n        </div>\n      </section>\n\n      <main className=\"py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardContent className=\"p-8 prose prose-lg max-w-none\">\n              <p className=\"text-gray-600 mb-8\">\n                <strong>Last updated:</strong> August 17, 2025\n              </p>\n\n              <h2>What Are Cookies</h2>\n              <p>\n                Cookies are small text files stored on your device when you visit our website. They help us provide you with a better browsing experience by remembering your preferences and improving our service.\n              </p>\n\n              <h2>How We Use Cookies</h2>\n              <p>\n                Unfollowers Tracker uses cookies for the following purposes:\n              </p>\n\n              <h3>Essential Cookies</h3>\n              <p>\n                These cookies are necessary for the website to function properly:\n              </p>\n              <ul>\n                <li>Session management and security</li>\n                <li>Remembering your preferences</li>\n                <li>Ensuring proper website functionality</li>\n              </ul>\n\n              <h3>Analytics Cookies</h3>\n              <p>\n                We use analytics cookies to understand how visitors interact with our website:\n              </p>\n              <ul>\n                <li>Page views and user behavior patterns</li>\n                <li>Popular features and content</li>\n                <li>Website performance metrics</li>\n                <li>Error tracking and debugging</li>\n              </ul>\n\n              <h3>Performance Cookies</h3>\n              <p>\n                These cookies help us improve website performance:\n              </p>\n              <ul>\n                <li>Loading time optimization</li>\n                <li>Content delivery improvement</li>\n                <li>Browser compatibility testing</li>\n              </ul>\n\n              <h2>Types of Cookies We Use</h2>\n              \n              <h3>First-Party Cookies</h3>\n              <p>\n                Set directly by our website for essential functionality and user experience.\n              </p>\n\n              <h3>Third-Party Cookies</h3>\n              <p>\n                We may use third-party services that set their own cookies:\n              </p>\n              <ul>\n                <li><strong>Google Analytics:</strong> For website usage analytics</li>\n                <li><strong>Content Delivery Networks:</strong> For faster content loading</li>\n                <li><strong>Error Monitoring:</strong> For service reliability</li>\n              </ul>\n\n              <h2>Cookie Duration</h2>\n              \n              <h3>Session Cookies</h3>\n              <p>\n                Temporary cookies that are deleted when you close your browser.\n              </p>\n\n              <h3>Persistent Cookies</h3>\n              <p>\n                Remain on your device for a set period or until you delete them manually.\n              </p>\n\n              <h2>Managing Your Cookie Preferences</h2>\n              <p>\n                You have several options to manage cookies:\n              </p>\n\n              <h3>Browser Settings</h3>\n              <p>\n                Most browsers allow you to:\n              </p>\n              <ul>\n                <li>View and delete cookies</li>\n                <li>Block cookies from specific websites</li>\n                <li>Block all cookies (may affect functionality)</li>\n                <li>Receive notifications when cookies are set</li>\n              </ul>\n\n              <h3>Opt-Out Options</h3>\n              <p>\n                You can opt out of specific tracking:\n              </p>\n              <ul>\n                <li><strong>Google Analytics:</strong> Use Google's opt-out browser add-on</li>\n                <li><strong>Do Not Track:</strong> Enable browser's Do Not Track setting</li>\n              </ul>\n\n              <h2>Impact of Disabling Cookies</h2>\n              <p>\n                Disabling cookies may affect your experience:\n              </p>\n              <ul>\n                <li>Some features may not work properly</li>\n                <li>Preferences won't be remembered</li>\n                <li>Website performance may be reduced</li>\n                <li>Analytics data won't be collected</li>\n              </ul>\n\n              <h2>Updates to This Policy</h2>\n              <p>\n                We may update this Cookie Policy from time to time to reflect changes in our practices or relevant laws. We encourage you to review this policy periodically.\n              </p>\n\n              <h2>Contact Us</h2>\n              <p>\n                If you have any questions about our use of cookies, please contact us at:\n              </p>\n              <p>\n                <strong>Email:</strong> unfollowerstracker2024@gmail.com\n              </p>\n\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6 mt-8\">\n                <h3 className=\"text-blue-800 font-semibold mb-2\">Your Consent</h3>\n                <p className=\"text-blue-700 text-sm mb-0\">\n                  By continuing to use our website, you consent to our use of cookies as described in this policy. \n                  You can withdraw your consent at any time by adjusting your browser settings.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":6197},"client/src/pages/disclaimer.tsx":{"content":"import { useSEO } from '@/hooks/use-seo';\nimport { Button } from '@/components/ui/button';\nimport { Link } from 'wouter';\nimport { ChevronRight, Home, AlertTriangle, Shield, Info, ExternalLink } from 'lucide-react';\nimport { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\n\nexport default function DisclaimerPage() {\n  useSEO();\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main>\n      {/* Breadcrumbs */}\n      <div className=\"bg-white border-b border-gray-200\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-3\">\n          <nav className=\"flex items-center space-x-2 text-sm text-gray-500\">\n            <Link href=\"/\" className=\"hover:text-purple-600 transition-colors flex items-center\">\n              <Home className=\"w-4 h-4 mr-1\" />\n              Home\n            </Link>\n            <ChevronRight className=\"w-4 h-4\" />\n            <span className=\"text-gray-900 font-medium\">Disclaimer</span>\n          </nav>\n        </div>\n      </div>\n\n      {/* Hero Section */}\n      <div className=\"bg-gradient-to-br from-purple-600 via-pink-500 to-orange-400 py-12\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-white/20 rounded-full mb-4\">\n            <AlertTriangle className=\"w-8 h-8 text-white\" />\n          </div>\n          <h1 className=\"text-2xl sm:text-3xl font-bold text-white mb-2\">\n            Disclaimer\n          </h1>\n          <p className=\"text-lg text-white/90 max-w-2xl mx-auto\">\n            Important information regarding the use of our Instagram analytics service\n          </p>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 sm:p-8\">\n          \n          {/* General Disclaimer */}\n          <section className=\"mb-8\">\n            <div className=\"flex items-center mb-4\">\n              <Info className=\"w-5 h-5 text-blue-600 mr-2\" />\n              <h2 className=\"text-xl font-semibold text-gray-900\">General Disclaimer</h2>\n            </div>\n            <div className=\"prose prose-gray max-w-none\">\n              <p className=\"text-gray-700 leading-relaxed mb-4\">\n                The information provided by Instagram Unfollowers Tracker (\"we,\" \"us,\" or \"our\") on this website is for general informational purposes only. All information on the site is provided in good faith, however we make no representation or warranty of any kind, express or implied, regarding the accuracy, adequacy, validity, reliability, availability, or completeness of any information on the site.\n              </p>\n              <p className=\"text-gray-700 leading-relaxed\">\n                Under no circumstance shall we have any liability to you for any loss or damage of any kind incurred as a result of the use of the site or reliance on any information provided on the site. Your use of the site and your reliance on any information on the site is solely at your own risk.\n              </p>\n            </div>\n          </section>\n\n          {/* Service Limitations */}\n          <section className=\"mb-8\">\n            <div className=\"flex items-center mb-4\">\n              <Shield className=\"w-5 h-5 text-amber-600 mr-2\" />\n              <h2 className=\"text-xl font-semibold text-gray-900\">Service Limitations</h2>\n            </div>\n            <div className=\"bg-amber-50 border border-amber-200 rounded-lg p-4 mb-4\">\n              <p className=\"text-amber-800 text-sm font-medium\">\n                <AlertTriangle className=\"w-4 h-4 inline mr-1\" />\n                Important: This tool analyzes data provided by Instagram's official data export feature only.\n              </p>\n            </div>\n            <ul className=\"space-y-3 text-gray-700\">\n              <li className=\"flex items-start\">\n                <span className=\"inline-block w-2 h-2 bg-purple-600 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span><strong>Data Accuracy:</strong> The accuracy of follower analysis depends entirely on the completeness and timeliness of Instagram's data export. We cannot guarantee 100% accuracy.</span>\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"inline-block w-2 h-2 bg-purple-600 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span><strong>Instagram Changes:</strong> Instagram frequently updates its platform, privacy settings, and data export format. These changes may affect our tool's functionality.</span>\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"inline-block w-2 h-2 bg-purple-600 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span><strong>Third-Party Service:</strong> We are not affiliated with, endorsed by, or connected to Instagram/Meta. This is an independent analysis tool.</span>\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"inline-block w-2 h-2 bg-purple-600 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span><strong>No Real-Time Data:</strong> Our analysis is based on historical data from your Instagram export, not real-time follower information.</span>\n              </li>\n            </ul>\n          </section>\n\n          {/* Privacy and Security */}\n          <section className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Privacy and Security</h2>\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-4\">\n              <p className=\"text-green-800 text-sm\">\n                <Shield className=\"w-4 h-4 inline mr-1\" />\n                We prioritize your privacy and do not store your Instagram data permanently.\n              </p>\n            </div>\n            <ul className=\"space-y-3 text-gray-700\">\n              <li className=\"flex items-start\">\n                <span className=\"inline-block w-2 h-2 bg-purple-600 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span>Your uploaded Instagram data is processed locally and not permanently stored on our servers.</span>\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"inline-block w-2 h-2 bg-purple-600 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span>We never ask for your Instagram login credentials or passwords.</span>\n              </li>\n              <li className=\"flex items-start\">\n                <span className=\"inline-block w-2 h-2 bg-purple-600 rounded-full mt-2 mr-3 flex-shrink-0\"></span>\n                <span>While we implement security measures, no internet transmission is 100% secure.</span>\n              </li>\n            </ul>\n          </section>\n\n          {/* External Links */}\n          <section className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">External Links Disclaimer</h2>\n            <p className=\"text-gray-700 leading-relaxed mb-4\">\n              This website may contain links to external websites that are not provided or maintained by us. We do not guarantee the accuracy, relevance, timeliness, or completeness of any information on external websites.\n            </p>\n            <p className=\"text-gray-700 leading-relaxed\">\n              The inclusion of any link does not imply endorsement by us of the site. Use of any linked website is at the user's own risk.\n            </p>\n          </section>\n\n          {/* Professional Advice */}\n          <section className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Professional Advice Disclaimer</h2>\n            <p className=\"text-gray-700 leading-relaxed mb-4\">\n              The information on this website is provided for educational and informational purposes only. It is not intended to be a substitute for professional social media marketing advice, business consultation, or expert guidance.\n            </p>\n            <p className=\"text-gray-700 leading-relaxed\">\n              You should always consult with a qualified professional before making any business decisions based on Instagram analytics or social media insights.\n            </p>\n          </section>\n\n          {/* Affiliate Disclaimer */}\n          <section className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Affiliate Disclaimer</h2>\n            <p className=\"text-gray-700 leading-relaxed mb-4\">\n              This website may contain affiliate links, which means we may receive a small commission if you make a purchase through our links, at no additional cost to you. This helps support the maintenance and development of our free service.\n            </p>\n            <p className=\"text-gray-700 leading-relaxed\">\n              We only recommend products and services that we believe will add value to our users. Our editorial content is not influenced by affiliate partnerships.\n            </p>\n          </section>\n\n          {/* Advertisement Disclaimer */}\n          <section className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Advertisement Disclaimer</h2>\n            <p className=\"text-gray-700 leading-relaxed mb-4\">\n              This website is supported by advertising. We may display third-party advertisements and sponsored content. We clearly distinguish between editorial content and promotional material.\n            </p>\n            <p className=\"text-gray-700 leading-relaxed\">\n              Advertisers do not influence our editorial decisions or content creation. We maintain editorial independence in all our articles and guides.\n            </p>\n          </section>\n\n          {/* Changes to Disclaimer */}\n          <section className=\"mb-8\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Changes to This Disclaimer</h2>\n            <p className=\"text-gray-700 leading-relaxed\">\n              We reserve the right to update this disclaimer at any time. Changes will be effective immediately upon posting on this page. Your continued use of the service constitutes acceptance of any changes.\n            </p>\n            <p className=\"text-sm text-gray-500 mt-4\">\n              Last updated: August 18, 2025\n            </p>\n          </section>\n\n          {/* Contact Information */}\n          <section className=\"border-t border-gray-200 pt-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Questions About This Disclaimer</h2>\n            <p className=\"text-gray-700 leading-relaxed mb-4\">\n              If you have any questions about this disclaimer, please contact us through our contact page or email us directly.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-3\">\n              <Link href=\"/contact\">\n                <Button className=\"bg-purple-600 hover:bg-purple-700 text-white inline-flex items-center\">\n                  Contact Us\n                  <ExternalLink className=\"w-4 h-4 ml-2\" />\n                </Button>\n              </Link>\n              <Link href=\"/privacy-policy\">\n                <Button variant=\"outline\" className=\"border-purple-600 text-purple-600 hover:bg-purple-50 inline-flex items-center\">\n                  Privacy Policy\n                  <ExternalLink className=\"w-4 h-4 ml-2\" />\n                </Button>\n              </Link>\n            </div>\n          </section>\n\n        </div>\n      </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}","size_bytes":11644},"client/src/pages/followers-insights.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { FAQSection } from '@/components/faq-section';\nimport { BarChart3, Users, TrendingUp, Eye, Heart, MessageCircle, Share2, Clock, Target } from 'lucide-react';\n\nexport function FollowersInsightsPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-12 pb-10 bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-20 right-10 w-64 h-64 bg-white opacity-5 rounded-full blur-3xl animate-pulse-slow\"></div>\n          <div className=\"absolute bottom-20 left-20 w-48 h-48 bg-white opacity-5 rounded-full blur-2xl animate-float\"></div>\n        </div>\n        \n        <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-bold mb-6 leading-tight\">\n            Instagram Followers Insights\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-100 mb-8 max-w-4xl mx-auto font-medium\">\n            Get deep insights into your Instagram followers behavior, engagement patterns, and growth metrics. Understand your audience like never before.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n            <Button \n              size=\"lg\"\n              onClick={() => document.getElementById('insights-features')?.scrollIntoView({ behavior: 'smooth' })}\n              className=\"bg-white text-purple-600 px-10 py-4 rounded-xl font-bold text-xl hover:bg-gray-100 transition-all transform hover:scale-105 shadow-2xl\"\n              data-testid=\"button-explore-insights\"\n            >\n              <BarChart3 className=\"mr-3\" size={24} />\n              Explore Insights\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Key Insights Features */}\n      <section id=\"insights-features\" className=\"py-12 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              Comprehensive Instagram Followers Analytics\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Discover valuable insights about your Instagram followers, their behavior patterns, and engagement preferences to optimize your content strategy.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Users className=\"text-blue-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Follower Demographics</h3>\n                <p className=\"text-gray-600\">\n                  Analyze your follower base with detailed demographics including location, age groups, activity patterns, and follower quality metrics.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">\n                  <TrendingUp className=\"text-green-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Growth Tracking</h3>\n                <p className=\"text-gray-600\">\n                  Monitor your follower growth rate, identify trends, peak growth periods, and understand what content drives the most followers.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Heart className=\"text-purple-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Engagement Analysis</h3>\n                <p className=\"text-gray-600\">\n                  Deep dive into likes, comments, shares, and story interactions to understand which content resonates most with your audience.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-orange-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Eye className=\"text-orange-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Content Performance</h3>\n                <p className=\"text-gray-600\">\n                  Analyze which posts, stories, and reels perform best. Identify optimal posting times and content types for maximum reach.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-pink-100 rounded-xl flex items-center justify-center mb-4\">\n                  <MessageCircle className=\"text-pink-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Interaction Patterns</h3>\n                <p className=\"text-gray-600\">\n                  Understand how your followers interact with your content, comment sentiment analysis, and most engaged follower segments.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-red-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Target className=\"text-red-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Audience Insights</h3>\n                <p className=\"text-gray-600\">\n                  Discover your most valuable followers, identify influencers in your network, and understand your audience's interests and behaviors.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Advanced Analytics Section */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n                Advanced Instagram Followers Intelligence\n              </h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Transform your Instagram strategy with data-driven insights. Our followers insights tool provides actionable intelligence to grow your audience effectively.\n              </p>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <BarChart3 className=\"text-blue-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Follower Quality Analysis</h3>\n                    <p className=\"text-gray-600\">\n                      Identify high-quality followers vs. inactive accounts. Understand follower authenticity and engagement potential.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <TrendingUp className=\"text-green-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Growth Optimization</h3>\n                    <p className=\"text-gray-600\">\n                      Discover the best strategies to attract and retain followers based on your current audience behavior patterns.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <Clock className=\"text-purple-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Optimal Posting Times</h3>\n                    <p className=\"text-gray-600\">\n                      Analyze when your followers are most active to maximize reach, engagement, and content visibility.\n                    </p>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"mt-8\">\n                <Button \n                  size=\"lg\"\n                  onClick={() => window.location.href = '/'}\n                  className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white hover:from-blue-700 hover:to-purple-700 transition-all font-bold text-lg px-8 py-3 rounded-xl shadow-lg hover:shadow-xl\"\n                >\n                  Get Your Followers Insights\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-blue-600 to-purple-600 rounded-2xl p-8 text-white\">\n                <h3 className=\"text-2xl font-bold mb-6\">Insight Categories</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Share2 size={20} className=\"text-blue-200\" />\n                    <span>Follower Growth Analytics</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Heart size={20} className=\"text-pink-200\" />\n                    <span>Engagement Rate Analysis</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Eye size={20} className=\"text-purple-200\" />\n                    <span>Content Performance Metrics</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <MessageCircle size={20} className=\"text-green-200\" />\n                    <span>Audience Interaction Patterns</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Target size={20} className=\"text-orange-200\" />\n                    <span>Follower Quality Assessment</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"py-20 bg-gradient-to-br from-blue-50 to-purple-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n            Why Instagram Followers Insights Matter\n          </h2>\n          <p className=\"text-xl text-gray-600 mb-12 max-w-3xl mx-auto\">\n            Understanding your followers is key to Instagram success. Make data-driven decisions to grow your audience and increase engagement.\n          </p>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <TrendingUp className=\"text-blue-600\" size={32} />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Boost Growth Rate</h3>\n              <p className=\"text-gray-600\">\n                Identify what attracts followers and replicate successful strategies to accelerate your Instagram growth.\n              </p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Heart className=\"text-purple-600\" size={32} />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Increase Engagement</h3>\n              <p className=\"text-gray-600\">\n                Understand what content your followers love most and create more engaging posts that drive interactions.\n              </p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Target className=\"text-green-600\" size={32} />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-3\">Target Better</h3>\n              <p className=\"text-gray-600\">\n                Know your audience demographics and preferences to create targeted content that resonates with your followers.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <FAQSection />\n      <Footer />\n    </div>\n  );\n}","size_bytes":13945},"client/src/pages/ghost-followers.tsx":{"content":"import { Header } from '@/components/header';\nimport { SEOHead } from '@/components/seo-head';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { FileUpload } from '@/components/file-upload';\nimport { StatsDashboard } from '@/components/stats-dashboard';\nimport { Users, Ghost, Shield, Clock, Zap, CheckCircle, TrendingUp, Eye, UserMinus, AlertTriangle, Target } from 'lucide-react';\nimport { useState } from 'react';\n\nexport function GhostFollowersPage() {\n  const [hasUploadedFile, setHasUploadedFile] = useState(false);\n\n  const handleFileUploaded = (file: File) => {\n    setHasUploadedFile(true);\n  };\n\n  const features = [\n    {\n      icon: Ghost,\n      title: 'Identify Ghost Followers',\n      description: 'Detect accounts with no profile picture, few posts, or suspicious activity patterns',\n      color: 'purple'\n    },\n    {\n      icon: UserMinus,\n      title: 'Fake Account Detection',\n      description: 'Advanced algorithms identify bot accounts and purchased followers automatically',\n      color: 'red'\n    },\n    {\n      icon: Target,\n      title: 'Engagement Quality',\n      description: 'Analyze which followers actually engage vs ghost accounts that never interact',\n      color: 'blue'\n    },\n    {\n      icon: Shield,\n      title: 'Account Protection',\n      description: 'Protect your Instagram credibility by identifying and removing fake followers',\n      color: 'green'\n    }\n  ];\n\n  const benefits = [\n    'Improve authentic engagement rates',\n    'Boost Instagram algorithm performance',\n    'Enhance brand credibility',\n    'Better influencer marketing metrics',\n    'Cleaner audience analytics',\n    'Higher conversion rates'\n  ];\n\n  return (\n    <>\n      <SEOHead />\n      {/* SEO Meta Tags */}\n      <title>Ghost Followers Tracker – Detect Fake & Inactive Instagram Accounts</title>\n      <meta name=\"description\" content=\"Use our Ghost Followers Tracker to spot fake or inactive Instagram accounts. Clean your audience, boost engagement, and grow with real, active followers.\" />\n      <meta name=\"keywords\" content=\"instagram ghost followers, fake followers detector, bot followers, instagram engagement, ghost followers tracker, remove fake followers, instagram analytics\" />\n      <meta property=\"og:title\" content=\"Instagram Ghost Followers Tracker - Find Fake Followers Free\" />\n      <meta property=\"og:description\" content=\"Detect and remove ghost followers from Instagram. Free tool to identify fake accounts, bot followers, and inactive users.\" />\n      <meta property=\"og:url\" content=\"https://unfollowerstracker.com/ghost-followers\" />\n      <script type=\"application/ld+json\" dangerouslySetInnerHTML={{\n        __html: JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"WebPage\",\n          \"name\": \"Instagram Ghost Followers Tracker - Find Fake Followers Free\",\n          \"description\": \"Detect and remove ghost followers from Instagram. Free tool to identify fake accounts, bot followers, and inactive users. Improve engagement rates instantly.\",\n          \"url\": \"https://unfollowerstracker.com/ghost-followers\",\n          \"breadcrumb\": {\n            \"@type\": \"BreadcrumbList\",\n            \"itemListElement\": [\n              {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Home\",\n                \"item\": \"https://unfollowerstracker.com\"\n              },\n              {\n                \"@type\": \"ListItem\", \n                \"position\": 2,\n                \"name\": \"Ghost Followers Tracker\",\n                \"item\": \"https://unfollowerstracker.com/ghost-followers\"\n              }\n            ]\n          },\n          \"mainEntity\": {\n            \"@type\": \"SoftwareApplication\",\n            \"name\": \"Instagram Ghost Followers Tracker\",\n            \"applicationCategory\": \"Social Media Analytics\",\n            \"operatingSystem\": \"Web Browser\",\n            \"offers\": {\n              \"@type\": \"Offer\",\n              \"price\": \"0\",\n              \"priceCurrency\": \"USD\"\n            }\n          }\n        })\n      }} />\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n\n        {/* Hero Section */}\n        <section className=\"py-12 bg-gradient-to-br from-purple-600 via-indigo-600 to-pink-600 text-white relative overflow-hidden\">\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-10 left-10 w-32 h-32 bg-white opacity-5 rounded-full blur-2xl animate-pulse-slow\"></div>\n            <div className=\"absolute bottom-10 right-20 w-24 h-24 bg-white opacity-5 rounded-full blur-xl animate-float\"></div>\n          </div>\n          \n          <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n              Free Ghost Followers Detection\n            </Badge>\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-4 leading-tight\">\n              Instagram Ghost Followers\n              <span className=\"block text-yellow-300\">Tracker & Detector</span>\n            </h1>\n            <p className=\"text-lg text-gray-100 mb-6 max-w-3xl mx-auto\">\n              Identify fake followers, ghost accounts, and inactive users ruining your engagement. \n              Clean your audience and boost authentic interactions with our free detection tool.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n              <Button \n                size=\"lg\"\n                onClick={() => document.getElementById('ghost-tracker')?.scrollIntoView({ behavior: 'smooth' })}\n                className=\"bg-white text-purple-600 px-8 py-3 rounded-xl font-bold hover:bg-gray-100 transition-all transform hover:scale-105 shadow-lg\"\n              >\n                <Ghost className=\"mr-2\" size={20} />\n                Find Ghost Followers\n              </Button>\n            </div>\n\n            {/* Trust Indicators */}\n            <div className=\"flex flex-wrap justify-center items-center gap-6 text-sm opacity-90\">\n              <div className=\"flex items-center gap-2\">\n                <Shield size={16} />\n                <span>100% Safe & Private</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Clock size={16} />\n                <span>Instant Results</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Zap size={16} />\n                <span>No Login Required</span>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Breadcrumbs */}\n        <section className=\"bg-white py-4 border-b border-gray-200\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={[\n              { label: 'Home', href: '/' },\n              { label: 'Ghost Followers Tracker', current: true }\n            ]} />\n          </div>\n        </section>\n\n        {/* Main Tool */}\n        <div id=\"ghost-tracker\">\n          <FileUpload onFileUploaded={handleFileUploaded} />\n          {hasUploadedFile && <StatsDashboard />}\n        </div>\n\n        {/* What Are Ghost Followers */}\n        <section className=\"py-10 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                What Are Instagram Ghost Followers?\n              </h2>\n              <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n                Ghost followers are fake or inactive Instagram accounts that follow you but never engage \n                with your content. They hurt your engagement rate and make your audience metrics misleading.\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {features.map((feature, index) => (\n                <Card key={index} className=\"p-6 text-center hover:shadow-lg transition-all hover:-translate-y-1 duration-300 border-0 shadow-md\">\n                  <CardContent className=\"pt-0\">\n                    <div className={`w-12 h-12 bg-${feature.color}-100 rounded-xl flex items-center justify-center mx-auto mb-4`}>\n                      <feature.icon className={`text-${feature.color}-600`} size={24} />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{feature.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Why Remove Ghost Followers */}\n        <section className=\"py-10 bg-gradient-to-br from-gray-50 to-blue-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-6\">\n                  Why You Should Remove Ghost Followers\n                </h2>\n                <p className=\"text-lg text-gray-600 mb-8\">\n                  Ghost followers significantly damage your Instagram performance. They create a false \n                  impression of popularity while drastically reducing your engagement rates and reach.\n                </p>\n\n                <div className=\"space-y-4\">\n                  {benefits.map((benefit, index) => (\n                    <div key={index} className=\"flex items-start space-x-3\">\n                      <CheckCircle className=\"text-green-500 mt-1 flex-shrink-0\" size={20} />\n                      <span className=\"text-gray-700 font-medium\">{benefit}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <Card className=\"p-6 bg-red-50 border border-red-200\">\n                  <CardContent className=\"pt-0\">\n                    <div className=\"flex items-center mb-3\">\n                      <AlertTriangle className=\"text-red-600 mr-3\" size={20} />\n                      <h3 className=\"font-semibold text-red-900\">Problems with Ghost Followers</h3>\n                    </div>\n                    <ul className=\"text-sm text-red-800 space-y-1\">\n                      <li>• Lower engagement rates</li>\n                      <li>• Reduced Instagram reach</li>\n                      <li>• Poor algorithm performance</li>\n                      <li>• Misleading analytics</li>\n                      <li>• Damaged credibility</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"p-6 bg-green-50 border border-green-200\">\n                  <CardContent className=\"pt-0\">\n                    <div className=\"flex items-center mb-3\">\n                      <TrendingUp className=\"text-green-600 mr-3\" size={20} />\n                      <h3 className=\"font-semibold text-green-900\">Benefits of Clean Audience</h3>\n                    </div>\n                    <ul className=\"text-sm text-green-800 space-y-1\">\n                      <li>• Higher engagement rates</li>\n                      <li>• Better algorithm visibility</li>\n                      <li>• Authentic audience insights</li>\n                      <li>• Improved brand reputation</li>\n                      <li>• Better conversion rates</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* How It Works */}\n        <section className=\"py-10 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                How Ghost Followers Detection Works\n              </h2>\n              <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n                Our advanced algorithm analyzes your Instagram followers to identify suspicious patterns, \n                fake accounts, and inactive users that damage your engagement.\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Eye className=\"text-purple-600\" size={32} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Analyze Patterns</h3>\n                <p className=\"text-gray-600\">\n                  Scan follower profiles for signs of fake accounts: no profile pics, few posts, \n                  suspicious usernames, and zero engagement history.\n                </p>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <Target className=\"text-blue-600\" size={32} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Identify Ghost Accounts</h3>\n                <p className=\"text-gray-600\">\n                  Detect inactive followers who never like, comment, or engage with your content \n                  but artificially inflate your follower count.\n                </p>\n              </div>\n\n              <div className=\"text-center\">\n                <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                  <TrendingUp className=\"text-green-600\" size={32} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Get Clean Insights</h3>\n                <p className=\"text-gray-600\">\n                  Receive detailed reports showing ghost followers, engagement quality metrics, \n                  and recommendations for improving your audience authenticity.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* FAQ Section */}\n        <section className=\"py-16 bg-gray-50\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                Frequently Asked Questions\n              </h2>\n            </div>\n\n            <div className=\"space-y-8\">\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  How do I identify ghost followers on Instagram?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Ghost followers typically have incomplete profiles (no bio, few posts), generic profile pictures, \n                  suspicious usernames with random numbers, and zero engagement with your content. Our tool \n                  automatically detects these patterns in your follower list.\n                </p>\n              </div>\n\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  Should I remove ghost followers from Instagram?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Yes, removing ghost followers improves your engagement rate, helps Instagram's algorithm \n                  show your content to more people, and provides more accurate analytics about your real \n                  audience. It's essential for maintaining authentic growth.\n                </p>\n              </div>\n\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  Is it safe to use a ghost followers detector?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Our tool is completely safe as it uses only your Instagram data export file. We don't \n                  require your password, don't store your data, and process everything locally in your \n                  browser for maximum security and privacy.\n                </p>\n              </div>\n\n              <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  How often should I check for ghost followers?\n                </h3>\n                <p className=\"text-gray-600\">\n                  We recommend checking for ghost followers monthly, especially if you're actively growing \n                  your account or running Instagram marketing campaigns. Regular cleaning helps maintain \n                  high engagement rates and authentic audience metrics.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-16 bg-gradient-to-br from-purple-600 to-pink-600 text-white\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\n              Ready to Clean Your Instagram Followers?\n            </h2>\n            <p className=\"text-lg mb-8\">\n              Start detecting ghost followers now. Boost your engagement rates and improve your Instagram performance.\n            </p>\n            <Button \n              size=\"lg\"\n              onClick={() => document.getElementById('ghost-tracker')?.scrollIntoView({ behavior: 'smooth' })}\n              className=\"bg-white text-purple-600 px-8 py-3 rounded-xl font-bold hover:bg-gray-100 transition-all transform hover:scale-105\"\n            >\n              <Ghost className=\"mr-2\" size={20} />\n              Start Ghost Detection\n            </Button>\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default GhostFollowersPage;","size_bytes":18357},"client/src/pages/help-center.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Mail, MessageCircle, HelpCircle } from 'lucide-react';\n\nexport default function HelpCenter() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">Help Center</h1>\n          <p className=\"text-lg text-gray-100\">\n            Get help with using Unfollowers Tracker and troubleshooting common issues.\n          </p>\n        </div>\n      </section>\n\n      <main className=\"py-16\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Quick Help Cards */}\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-12\">\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  <HelpCircle className=\"text-blue-600\" size={24} />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Quick Start Guide</h3>\n                <p className=\"text-gray-600 text-sm mb-4\">Learn how to get your Instagram data and start analyzing</p>\n                <Button variant=\"outline\" size=\"sm\">Learn More</Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  <MessageCircle className=\"text-green-600\" size={24} />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Common Issues</h3>\n                <p className=\"text-gray-600 text-sm mb-4\">Solutions to frequently encountered problems</p>\n                <Button variant=\"outline\" size=\"sm\">View Solutions</Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"text-center hover:shadow-lg transition-shadow\">\n              <CardContent className=\"p-6\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                  <Mail className=\"text-purple-600\" size={24} />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Contact Support</h3>\n                <p className=\"text-gray-600 text-sm mb-4\">Get personalized help from our support team</p>\n                <Button variant=\"outline\" size=\"sm\">Contact Us</Button>\n              </CardContent>\n            </Card>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Getting Started */}\n            <Card>\n              <CardContent className=\"p-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Getting Started</h2>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Step 1: Request Your Instagram Data</h3>\n                    <p className=\"text-gray-600 text-sm\">\n                      Go to Instagram Settings → Privacy and Security → Download Your Information. \n                      Select JSON format and include followers and following data.\n                    </p>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Step 2: Download the ZIP File</h3>\n                    <p className=\"text-gray-600 text-sm\">\n                      Instagram will email you when your data is ready (usually within 48 hours). \n                      Download the ZIP file to your device.\n                    </p>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Step 3: Upload and Analyze</h3>\n                    <p className=\"text-gray-600 text-sm\">\n                      Upload your ZIP file to our secure analyzer. Your data is processed locally \n                      and results appear instantly.\n                    </p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Troubleshooting */}\n            <Card>\n              <CardContent className=\"p-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Troubleshooting</h2>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">File Upload Issues</h3>\n                    <ul className=\"text-gray-600 text-sm space-y-1\">\n                      <li>• Ensure file is under 50MB</li>\n                      <li>• Only ZIP files are accepted</li>\n                      <li>• Try refreshing the page and uploading again</li>\n                      <li>• Check your internet connection</li>\n                    </ul>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Incorrect Results</h3>\n                    <ul className=\"text-gray-600 text-sm space-y-1\">\n                      <li>• Ensure you downloaded the latest data from Instagram</li>\n                      <li>• Check that the ZIP contains followers.json and following.json</li>\n                      <li>• Results may vary based on privacy settings</li>\n                    </ul>\n                  </div>\n\n                  <div>\n                    <h3 className=\"font-semibold text-gray-900 mb-2\">Browser Compatibility</h3>\n                    <ul className=\"text-gray-600 text-sm space-y-1\">\n                      <li>• Use latest Chrome, Firefox, Safari, or Edge</li>\n                      <li>• Enable JavaScript in your browser</li>\n                      <li>• Clear cache and cookies if issues persist</li>\n                    </ul>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* FAQ Section */}\n          <Card className=\"mt-8\">\n            <CardContent className=\"p-8\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Frequently Asked Questions</h2>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                <div>\n                  <h3 className=\"font-semibold text-gray-900 mb-2\">Is my data safe?</h3>\n                  <p className=\"text-gray-600 text-sm mb-4\">\n                    Yes, your data is processed locally in your browser and never stored on our servers. \n                    We don't require your Instagram password.\n                  </p>\n                </div>\n\n                <div>\n                  <h3 className=\"font-semibold text-gray-900 mb-2\">Why do I need to download my data?</h3>\n                  <p className=\"text-gray-600 text-sm mb-4\">\n                    This method ensures your account security and privacy. Instagram provides this \n                    official way to access your own data.\n                  </p>\n                </div>\n\n                <div>\n                  <h3 className=\"font-semibold text-gray-900 mb-2\">How often should I analyze my data?</h3>\n                  <p className=\"text-gray-600 text-sm mb-4\">\n                    Monthly analysis is recommended for active accounts. Request new data \n                    from Instagram each time for accurate results.\n                  </p>\n                </div>\n\n                <div>\n                  <h3 className=\"font-semibold text-gray-900 mb-2\">Can I use this for business accounts?</h3>\n                  <p className=\"text-gray-600 text-sm mb-4\">\n                    Yes, our tool works with both personal and business Instagram accounts. \n                    The data export process is the same.\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Contact Section */}\n          <Card className=\"mt-8 bg-gradient-to-r from-purple-50 to-pink-50 border-purple-200\">\n            <CardContent className=\"p-8 text-center\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">Still Need Help?</h2>\n              <p className=\"text-gray-600 mb-6\">\n                Our support team is here to help you with any questions or issues you might have.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button className=\"bg-purple-600 hover:bg-purple-700\">\n                  <Mail className=\"mr-2\" size={16} />\n                  Email Support\n                </Button>\n                <Button variant=\"outline\">\n                  <MessageCircle className=\"mr-2\" size={16} />\n                  Live Chat\n                </Button>\n              </div>\n              <p className=\"text-sm text-gray-500 mt-4\">\n                Average response time: 24 hours\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":9470},"client/src/pages/home.tsx":{"content":"import { useState } from 'react';\nimport { Header } from '@/components/header';\nimport { HeroSection } from '@/components/hero-section';\nimport { FileUpload } from '@/components/file-upload';\nimport { StatsDashboard } from '@/components/stats-dashboard';\nimport { LiveDemo } from '@/components/live-demo';\nimport { SocialProof } from '@/components/social-proof';\nimport { SEOContent } from '@/components/seo-content';\nimport { HowItWorks } from '@/components/how-it-works';\nimport { Features } from '@/components/features';\nimport { WhyUseOurTool } from '@/components/why-use-our-tool';\nimport { BlogSection } from '@/components/blog-section';\nimport { FAQSection } from '@/components/faq-section';\nimport { Footer } from '@/components/footer';\nimport { SEOStructuredData } from '@/components/seo-structured-data';\nimport { SEOHead } from '@/components/seo-head';\nimport { Button } from '@/components/ui/button';\nimport { Rocket, HelpCircle } from 'lucide-react';\n\nexport default function Home() {\n  const [hasUploadedFile, setHasUploadedFile] = useState(false);\n\n  const handleFileUploaded = (file: File) => {\n    setHasUploadedFile(true);\n    // Scroll to results section\n    setTimeout(() => {\n      const resultsSection = document.getElementById('results');\n      if (resultsSection) {\n        resultsSection.scrollIntoView({ behavior: 'smooth', block: 'start' });\n      }\n    }, 1000);\n  };\n\n  const scrollToUpload = () => {\n    const element = document.getElementById('upload');\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  };\n\n  const scrollToHowItWorks = () => {\n    const element = document.getElementById('how-it-works');\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth', block: 'start' });\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <SEOHead />\n      <SEOStructuredData />\n      <Header />\n      <main role=\"main\">\n        <HeroSection />\n        <section id=\"upload\" aria-labelledby=\"upload-heading\">\n          <h2 id=\"upload-heading\" className=\"sr-only\">Upload Instagram Data</h2>\n          <FileUpload onFileUploaded={handleFileUploaded} />\n        </section>\n        \n        {/* Show results dashboard after file upload */}\n        {hasUploadedFile && (\n          <section id=\"results\" aria-labelledby=\"results-heading\">\n            <h2 id=\"results-heading\" className=\"sr-only\">Analysis Results</h2>\n            <StatsDashboard />\n          </section>\n        )}\n        \n        <section id=\"demo\" aria-labelledby=\"demo-heading\">\n          <h2 id=\"demo-heading\" className=\"sr-only\">Live Demo</h2>\n          <LiveDemo />\n        </section>\n        \n        <section id=\"how-it-works\" aria-labelledby=\"how-it-works-heading\">\n          <HowItWorks />\n        </section>\n        \n        <section id=\"why-choose-us\" aria-labelledby=\"why-choose-heading\">\n          <WhyUseOurTool />\n        </section>\n        \n        <section id=\"features\" aria-labelledby=\"features-heading\">\n          <Features />\n        </section>\n        \n        <section id=\"social-proof\" aria-labelledby=\"social-proof-heading\">\n          <h2 id=\"social-proof-heading\" className=\"sr-only\">User Reviews and Testimonials</h2>\n          <SocialProof />\n        </section>\n        \n        <section id=\"blog\" aria-labelledby=\"blog-heading\">\n          <BlogSection />\n        </section>\n        \n        <section id=\"seo-content\" aria-labelledby=\"seo-content-heading\">\n          <h2 id=\"seo-content-heading\" className=\"sr-only\">Instagram Analytics Information</h2>\n          <SEOContent />\n        </section>\n        \n        <section id=\"faq\" aria-labelledby=\"faq-heading\">\n          <FAQSection />\n        </section>\n        \n        {/* CTA Section */}\n        <section className=\"py-10 bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 relative overflow-hidden\" aria-labelledby=\"cta-heading\">\n          {/* Floating elements */}\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-10 left-10 w-24 h-24 bg-white opacity-5 rounded-full animate-pulse-slow\"></div>\n            <div className=\"absolute bottom-20 right-20 w-20 h-20 bg-white opacity-5 rounded-full animate-float\"></div>\n            <div className=\"absolute top-1/2 left-1/4 w-12 h-12 bg-white opacity-5 rounded-full animate-pulse-slow\" style={{animationDelay: '2s'}}></div>\n          </div>\n          \n          <div className=\"relative z-10 max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <h2 id=\"cta-heading\" className=\"text-2xl sm:text-3xl font-bold text-white mb-4\">\n              Ready to Discover Your Instagram Insights?\n            </h2>\n            <p className=\"text-base sm:text-lg text-gray-100 mb-6 max-w-xl mx-auto\">\n              Find out who doesn't follow you back and manage your follower list effectively\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Button \n                size=\"lg\"\n                onClick={scrollToUpload}\n                className=\"bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold text-base hover:bg-gray-100 transition-all transform hover:scale-105 shadow-lg\"\n              >\n                <Rocket className=\"mr-2\" size={16} />\n                Start Analysis Now\n              </Button>\n              <Button \n                size=\"lg\"\n                variant=\"outline\"\n                onClick={scrollToHowItWorks}\n                className=\"border-2 border-white text-white px-6 py-3 rounded-lg font-medium text-base hover:bg-white hover:text-purple-600 transition-all bg-transparent\"\n              >\n                <HelpCircle className=\"mr-2\" size={16} />\n                Learn More\n              </Button>\n            </div>\n            \n            <div className=\"mt-6 flex flex-wrap justify-center items-center gap-4 text-white/90 text-xs\">\n              <div className=\"flex items-center gap-2\">\n                <span className=\"w-1 h-1 bg-white rounded-full\"></span>\n                <span>No signup required</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"w-1 h-1 bg-white rounded-full\"></span>\n                <span>100% free forever</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className=\"w-1 h-1 bg-white rounded-full\"></span>\n                <span>Instant results</span>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":6572},"client/src/pages/how-it-works.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { BannerAd, InArticleAd } from '@/components/adsense-ad';\nimport { Download, Upload, BarChart3, Shield, Clock, CheckCircle, ArrowRight, Instagram, FileArchive, ExternalLink, Eye } from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport function HowItWorksPage() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"py-10 bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 text-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-3xl md:text-4xl font-bold mb-4 leading-tight\">\n            How It Works\n          </h1>\n          <p className=\"text-lg text-gray-100 mb-6 max-w-2xl mx-auto\">\n            Track Instagram unfollowers safely in 3 simple steps. No passwords required.\n          </p>\n        </div>\n      </section>\n\n      {/* Breadcrumbs - Moved under hero */}\n      <section className=\"bg-gray-50 py-4 border-b border-gray-200\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Breadcrumbs items={[\n            { label: 'Home', href: '/' },\n            { label: 'How It Works', current: true }\n          ]} />\n        </div>\n      </section>\n\n      {/* Step by Step Process */}\n      <section className=\"py-10 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-3\">\n              Simple 3-Step Process\n            </h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto\">\n              Get detailed unfollower insights in minutes without compromising your account security.\n            </p>\n          </div>\n\n          <div className=\"space-y-8\">\n            {/* Step 1 */}\n            <div className=\"flex flex-col lg:flex-row items-center gap-8\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-8 h-8 bg-green-500 text-white rounded-full flex items-center justify-center font-bold text-sm mr-3\">\n                    1\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">Request Your Instagram Data</h3>\n                </div>\n                <p className=\"text-gray-600 mb-4 text-sm\">\n                  Go to Instagram Settings → Privacy and Security → Download Your Information. Select JSON format. This method is 100% safe and doesn't require sharing your login credentials with any <Link href=\"/instagram-auto-unfollow-explained\" className=\"text-purple-600 hover:text-purple-700 font-medium\">third-party auto unfollow tools</Link>.\n                </p>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <CheckCircle className=\"text-green-500 flex-shrink-0\" size={16} />\n                    <span className=\"text-gray-700\">100% Safe & Official</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <CheckCircle className=\"text-green-500 flex-shrink-0\" size={16} />\n                    <span className=\"text-gray-700\">No Password Required</span>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"flex-1 lg:max-w-sm\">\n                <Card className=\"p-6 bg-gradient-to-br from-green-50 to-blue-50 border-0 shadow-md\">\n                  <CardContent className=\"pt-0 text-center\">\n                    <div className=\"w-12 h-12 bg-green-500 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                      <Instagram className=\"text-white\" size={20} />\n                    </div>\n                    <h4 className=\"font-semibold mb-3\">Instagram Settings</h4>\n                    <div className=\"space-y-2 text-left text-sm\">\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowRight className=\"text-green-500\" size={14} />\n                        <span>Privacy and Security</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowRight className=\"text-green-500\" size={14} />\n                        <span>Download Information</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowRight className=\"text-green-500\" size={14} />\n                        <span>Select JSON Format</span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n\n            {/* Step 2 */}\n            <div className=\"flex flex-col lg:flex-row items-center gap-8\">\n              <div className=\"flex-1 lg:max-w-sm\">\n                <Card className=\"p-6 bg-gradient-to-br from-blue-50 to-purple-50 border-0 shadow-md\">\n                  <CardContent className=\"pt-0 text-center\">\n                    <div className=\"w-12 h-12 bg-blue-500 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                      <Download className=\"text-white\" size={20} />\n                    </div>\n                    <h4 className=\"font-semibold mb-3\">Download Process</h4>\n                    <div className=\"space-y-2 text-sm\">\n                      <div className=\"flex items-center justify-between\">\n                        <span>Data Preparation</span>\n                        <span className=\"text-blue-600 font-medium\">24-48h</span>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span>Email Notification</span>\n                        <span className=\"text-green-600 font-medium\">Ready!</span>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span>File Format</span>\n                        <span className=\"text-purple-600 font-medium\">ZIP</span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n              \n              <div className=\"flex-1\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold text-sm mr-3\">\n                    2\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">Download Your ZIP File</h3>\n                </div>\n                <p className=\"text-gray-600 mb-4 text-sm\">\n                  Instagram prepares your data (24-48 hours) and sends an email when ready. Download the ZIP file. Your data includes followers, following lists, and engagement history - everything needed for our <Link href=\"/unfollowers-tracker\" className=\"text-purple-600 hover:text-purple-700 font-medium\">Instagram unfollowers tracker</Link>.\n                </p>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <Clock className=\"text-blue-500 flex-shrink-0\" size={16} />\n                    <span className=\"text-gray-700\">Wait for email notification</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <Download className=\"text-blue-500 flex-shrink-0\" size={16} />\n                    <span className=\"text-gray-700\">Download ZIP file securely</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Step 3 */}\n            <div className=\"flex flex-col lg:flex-row items-center gap-8\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center mb-4\">\n                  <div className=\"w-8 h-8 bg-purple-500 text-white rounded-full flex items-center justify-center font-bold text-sm mr-3\">\n                    3\n                  </div>\n                  <h3 className=\"text-xl font-bold text-gray-900\">Upload & Get Instant Results</h3>\n                </div>\n                <p className=\"text-gray-600 mb-4 text-sm\">\n                  Upload your ZIP file to our secure tracker. Data is processed locally in your browser for complete privacy. Unlike <Link href=\"/instagram-auto-unfollow-explained\" className=\"text-purple-600 hover:text-purple-700 font-medium\">automatic follow/unfollow tools</Link>, our method keeps your account completely safe.\n                </p>\n                \n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <Upload className=\"text-purple-500 flex-shrink-0\" size={16} />\n                    <span className=\"text-gray-700\">Drag & drop upload</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <BarChart3 className=\"text-purple-500 flex-shrink-0\" size={16} />\n                    <span className=\"text-gray-700\">Results in 10 seconds</span>\n                  </div>\n                  <div className=\"flex items-center space-x-2 text-sm\">\n                    <Shield className=\"text-purple-500 flex-shrink-0\" size={16} />\n                    <span className=\"text-gray-700\">Local processing only</span>\n                  </div>\n                </div>\n\n                <div className=\"mt-6\">\n                  <Button \n                    size=\"sm\"\n                    onClick={() => window.location.href = '/'}\n                    className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:from-purple-700 hover:to-pink-700 transition-all font-medium px-6 py-2 rounded-lg\"\n                  >\n                    Try It Now\n                  </Button>\n                </div>\n              </div>\n              \n              <div className=\"flex-1 lg:max-w-sm\">\n                <Card className=\"p-6 bg-gradient-to-br from-purple-50 to-pink-50 border-0 shadow-md\">\n                  <CardContent className=\"pt-0 text-center\">\n                    <div className=\"w-12 h-12 bg-purple-500 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                      <FileArchive className=\"text-white\" size={20} />\n                    </div>\n                    <h4 className=\"font-semibold mb-3\">Upload & Analyze</h4>\n                    <div className=\"space-y-2 text-left text-sm\">\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowRight className=\"text-purple-500\" size={14} />\n                        <span>Upload ZIP file</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowRight className=\"text-purple-500\" size={14} />\n                        <span>Automatic parsing</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowRight className=\"text-purple-500\" size={14} />\n                        <span>Unfollowers detection</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <ArrowRight className=\"text-purple-500\" size={14} />\n                        <span>Detailed insights</span>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Why This Method Works */}\n      <section className=\"py-12 bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-3\">\n              Why Our Method is Safest\n            </h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto text-sm\">\n              Unlike apps requiring Instagram login, we use only official data export for complete security. Learn more about <Link href=\"/instagram-auto-unfollow-explained\" className=\"text-purple-600 hover:text-purple-700 font-medium\">Instagram auto unfollow risks</Link> and why our method is safest.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <Card className=\"p-4 text-center border-0 shadow-sm hover:shadow-md transition-shadow\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-10 h-10 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                  <Shield className=\"text-green-600\" size={20} />\n                </div>\n                <h3 className=\"font-semibold mb-2 text-sm\">100% Secure</h3>\n                <p className=\"text-gray-600 text-xs\">\n                  No passwords, no login required. Official Instagram data only.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-4 text-center border-0 shadow-sm hover:shadow-md transition-shadow\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                  <Clock className=\"text-blue-600\" size={20} />\n                </div>\n                <h3 className=\"font-semibold mb-2 text-sm\">Fast Results</h3>\n                <p className=\"text-gray-600 text-xs\">\n                  Complete analysis in under 10 seconds. Instant insights.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-4 text-center border-0 shadow-sm hover:shadow-md transition-shadow\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                  <BarChart3 className=\"text-purple-600\" size={20} />\n                </div>\n                <h3 className=\"font-semibold mb-2 text-sm\">Detailed Insights</h3>\n                <p className=\"text-gray-600 text-xs\">\n                  Track unfollowers, new followers, and engagement patterns.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Call to Action */}\n      <section className=\"py-12 bg-white text-center\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-3\">Ready to Track Your Unfollowers?</h2>\n          <p className=\"text-gray-600 mb-6 text-sm\">\n            Start analyzing your Instagram followers now. No signup required, completely free.\n          </p>\n          <Button \n            size=\"lg\"\n            onClick={() => window.location.href = '/'}\n            className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:from-purple-700 hover:to-pink-700 transition-all font-semibold px-8 py-3 rounded-lg\"\n          >\n            Start Free Analysis\n          </Button>\n        </div>\n      </section>\n\n      {/* Related Articles Section for Topical Authority */}\n      <section className=\"py-12 bg-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-8\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-3\">\n              Learn More About Instagram Tracking\n            </h2>\n            <p className=\"text-gray-600 max-w-2xl mx-auto text-sm\">\n              Comprehensive guides to help you understand Instagram analytics and stay safe online.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {/* Auto Unfollow Guide */}\n            <Card className=\"hover:shadow-lg transition-shadow border-0 shadow-sm\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center mb-3\">\n                  <Shield className=\"w-5 h-5 text-red-500 mr-2\" />\n                  <span className=\"text-xs font-medium text-red-600 bg-red-50 px-2 py-1 rounded-full\">Safety Guide</span>\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2 text-sm\">\n                  <Link href=\"/instagram-auto-unfollow-explained\" className=\"hover:text-purple-600 transition-colors\">\n                    Does Instagram Auto Unfollow People?\n                  </Link>\n                </h3>\n                <p className=\"text-gray-600 text-xs mb-4\">\n                  Learn about automatic follow/unfollow tools, Instagram's policies, and why they're risky for your account.\n                </p>\n                <Link \n                  href=\"/instagram-auto-unfollow-explained\" \n                  className=\"text-purple-600 hover:text-purple-700 text-xs font-medium inline-flex items-center\"\n                >\n                  Read Safety Guide <ArrowRight className=\"w-3 h-3 ml-1\" />\n                </Link>\n              </CardContent>\n            </Card>\n\n            {/* Unfollowers Tracker Tool */}\n            <Card className=\"hover:shadow-lg transition-shadow border-0 shadow-sm\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center mb-3\">\n                  <BarChart3 className=\"w-5 h-5 text-purple-500 mr-2\" />\n                  <span className=\"text-xs font-medium text-purple-600 bg-purple-50 px-2 py-1 rounded-full\">Tool</span>\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2 text-sm\">\n                  <Link href=\"/unfollowers-tracker\" className=\"hover:text-purple-600 transition-colors\">\n                    Instagram Unfollowers Tracker\n                  </Link>\n                </h3>\n                <p className=\"text-gray-600 text-xs mb-4\">\n                  Track who unfollowed you on Instagram safely using your data export. No login required.\n                </p>\n                <Link \n                  href=\"/unfollowers-tracker\" \n                  className=\"text-purple-600 hover:text-purple-700 text-xs font-medium inline-flex items-center\"\n                >\n                  Start Tracking <ArrowRight className=\"w-3 h-3 ml-1\" />\n                </Link>\n              </CardContent>\n            </Card>\n\n            {/* Ghost Followers */}\n            <Card className=\"hover:shadow-lg transition-shadow border-0 shadow-sm\">\n              <CardContent className=\"p-6\">\n                <div className=\"flex items-center mb-3\">\n                  <Eye className=\"w-5 h-5 text-orange-500 mr-2\" />\n                  <span className=\"text-xs font-medium text-orange-600 bg-orange-50 px-2 py-1 rounded-full\">Analytics</span>\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2 text-sm\">\n                  <Link href=\"/ghost-followers\" className=\"hover:text-purple-600 transition-colors\">\n                    Ghost Followers Tracker\n                  </Link>\n                </h3>\n                <p className=\"text-gray-600 text-xs mb-4\">\n                  Identify inactive followers and fake accounts that don't engage with your content.\n                </p>\n                <Link \n                  href=\"/ghost-followers\" \n                  className=\"text-purple-600 hover:text-purple-700 text-xs font-medium inline-flex items-center\"\n                >\n                  Find Ghost Followers <ArrowRight className=\"w-3 h-3 ml-1\" />\n                </Link>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Additional Internal Links */}\n          <div className=\"mt-8 text-center\">\n            <div className=\"inline-flex flex-wrap gap-3 justify-center\">\n              <Link \n                href=\"/blog\" \n                className=\"text-sm text-gray-600 hover:text-purple-600 transition-colors px-3 py-1 rounded-full border border-gray-200 hover:border-purple-300\"\n              >\n                📖 All Guides\n              </Link>\n              <Link \n                href=\"/inactive-followers\" \n                className=\"text-sm text-gray-600 hover:text-purple-600 transition-colors px-3 py-1 rounded-full border border-gray-200 hover:border-purple-300\"\n              >\n                😴 Inactive Followers\n              </Link>\n              <Link \n                href=\"/about\" \n                className=\"text-sm text-gray-600 hover:text-purple-600 transition-colors px-3 py-1 rounded-full border border-gray-200 hover:border-purple-300\"\n              >\n                ℹ️ About Us\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":21001},"client/src/pages/how-to-check-instagram-unfollowers.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Shield, Users, Download, Search, BarChart3, CheckCircle, ArrowRight, Clock, Smartphone, AlertTriangle, Eye } from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function HowToCheckInstagramUnfollowers() {\n  const methods = [\n    {\n      method: 'Instagram Data Export (Recommended)',\n      description: 'Official Instagram feature for downloading your account data',\n      security: 'High',\n      accuracy: 'High',\n      cost: 'Free',\n      time: '2-5 minutes setup',\n      pros: ['100% secure', 'No password sharing', 'Complete data access', 'Instagram official method'],\n      cons: ['Requires waiting for data (up to 48 hours)', 'Manual process'],\n      recommended: true\n    },\n    {\n      method: 'Third-Party Mobile Apps',\n      description: 'Apps that require Instagram login to track unfollowers',\n      security: 'Low',\n      accuracy: 'Medium',\n      cost: 'Free/Paid',\n      time: 'Instant',\n      pros: ['Immediate results', 'Real-time notifications', 'User-friendly interface'],\n      cons: ['Security risks', 'Terms of service violations', 'Account suspension risk', 'Limited accuracy'],\n      recommended: false\n    },\n    {\n      method: 'Manual Comparison',\n      description: 'Manually comparing followers list over time',\n      security: 'High',\n      accuracy: 'Low',\n      cost: 'Free',\n      time: 'Very time-consuming',\n      pros: ['No security risks', 'Complete control', 'No tools needed'],\n      cons: ['Extremely time-consuming', 'Prone to errors', 'Impractical for large accounts', 'No historical data'],\n      recommended: false\n    }\n  ];\n\n  const detailedSteps = [\n    {\n      phase: 'Preparation',\n      steps: [\n        'Open Instagram app or visit instagram.com',\n        'Navigate to your profile settings',\n        'Ensure your account is in good standing',\n        'Have your email access ready for download link'\n      ]\n    },\n    {\n      phase: 'Data Request',\n      steps: [\n        'Go to Settings → Privacy and Security',\n        'Click on \"Download Your Information\"',\n        'Select \"All available information\" or choose specific data types',\n        'Choose JSON format for better analysis compatibility',\n        'Enter your email and request the download'\n      ]\n    },\n    {\n      phase: 'Analysis Setup',\n      steps: [\n        'Wait for Instagram\\'s email (usually 24-48 hours)',\n        'Download the ZIP file from the email link',\n        'Visit our secure Instagram analyzer tool',\n        'Upload your data file for processing'\n      ]\n    },\n    {\n      phase: 'Results Review',\n      steps: [\n        'Review the complete unfollowers list',\n        'Analyze follower patterns and trends',\n        'Identify accounts that don\\'t follow back',\n        'Export results for future reference',\n        'Use insights to optimize your Instagram strategy'\n      ]\n    }\n  ];\n\n  const safetyTips = [\n    {\n      tip: 'Never Share Login Credentials',\n      description: 'Avoid any tool that asks for your Instagram username and password',\n      importance: 'Critical'\n    },\n    {\n      tip: 'Use Official Instagram Features',\n      description: 'Stick to Instagram\\'s official data export feature whenever possible',\n      importance: 'High'\n    },\n    {\n      tip: 'Check App Permissions',\n      description: 'Review what permissions third-party apps are requesting',\n      importance: 'High'\n    },\n    {\n      tip: 'Enable Two-Factor Authentication',\n      description: 'Add extra security to your Instagram account',\n      importance: 'Medium'\n    },\n    {\n      tip: 'Regular Security Audits',\n      description: 'Periodically review connected apps and revoke unnecessary access',\n      importance: 'Medium'\n    }\n  ];\n\n  const troubleshooting = [\n    {\n      problem: 'Instagram data request taking too long',\n      solution: 'Instagram typically takes 24-48 hours. If longer, try requesting again or contact Instagram support.',\n      prevention: 'Request data during off-peak times and ensure account compliance.'\n    },\n    {\n      problem: 'Data file too large to upload',\n      solution: 'Our tool supports large files up to 50MB. For larger files, contact our support team.',\n      prevention: 'Request specific data types instead of \"all available information\" if file size is a concern.'\n    },\n    {\n      problem: 'Analysis results seem inaccurate',\n      solution: 'Ensure your data export is recent and complete. Re-request data if it\\'s older than 30 days.',\n      prevention: 'Regular monthly data exports provide most accurate tracking.'\n    },\n    {\n      problem: 'Can\\'t find unfollowers list in results',\n      solution: 'Check that your data export includes followers and following information.',\n      prevention: 'When requesting data, specifically select \"Followers and Following\" option.'\n    }\n  ];\n\n  const faqs = [\n    {\n      question: 'How often should I check for Instagram unfollowers?',\n      answer: 'Monthly checks are sufficient for most users. Checking too frequently can become obsessive and detract from content creation. Focus on creating quality content rather than constantly monitoring unfollowers.'\n    },\n    {\n      question: 'Is it safe to use Instagram unfollower checker tools?',\n      answer: 'Tools that use Instagram\\'s data export feature (like ours) are completely safe. Avoid tools that require your Instagram login credentials as they pose security risks and may violate Instagram\\'s terms of service.'\n    },\n    {\n      question: 'Can Instagram detect when I check for unfollowers?',\n      answer: 'When using our data export method, Instagram cannot detect unfollower checking since you\\'re using their official data download feature. Third-party apps that access your account directly may be detectable.'\n    },\n    {\n      question: 'Why did someone unfollow me on Instagram?',\n      answer: 'People unfollow for various reasons: content changes, personal preferences, account cleanup, inactive usage, or algorithm changes affecting content visibility. It\\'s rarely personal.'\n    },\n    {\n      question: 'Should I confront someone who unfollowed me?',\n      answer: 'No, confronting someone about unfollowing is generally considered inappropriate and can damage relationships. Unfollowing is a normal part of social media behavior.'\n    },\n    {\n      question: 'Can I see exactly when someone unfollowed me?',\n      answer: 'Instagram\\'s data export doesn\\'t include specific unfollowing timestamps. Our tool can show patterns and approximate timeframes based on your data history.'\n    },\n    {\n      question: 'Will checking unfollowers affect my Instagram algorithm?',\n      answer: 'Using secure methods like data export analysis doesn\\'t affect your algorithm or account standing. Your content engagement and posting consistency are what influence the algorithm.'\n    },\n    {\n      question: 'How accurate are Instagram unfollower checkers?',\n      answer: 'Tools using official Instagram data exports are highly accurate. Third-party apps may have accuracy issues due to API limitations and Instagram\\'s privacy restrictions.'\n    }\n  ];\n\n  const relatedTopics = [\n    { title: 'Who Doesn\\'t Follow Me Back', url: '/who-doesnt-follow-back', description: 'Find non-reciprocal Instagram followers' },\n    { title: 'Instagram Analytics Dashboard', url: '/instagram-analytics', description: 'Complete Instagram metrics and insights' },\n    { title: 'Track Unfollowers Free', url: '/track-unfollowers-free', description: 'Free Instagram unfollower tracking tools' }\n  ];\n\n  return (\n    <>\n      {/* SEO Meta Tags */}\n      <title>How to Check Instagram Unfollowers: Complete Guide (2024) | Free & Safe Methods</title>\n      <meta name=\"description\" content=\"Learn how to check Instagram unfollowers safely with our comprehensive guide. Free methods, security tips, and step-by-step instructions for 2024.\" />\n      <meta name=\"keywords\" content=\"how to check instagram unfollowers, instagram unfollower checker, see who unfollowed me instagram, instagram analytics\" />\n      \n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content=\"How to Check Instagram Unfollowers - Complete 2024 Guide\" />\n      <meta property=\"og:description\" content=\"Safe and secure methods to check Instagram unfollowers. Step-by-step guide with free tools and security best practices.\" />\n      <meta property=\"og:type\" content=\"article\" />\n      \n      {/* Schema Markup */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"HowTo\",\n          \"name\": \"How to Check Instagram Unfollowers Safely\",\n          \"description\": \"Complete guide to safely checking Instagram unfollowers using official Instagram data export\",\n          \"totalTime\": \"PT10M\",\n          \"supply\": [\"Instagram account\", \"Email access\", \"Computer or mobile device\"],\n          \"tool\": [\"Instagram Data Export\", \"Unfollower Analysis Tool\"],\n          \"step\": detailedSteps.map((phase, index) => ({\n            \"@type\": \"HowToStep\",\n            \"name\": phase.phase,\n            \"text\": phase.steps.join('. ')\n          }))\n        })}\n      </script>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        \n        {/* Breadcrumbs */}\n        <section className=\"bg-white py-4 border-b border-gray-200\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={[\n              { label: 'Home', href: '/' },\n              { label: 'Blog', href: '/blog' },\n              { label: 'How to Check Instagram Unfollowers', current: true }\n            ]} />\n          </div>\n        </section>\n        \n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16 relative overflow-hidden\">\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-20 left-10 w-32 h-32 bg-white opacity-10 rounded-full animate-float\"></div>\n            <div className=\"absolute bottom-20 right-20 w-24 h-24 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '2s'}}></div>\n          </div>\n          \n          <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n              Complete Guide 2024\n            </Badge>\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4 leading-tight\">\n              How to Check Instagram\n              <span className=\"block text-yellow-300\">Unfollowers Safely</span>\n            </h1>\n            <p className=\"text-base sm:text-lg text-gray-100 mb-6 max-w-3xl mx-auto leading-relaxed\">\n              Learn the safest and most effective methods to check who unfollowed you on Instagram. \n              Complete guide with security tips, step-by-step instructions, and free tools.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-all\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <Search className=\"mr-2\" size={18} />\n                Check Unfollowers Now\n              </Button>\n              <Button \n                variant=\"outline\"\n                className=\"border-2 border-white text-white hover:bg-white hover:text-purple-600 transition-all\"\n              >\n                <Download className=\"mr-2\" size={16} />\n                Read Guide Below\n              </Button>\n            </div>\n          </div>\n        </section>\n\n        {/* Quick Overview */}\n        <section className=\"py-12 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600 mb-1\">100%</div>\n                <div className=\"text-sm text-gray-600\">Safe Method</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600 mb-1\">Free</div>\n                <div className=\"text-sm text-gray-600\">No Hidden Costs</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600 mb-1\">10s</div>\n                <div className=\"text-sm text-gray-600\">Analysis Time</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-orange-600 mb-1\">500K+</div>\n                <div className=\"text-sm text-gray-600\">Users Trust Us</div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Methods Comparison */}\n        <section className=\"py-16 bg-gradient-to-br from-blue-50 to-purple-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                3 Ways to Check Instagram Unfollowers\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Compare different methods and choose the safest approach for your needs\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n              {methods.map((method, index) => (\n                <Card key={index} className={`${method.recommended ? 'ring-2 ring-purple-500 shadow-lg' : 'shadow-sm'} relative`}>\n                  {method.recommended && (\n                    <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                      <Badge className=\"bg-purple-600 text-white\">Recommended</Badge>\n                    </div>\n                  )}\n                  <CardContent className=\"p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">{method.method}</h3>\n                    <p className=\"text-sm text-gray-600 mb-4\">{method.description}</p>\n                    \n                    <div className=\"grid grid-cols-2 gap-4 mb-4 text-sm\">\n                      <div>\n                        <div className=\"font-medium text-gray-700\">Security:</div>\n                        <div className={`${method.security === 'High' ? 'text-green-600' : method.security === 'Medium' ? 'text-yellow-600' : 'text-red-600'}`}>\n                          {method.security}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium text-gray-700\">Accuracy:</div>\n                        <div className={`${method.accuracy === 'High' ? 'text-green-600' : method.accuracy === 'Medium' ? 'text-yellow-600' : 'text-red-600'}`}>\n                          {method.accuracy}\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium text-gray-700\">Cost:</div>\n                        <div className=\"text-gray-600\">{method.cost}</div>\n                      </div>\n                      <div>\n                        <div className=\"font-medium text-gray-700\">Time:</div>\n                        <div className=\"text-gray-600\">{method.time}</div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"space-y-3\">\n                      <div>\n                        <h4 className=\"font-medium text-gray-900 mb-2\">Pros:</h4>\n                        <ul className=\"space-y-1\">\n                          {method.pros.map((pro, idx) => (\n                            <li key={idx} className=\"flex items-center text-sm text-gray-700\">\n                              <CheckCircle className=\"text-green-500 mr-2\" size={12} />\n                              {pro}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                      \n                      <div>\n                        <h4 className=\"font-medium text-gray-900 mb-2\">Cons:</h4>\n                        <ul className=\"space-y-1\">\n                          {method.cons.map((con, idx) => (\n                            <li key={idx} className=\"flex items-start text-sm text-gray-700\">\n                              <div className=\"w-3 h-3 bg-red-500 rounded-full mr-2 mt-1.5 flex-shrink-0\"></div>\n                              {con}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Detailed Step-by-Step Guide */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Step-by-Step Guide: Safe Method\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Follow this detailed guide to safely check your Instagram unfollowers using official methods\n              </p>\n            </div>\n            \n            <div className=\"space-y-8\">\n              {detailedSteps.map((phase, index) => (\n                <Card key={index} className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-center mb-4\">\n                      <div className=\"w-8 h-8 bg-purple-600 rounded-full flex items-center justify-center mr-3\">\n                        <span className=\"text-white text-sm font-bold\">{index + 1}</span>\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{phase.phase}</h3>\n                    </div>\n                    <div className=\"ml-11\">\n                      <ul className=\"space-y-2\">\n                        {phase.steps.map((step, stepIndex) => (\n                          <li key={stepIndex} className=\"flex items-start text-sm text-gray-700\">\n                            <CheckCircle className=\"text-green-500 mr-2 mt-0.5\" size={14} />\n                            {step}\n                          </li>\n                        ))}\n                      </ul>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Safety Tips */}\n        <section className=\"py-16 bg-gradient-to-br from-yellow-50 to-orange-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Security Best Practices\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Essential security tips to protect your Instagram account while checking unfollowers\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {safetyTips.map((tip, index) => (\n                <Card key={index} className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start space-x-3 mb-3\">\n                      <Shield className=\"text-green-600 mt-1\" size={20} />\n                      <div>\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-1\">{tip.tip}</h3>\n                        <Badge \n                          variant={tip.importance === 'Critical' ? 'destructive' : tip.importance === 'High' ? 'default' : 'secondary'}\n                          className=\"text-xs\"\n                        >\n                          {tip.importance}\n                        </Badge>\n                      </div>\n                    </div>\n                    <p className=\"text-sm text-gray-600\">{tip.description}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Troubleshooting */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Troubleshooting Common Issues\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Solutions to common problems when checking Instagram unfollowers\n              </p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              {troubleshooting.map((item, index) => (\n                <Card key={index} className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                      <div>\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-2\">Problem:</h3>\n                        <p className=\"text-sm text-gray-700\">{item.problem}</p>\n                      </div>\n                      <div>\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-2\">Solution:</h3>\n                        <p className=\"text-sm text-green-700\">{item.solution}</p>\n                      </div>\n                      <div>\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-2\">Prevention:</h3>\n                        <p className=\"text-sm text-blue-700\">{item.prevention}</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-16 bg-gradient-to-r from-purple-600 to-pink-600\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <div className=\"bg-white rounded-2xl p-8 shadow-xl\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-4\">\n                Ready to Check Your Instagram Unfollowers?\n              </h2>\n              <p className=\"text-base text-gray-600 mb-6 max-w-2xl mx-auto\">\n                Use our secure, free tool to safely analyze your Instagram followers and discover \n                who unfollowed you - no password required.\n              </p>\n              <div className=\"flex items-center justify-center space-x-6 mb-6 text-sm\">\n                <div className=\"flex items-center text-green-600\">\n                  <Shield size={16} className=\"mr-1\" />\n                  100% Secure\n                </div>\n                <div className=\"flex items-center text-blue-600\">\n                  <Eye size={16} className=\"mr-1\" />\n                  Privacy Protected\n                </div>\n                <div className=\"flex items-center text-purple-600\">\n                  <Clock size={16} className=\"mr-1\" />\n                  Instant Results\n                </div>\n              </div>\n              <Button \n                size=\"lg\"\n                className=\"bg-purple-600 hover:bg-purple-700 px-8 py-3 rounded-lg font-semibold text-white\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <Search className=\"mr-2\" size={18} />\n                Start Checking Unfollowers - Free\n              </Button>\n            </div>\n          </div>\n        </section>\n\n        {/* FAQ Section */}\n        <section className=\"py-16 bg-gray-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Frequently Asked Questions\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Everything you need to know about checking Instagram unfollowers safely\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {faqs.map((faq, index) => (\n                <Card key={index} className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <h3 className=\"text-base font-semibold text-gray-900 mb-3\">{faq.question}</h3>\n                    <p className=\"text-sm text-gray-600 leading-relaxed\">{faq.answer}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Related Topics */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Related Instagram Analytics Tools\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Explore more tools to analyze your Instagram presence and follower relationships\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {relatedTopics.map((topic, index) => (\n                <Link key={index} href={topic.url}>\n                  <Card className=\"shadow-sm hover:shadow-lg transition-all hover:-translate-y-1 cursor-pointer h-full\">\n                    <CardContent className=\"p-6\">\n                      <h3 className=\"text-base font-semibold text-gray-900 mb-2\">{topic.title}</h3>\n                      <p className=\"text-sm text-gray-600 mb-4\">{topic.description}</p>\n                      <div className=\"flex items-center text-purple-600 text-sm font-medium\">\n                        Explore Tool <ArrowRight size={14} className=\"ml-1\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n                </Link>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}","size_bytes":27143},"client/src/pages/how-to-see-who-unfollowed-you.tsx":{"content":"import { Header } from '@/components/header';\nimport { SEOHead } from '@/components/seo-head';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { BannerAd, InArticleAd } from '@/components/adsense-ad';\nimport { Shield, Clock, Users, Download, FileArchive, BarChart3, CheckCircle, ArrowRight, Smartphone, Zap } from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function HowToSeeWhoUnfollowedYou() {\n  const steps = [\n    {\n      number: 1,\n      title: 'Download Instagram Data',\n      description: 'Request your Instagram data export from Settings > Privacy and Security > Download Your Information.',\n      icon: Download,\n      time: '1-2 minutes'\n    },\n    {\n      number: 2,\n      title: 'Upload ZIP File',\n      description: 'Once Instagram sends your data, upload the ZIP file to our secure unfollowers tracker tool.',\n      icon: FileArchive,\n      time: '30 seconds'\n    },\n    {\n      number: 3,\n      title: 'View Results',\n      description: 'Instantly see who unfollowed you, when they unfollowed, and detailed follower analytics.',\n      icon: BarChart3,\n      time: '10 seconds'\n    }\n  ];\n\n  const methods = [\n    {\n      title: 'Free Instagram Unfollowers Tracker',\n      description: 'Upload your Instagram data export to see detailed unfollower insights without login credentials.',\n      features: ['Complete privacy protection', 'Instant results', 'No app installation required'],\n      recommended: true\n    },\n    {\n      title: 'Third-Party Apps',\n      description: 'Mobile apps that require Instagram login credentials to track unfollowers.',\n      features: ['Real-time notifications', 'Mobile convenience', 'Automatic tracking'],\n      recommended: false,\n      warning: 'Security risk: Requires Instagram password'\n    },\n    {\n      title: 'Manual Checking',\n      description: 'Manually compare your followers list over time to identify unfollowers.',\n      features: ['100% free method', 'No tools required', 'Complete control'],\n      recommended: false,\n      warning: 'Time-consuming and impractical for large accounts'\n    }\n  ];\n\n  const faqs = [\n    {\n      question: 'How quickly can I see who unfollowed me on Instagram?',\n      answer: 'With our Instagram unfollowers tracker, you can see who unfollowed you within 10 seconds of uploading your Instagram data export. The process is instant once you have your data file ready.'\n    },\n    {\n      question: 'Is it safe to check who unfollowed me on Instagram?',\n      answer: 'Yes, using our method is completely safe. We process your Instagram data export locally without requiring your login credentials, ensuring your account security remains intact.'\n    },\n    {\n      question: 'Can I see when someone unfollowed me on Instagram?',\n      answer: 'While Instagram doesn\\'t provide exact unfollowing timestamps in their data export, our tool can analyze your follower patterns and provide insights into recent unfollower activity based on your data history.'\n    },\n    {\n      question: 'Do unfollower tracking apps violate Instagram terms of service?',\n      answer: 'Apps that require your Instagram login credentials may violate terms of service. Our method uses Instagram\\'s official data export feature, making it compliant with their guidelines.'\n    },\n    {\n      question: 'Why did someone unfollow me on Instagram?',\n      answer: 'People unfollow for various reasons: content changes, personal preferences, account cleanup, or shifting interests. Focus on creating authentic content rather than worrying about individual unfollowers.'\n    },\n    {\n      question: 'Can I automatically track Instagram unfollowers?',\n      answer: 'While some apps offer automatic tracking, they require constant access to your account. Our secure method requires manual data export but ensures complete privacy and account safety.'\n    }\n  ];\n\n  const relatedTopics = [\n    { title: 'Instagram Analytics Dashboard', url: '/instagram-analytics', description: 'Complete Instagram metrics and insights' },\n    { title: 'Track Unfollowers Free', url: '/track-unfollowers-free', description: 'Free tools to monitor unfollowers' },\n    { title: 'Followers Insights', url: '/followers-insights', description: 'Deep follower analysis and trends' }\n  ];\n\n  return (\n    <>\n      <SEOHead />\n      {/* SEO Meta Tags */}\n      <title>How to See Who Unfollowed You on Instagram (2024 Guide) | Free Unfollowers Tracker</title>\n      <meta name=\"description\" content=\"Learn how to see who unfollowed you on Instagram safely and instantly. Free guide with step-by-step instructions for tracking unfollowers without passwords.\" />\n      <meta name=\"keywords\" content=\"how to see who unfollowed you on instagram, instagram unfollowers tracker, check unfollowers instagram, see instagram unfollowers\" />\n      \n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content=\"How to See Who Unfollowed You on Instagram - Free Method\" />\n      <meta property=\"og:description\" content=\"Step-by-step guide to safely track Instagram unfollowers without giving your password. See who unfollowed you instantly.\" />\n      <meta property=\"og:type\" content=\"article\" />\n      \n      {/* Schema Markup */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"HowTo\",\n          \"name\": \"How to See Who Unfollowed You on Instagram\",\n          \"description\": \"Complete guide to safely track Instagram unfollowers using data export method\",\n          \"totalTime\": \"PT5M\",\n          \"supply\": [\"Instagram account\", \"Email access\"],\n          \"tool\": [\"Instagram Unfollowers Tracker\"],\n          \"step\": steps.map(step => ({\n            \"@type\": \"HowToStep\",\n            \"name\": step.title,\n            \"text\": step.description\n          }))\n        })}\n      </script>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        \n        {/* Breadcrumbs */}\n        <section className=\"bg-white py-4 border-b border-gray-200\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={[\n              { label: 'Home', href: '/' },\n              { label: 'Blog', href: '/blog' },\n              { label: 'How to See Who Unfollowed You', current: true }\n            ]} />\n          </div>\n        </section>\n        \n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16 relative overflow-hidden\">\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-20 left-10 w-32 h-32 bg-white opacity-10 rounded-full animate-float\"></div>\n            <div className=\"absolute bottom-20 right-20 w-24 h-24 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '2s'}}></div>\n          </div>\n          \n          <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n              Instagram Guide 2024\n            </Badge>\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4 leading-tight\">\n              How to See Who Unfollowed You\n              <span className=\"block text-yellow-300\">on Instagram</span>\n            </h1>\n            <p className=\"text-base sm:text-lg text-gray-100 mb-6 max-w-3xl mx-auto leading-relaxed\">\n              Complete step-by-step guide to safely track Instagram unfollowers without compromising your account security. \n              No passwords required, instant results guaranteed.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-all\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <Users className=\"mr-2\" size={18} />\n                Check Your Unfollowers Now\n              </Button>\n              <Button \n                variant=\"outline\"\n                className=\"border-2 border-white text-white hover:bg-white hover:text-purple-600 transition-all\"\n              >\n                <Download className=\"mr-2\" size={16} />\n                View Guide Below\n              </Button>\n            </div>\n          </div>\n        </section>\n\n        {/* Quick Stats */}\n        <section className=\"py-12 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600 mb-1\">100%</div>\n                <div className=\"text-sm text-gray-600\">Safe Method</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600 mb-1\">10s</div>\n                <div className=\"text-sm text-gray-600\">Get Results</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600 mb-1\">500K+</div>\n                <div className=\"text-sm text-gray-600\">Users Trust Us</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-orange-600 mb-1\">Free</div>\n                <div className=\"text-sm text-gray-600\">No Cost Ever</div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Main Content */}\n        <section className=\"py-16 bg-gradient-to-br from-blue-50 to-purple-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            {/* Introduction */}\n            <div className=\"mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-4\">\n                The Complete Guide to Tracking Instagram Unfollowers\n              </h2>\n              <div className=\"prose max-w-none text-gray-700 leading-relaxed\">\n                <p className=\"text-base mb-4\">\n                  Discovering who unfollowed you on Instagram doesn't have to be complicated or risky. With Instagram's official data export feature, \n                  you can safely track unfollowers without compromising your account security or violating terms of service.\n                </p>\n                <p className=\"text-base mb-4\">\n                  This comprehensive guide covers the safest, most effective methods to see who unfollowed you on Instagram, \n                  along with insights into why people unfollow and how to maintain healthy follower relationships.\n                </p>\n              </div>\n            </div>\n\n            {/* Methods Comparison */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">3 Methods to Check Instagram Unfollowers</h2>\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                {methods.map((method, index) => (\n                  <Card key={index} className={`${method.recommended ? 'ring-2 ring-purple-500 shadow-lg' : 'shadow-sm'} relative`}>\n                    {method.recommended && (\n                      <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                        <Badge className=\"bg-purple-600 text-white\">Recommended</Badge>\n                      </div>\n                    )}\n                    <CardContent className=\"p-6\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">{method.title}</h3>\n                      <p className=\"text-sm text-gray-600 mb-4\">{method.description}</p>\n                      \n                      <ul className=\"space-y-2 mb-4\">\n                        {method.features.map((feature, idx) => (\n                          <li key={idx} className=\"flex items-center text-sm text-gray-700\">\n                            <CheckCircle className=\"text-green-500 mr-2\" size={14} />\n                            {feature}\n                          </li>\n                        ))}\n                      </ul>\n                      \n                      {method.warning && (\n                        <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3\">\n                          <p className=\"text-xs text-yellow-800\">⚠️ {method.warning}</p>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n\n            {/* Step-by-Step Guide */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Step-by-Step: How to See Who Unfollowed You</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n                {steps.map((step) => (\n                  <div key={step.number} className=\"text-center\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n                      <step.icon className=\"text-white\" size={24} />\n                    </div>\n                    <div className=\"bg-white rounded-lg p-6 shadow-sm\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                        Step {step.number}: {step.title}\n                      </h3>\n                      <p className=\"text-sm text-gray-600 mb-3\">{step.description}</p>\n                      <div className=\"text-xs font-medium text-purple-600\">⏱️ {step.time}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* Detailed Instructions */}\n            <div className=\"mb-16 bg-white rounded-xl p-8 shadow-sm\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Detailed Instructions</h2>\n              \n              <div className=\"space-y-8\">\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">📱 Step 1: Request Your Instagram Data</h3>\n                  <div className=\"pl-6 border-l-4 border-purple-500 space-y-2 text-sm text-gray-700\">\n                    <p>1. Open Instagram app or visit instagram.com</p>\n                    <p>2. Go to Settings → Privacy and Security</p>\n                    <p>3. Click \"Download Your Information\"</p>\n                    <p>4. Select \"All available information\" or choose specific data</p>\n                    <p>5. Choose JSON format and request download</p>\n                    <p>6. Instagram will email you when your data is ready (usually within 48 hours)</p>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">📁 Step 2: Upload Your Data File</h3>\n                  <div className=\"pl-6 border-l-4 border-blue-500 space-y-2 text-sm text-gray-700\">\n                    <p>1. Download the ZIP file from Instagram's email</p>\n                    <p>2. Visit our secure unfollowers tracker tool</p>\n                    <p>3. Drag and drop your ZIP file or click to browse</p>\n                    <p>4. Wait for the secure upload to complete</p>\n                    <p>5. Your data is processed locally for maximum privacy</p>\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">📊 Step 3: Analyze Your Results</h3>\n                  <div className=\"pl-6 border-l-4 border-green-500 space-y-2 text-sm text-gray-700\">\n                    <p>1. View complete unfollowers list with usernames</p>\n                    <p>2. See who doesn't follow you back</p>\n                    <p>3. Identify mutual followers and new followers</p>\n                    <p>4. Export results or save insights for future reference</p>\n                    <p>5. Use analytics to optimize your Instagram strategy</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Why People Unfollow */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Understanding Why People Unfollow on Instagram</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                <Card className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Common Reasons for Unfollowing</h3>\n                    <ul className=\"space-y-3 text-sm text-gray-700\">\n                      <li className=\"flex items-start\">\n                        <CheckCircle className=\"text-blue-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Content Changes:</strong> Shift in posting style or topics</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <CheckCircle className=\"text-blue-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Posting Frequency:</strong> Too many or too few posts</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <CheckCircle className=\"text-blue-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Account Cleanup:</strong> Users reducing following count</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <CheckCircle className=\"text-blue-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Interest Changes:</strong> Evolving personal preferences</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <CheckCircle className=\"text-blue-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Inactive Accounts:</strong> Dormant or abandoned profiles</span>\n                      </li>\n                    </ul>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">How to Reduce Unfollowers</h3>\n                    <ul className=\"space-y-3 text-sm text-gray-700\">\n                      <li className=\"flex items-start\">\n                        <Zap className=\"text-green-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Consistent Quality:</strong> Maintain posting standards</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <Zap className=\"text-green-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Engage Authentically:</strong> Respond to comments genuinely</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <Zap className=\"text-green-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Know Your Audience:</strong> Create relevant content</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <Zap className=\"text-green-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Optimal Timing:</strong> Post when followers are active</span>\n                      </li>\n                      <li className=\"flex items-start\">\n                        <Zap className=\"text-green-500 mr-2 mt-0.5\" size={14} />\n                        <span><strong>Value-Driven Posts:</strong> Educate, entertain, or inspire</span>\n                      </li>\n                    </ul>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n\n            {/* CTA Section */}\n            <div className=\"text-center bg-gradient-to-r from-purple-600 to-pink-600 rounded-2xl p-8 text-white mb-16\">\n              <h2 className=\"text-2xl font-bold mb-4\">Ready to See Who Unfollowed You?</h2>\n              <p className=\"text-base mb-6 opacity-90\">\n                Track your Instagram unfollowers safely and instantly with our secure data export method\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-purple-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-all\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <Users className=\"mr-2\" size={18} />\n                Start Tracking Now - Free\n              </Button>\n            </div>\n\n            {/* FAQ Section */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-8\">Frequently Asked Questions</h2>\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {faqs.map((faq, index) => (\n                  <Card key={index} className=\"shadow-sm\">\n                    <CardContent className=\"p-6\">\n                      <h3 className=\"text-base font-semibold text-gray-900 mb-3\">{faq.question}</h3>\n                      <p className=\"text-sm text-gray-600 leading-relaxed\">{faq.answer}</p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n\n            {/* Related Topics */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Related Instagram Tools & Guides</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {relatedTopics.map((topic, index) => (\n                  <Link key={index} href={topic.url}>\n                    <Card className=\"shadow-sm hover:shadow-lg transition-all hover:-translate-y-1 cursor-pointer\">\n                      <CardContent className=\"p-6\">\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-2\">{topic.title}</h3>\n                        <p className=\"text-sm text-gray-600 mb-3\">{topic.description}</p>\n                        <div className=\"flex items-center text-purple-600 text-sm font-medium\">\n                          Learn More <ArrowRight size={14} className=\"ml-1\" />\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </Link>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}","size_bytes":23092},"client/src/pages/inactive-followers.tsx":{"content":"import { Header } from '@/components/header';\nimport { SEOHead } from '@/components/seo-head';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { FileUpload } from '@/components/file-upload';\nimport { StatsDashboard } from '@/components/stats-dashboard';\nimport { BannerAd, InArticleAd } from '@/components/adsense-ad';\nimport { Users, UserX, Shield, Clock, Zap, CheckCircle, TrendingUp, Eye, Activity, BarChart3, UserCheck } from 'lucide-react';\nimport { useState } from 'react';\n\nexport function InactiveFollowersPage() {\n  const [hasUploadedFile, setHasUploadedFile] = useState(false);\n\n  const handleFileUploaded = (file: File) => {\n    setHasUploadedFile(true);\n  };\n\n  const features = [\n    {\n      icon: UserX,\n      title: 'Inactive Follower Detection',\n      description: 'Find followers who follow you but never engage with your posts or stories',\n      color: 'orange'\n    },\n    {\n      icon: Activity,\n      title: 'Engagement Analysis',\n      description: 'Analyze follower activity patterns to identify genuine vs inactive accounts',\n      color: 'blue'\n    },\n    {\n      icon: BarChart3,\n      title: 'Activity Scoring',\n      description: 'Get detailed activity scores for each follower based on their engagement',\n      color: 'green'\n    },\n    {\n      icon: TrendingUp,\n      title: 'Performance Boost',\n      description: 'Improve your engagement rate by identifying and managing inactive followers',\n      color: 'purple'\n    }\n  ];\n\n  const inactiveTypes = [\n    {\n      title: 'Silent Followers',\n      description: 'Real people who follow you but rarely engage with content',\n      percentage: '60-70%'\n    },\n    {\n      title: 'Dormant Accounts',\n      description: 'Users who were active before but stopped using Instagram',\n      percentage: '20-25%'\n    },\n    {\n      title: 'Lost Interest',\n      description: 'Followers who engaged initially but lost interest over time',\n      percentage: '10-15%'\n    }\n  ];\n\n  const strategies = [\n    'Create more engaging content formats',\n    'Post at optimal times for your audience',\n    'Use interactive features like polls and questions',\n    'Engage directly with inactive followers',\n    'Analyze content that previously performed well',\n    'Consider targeted content for different follower segments'\n  ];\n\n  return (\n    <>\n      <SEOHead />\n      {/* SEO Meta Tags */}\n      <title>Inactive Followers Tracker – Find & Remove Non-Engaging Instagram Users</title>\n      <meta name=\"description\" content=\"Track and remove inactive Instagram followers who don't engage with your posts. Our Inactive Followers Tracker helps you improve reach and engagement rates.\" />\n      <meta name=\"keywords\" content=\"instagram inactive followers, silent followers, dormant followers, engagement analysis, instagram analytics, follower activity, engagement rate\" />\n      <meta property=\"og:title\" content=\"Instagram Inactive Followers Tracker - Find Non-Engaging Followers\" />\n      <meta property=\"og:description\" content=\"Identify inactive Instagram followers who don't engage with your content. Free tool to analyze follower activity and boost engagement rates.\" />\n      <meta property=\"og:url\" content=\"https://unfollowerstracker.com/inactive-followers\" />\n      <script type=\"application/ld+json\" dangerouslySetInnerHTML={{\n        __html: JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"WebPage\",\n          \"name\": \"Instagram Inactive Followers Tracker - Find Non-Engaging Followers\",\n          \"description\": \"Identify inactive Instagram followers who don't engage with your content. Free tool to analyze follower activity and boost engagement rates effectively.\",\n          \"url\": \"https://unfollowerstracker.com/inactive-followers\",\n          \"breadcrumb\": {\n            \"@type\": \"BreadcrumbList\",\n            \"itemListElement\": [\n              {\n                \"@type\": \"ListItem\",\n                \"position\": 1,\n                \"name\": \"Home\",\n                \"item\": \"https://unfollowerstracker.com\"\n              },\n              {\n                \"@type\": \"ListItem\",\n                \"position\": 2,\n                \"name\": \"Inactive Followers Tracker\",\n                \"item\": \"https://unfollowerstracker.com/inactive-followers\"\n              }\n            ]\n          },\n          \"mainEntity\": {\n            \"@type\": \"SoftwareApplication\",\n            \"name\": \"Instagram Inactive Followers Tracker\",\n            \"applicationCategory\": \"Social Media Analytics\",\n            \"operatingSystem\": \"Web Browser\",\n            \"offers\": {\n              \"@type\": \"Offer\",\n              \"price\": \"0\",\n              \"priceCurrency\": \"USD\"\n            }\n          }\n        })\n      }} />\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n\n        {/* Hero Section */}\n        <section className=\"py-10 bg-gradient-to-br from-orange-600 via-red-600 to-pink-600 text-white relative overflow-hidden\">\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-10 left-10 w-32 h-32 bg-white opacity-5 rounded-full blur-2xl animate-pulse-slow\"></div>\n            <div className=\"absolute bottom-10 right-20 w-24 h-24 bg-white opacity-5 rounded-full blur-xl animate-float\"></div>\n          </div>\n          \n          <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n              Free Inactive Followers Analysis\n            </Badge>\n            <h1 className=\"text-3xl md:text-4xl font-bold mb-4 leading-tight\">\n              Instagram Inactive Followers\n              <span className=\"block text-yellow-300\">Tracker & Analyzer</span>\n            </h1>\n            <p className=\"text-lg text-gray-100 mb-6 max-w-3xl mx-auto\">\n              Discover which followers never engage with your content. Identify silent followers, \n              dormant accounts, and boost your Instagram engagement rates with targeted strategies.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-8\">\n              <Button \n                size=\"lg\"\n                onClick={() => document.getElementById('inactive-tracker')?.scrollIntoView({ behavior: 'smooth' })}\n                className=\"bg-white text-orange-600 px-8 py-3 rounded-xl font-bold hover:bg-gray-100 transition-all transform hover:scale-105 shadow-lg\"\n              >\n                <UserX className=\"mr-2\" size={20} />\n                Find Inactive Followers\n              </Button>\n            </div>\n\n            {/* Trust Indicators */}\n            <div className=\"flex flex-wrap justify-center items-center gap-6 text-sm opacity-90\">\n              <div className=\"flex items-center gap-2\">\n                <Shield size={16} />\n                <span>100% Safe & Private</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Clock size={16} />\n                <span>Instant Analysis</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <Zap size={16} />\n                <span>No Login Required</span>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Breadcrumbs */}\n        <section className=\"bg-white py-4 border-b border-gray-200\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={[\n              { label: 'Home', href: '/' },\n              { label: 'Inactive Followers Tracker', current: true }\n            ]} />\n          </div>\n        </section>\n\n        {/* Main Tool */}\n        <div id=\"inactive-tracker\">\n          <FileUpload onFileUploaded={handleFileUploaded} />\n          {hasUploadedFile && <StatsDashboard />}\n        </div>\n\n        {/* What Are Inactive Followers */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                What Are Inactive Instagram Followers?\n              </h2>\n              <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n                Inactive followers are real Instagram users who follow your account but rarely or never \n                engage with your content through likes, comments, shares, or story views.\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {features.map((feature, index) => (\n                <Card key={index} className=\"p-6 text-center hover:shadow-lg transition-all hover:-translate-y-1 duration-300 border-0 shadow-md\">\n                  <CardContent className=\"pt-0\">\n                    <div className={`w-12 h-12 bg-${feature.color}-100 rounded-xl flex items-center justify-center mx-auto mb-4`}>\n                      <feature.icon className={`text-${feature.color}-600`} size={24} />\n                    </div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{feature.title}</h3>\n                    <p className=\"text-sm text-gray-600\">{feature.description}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Types of Inactive Followers */}\n        <section className=\"py-16 bg-gradient-to-br from-gray-50 to-orange-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                Types of Inactive Followers\n              </h2>\n              <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n                Understanding different types of inactive followers helps you develop targeted \n                strategies to re-engage them or make informed decisions about your audience.\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              {inactiveTypes.map((type, index) => (\n                <Card key={index} className=\"p-6 bg-white shadow-lg border-0 hover:shadow-xl transition-all duration-300\">\n                  <CardContent className=\"pt-0\">\n                    <div className=\"text-center mb-4\">\n                      <div className=\"text-3xl font-bold text-orange-600 mb-2\">{type.percentage}</div>\n                      <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{type.title}</h3>\n                    </div>\n                    <p className=\"text-gray-600 text-center\">{type.description}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Why Track Inactive Followers */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <div>\n                <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-6\">\n                  Why Track Inactive Followers?\n                </h2>\n                <p className=\"text-lg text-gray-600 mb-8\">\n                  Inactive followers significantly impact your Instagram performance metrics. While they \n                  don't harm your account like fake followers, they do affect your engagement rates \n                  and overall content performance.\n                </p>\n\n                <div className=\"space-y-4\">\n                  {strategies.map((strategy, index) => (\n                    <div key={index} className=\"flex items-start space-x-3\">\n                      <CheckCircle className=\"text-green-500 mt-1 flex-shrink-0\" size={20} />\n                      <span className=\"text-gray-700 font-medium\">{strategy}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"space-y-6\">\n                <Card className=\"p-6 bg-blue-50 border border-blue-200\">\n                  <CardContent className=\"pt-0\">\n                    <div className=\"flex items-center mb-3\">\n                      <Activity className=\"text-blue-600 mr-3\" size={20} />\n                      <h3 className=\"font-semibold text-blue-900\">Engagement Benefits</h3>\n                    </div>\n                    <ul className=\"text-sm text-blue-800 space-y-1\">\n                      <li>• Identify content preferences</li>\n                      <li>• Improve posting strategies</li>\n                      <li>• Target re-engagement campaigns</li>\n                      <li>• Optimize posting times</li>\n                      <li>• Understand audience behavior</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n\n                <Card className=\"p-6 bg-green-50 border border-green-200\">\n                  <CardContent className=\"pt-0\">\n                    <div className=\"flex items-center mb-3\">\n                      <TrendingUp className=\"text-green-600 mr-3\" size={20} />\n                      <h3 className=\"font-semibold text-green-900\">Growth Opportunities</h3>\n                    </div>\n                    <ul className=\"text-sm text-green-800 space-y-1\">\n                      <li>• Better algorithm performance</li>\n                      <li>• Higher engagement rates</li>\n                      <li>• More targeted content creation</li>\n                      <li>• Improved audience insights</li>\n                      <li>• Enhanced content strategy</li>\n                    </ul>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* How to Re-engage Inactive Followers */}\n        <section className=\"py-16 bg-gradient-to-br from-blue-50 to-purple-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                How to Re-engage Inactive Followers\n              </h2>\n              <p className=\"text-lg text-gray-600 max-w-3xl mx-auto\">\n                Don't give up on inactive followers immediately. Many can be re-engaged with \n                the right strategies and content approaches.\n              </p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              <Card className=\"p-6 bg-white shadow-md border-0 hover:shadow-lg transition-all duration-300\">\n                <CardContent className=\"pt-0\">\n                  <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mb-4\">\n                    <Eye className=\"text-purple-600\" size={24} />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Interactive Content</h3>\n                  <p className=\"text-gray-600 text-sm\">\n                    Use polls, questions, and interactive stickers in stories to encourage \n                    participation from silent followers.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card className=\"p-6 bg-white shadow-md border-0 hover:shadow-lg transition-all duration-300\">\n                <CardContent className=\"pt-0\">\n                  <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4\">\n                    <Users className=\"text-blue-600\" size={24} />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Direct Engagement</h3>\n                  <p className=\"text-gray-600 text-sm\">\n                    Proactively engage with inactive followers by liking and commenting \n                    on their posts to rebuild connection.\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card className=\"p-6 bg-white shadow-md border-0 hover:shadow-lg transition-all duration-300\">\n                <CardContent className=\"pt-0\">\n                  <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">\n                    <BarChart3 className=\"text-green-600\" size={24} />\n                  </div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">Content Analysis</h3>\n                  <p className=\"text-gray-600 text-sm\">\n                    Analyze which past posts got engagement from now-inactive followers \n                    and create similar content.\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        </section>\n\n        {/* FAQ Section */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl md:text-3xl font-bold text-gray-900 mb-4\">\n                Frequently Asked Questions\n              </h2>\n            </div>\n\n            <div className=\"space-y-8\">\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  What percentage of followers are typically inactive?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Most Instagram accounts have 60-80% inactive followers. This is normal and includes \n                  people who rarely use Instagram, follow many accounts, or simply prefer to lurk \n                  rather than actively engage with content.\n                </p>\n              </div>\n\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  Should I remove inactive followers?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Unlike fake followers, you shouldn't remove inactive followers as they are real people. \n                  Instead, focus on re-engagement strategies. However, if your engagement rate is critically \n                  low, you might consider removing some clearly dormant accounts.\n                </p>\n              </div>\n\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  How can I tell if a follower is inactive vs just a lurker?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Inactive followers have no recent activity, empty or very old profiles, and zero \n                  engagement history. Lurkers are active users who view content but don't engage publicly. \n                  Our tool helps distinguish between these types.\n                </p>\n              </div>\n\n              <div className=\"bg-gray-50 rounded-lg p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                  Can inactive followers hurt my Instagram reach?\n                </h3>\n                <p className=\"text-gray-600\">\n                  Inactive followers can indirectly affect reach by lowering your engagement rate, which \n                  signals to Instagram's algorithm that your content might be less interesting. However, \n                  the impact is less severe than fake followers.\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-16 bg-gradient-to-br from-orange-600 to-pink-600 text-white\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <h2 className=\"text-2xl md:text-3xl font-bold mb-4\">\n              Ready to Analyze Your Inactive Followers?\n            </h2>\n            <p className=\"text-lg mb-8\">\n              Start identifying inactive followers and develop strategies to boost your engagement rates.\n            </p>\n            <Button \n              size=\"lg\"\n              onClick={() => document.getElementById('inactive-tracker')?.scrollIntoView({ behavior: 'smooth' })}\n              className=\"bg-white text-orange-600 px-8 py-3 rounded-xl font-bold hover:bg-gray-100 transition-all transform hover:scale-105\"\n            >\n              <UserX className=\"mr-2\" size={20} />\n              Start Analysis\n            </Button>\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default InactiveFollowersPage;","size_bytes":20914},"client/src/pages/instagram-analytics.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { FAQSection } from '@/components/faq-section';\nimport { BarChart3, PieChart, LineChart, Activity, Zap, Target, Calendar, Globe } from 'lucide-react';\n\nexport function InstagramAnalyticsPage() {\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-12 pb-10 bg-gradient-to-br from-indigo-600 via-purple-600 to-pink-600 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 left-20 w-72 h-72 bg-white opacity-5 rounded-full blur-3xl animate-pulse-slow\"></div>\n          <div className=\"absolute bottom-10 right-10 w-56 h-56 bg-white opacity-5 rounded-full blur-2xl animate-float\"></div>\n        </div>\n        \n        <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-bold mb-6 leading-tight\">\n            Instagram Analytics Dashboard\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-100 mb-8 max-w-4xl mx-auto font-medium\">\n            Comprehensive Instagram analytics and metrics. Track performance, analyze growth, monitor engagement, and optimize your Instagram strategy with detailed insights.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n            <Button \n              size=\"lg\"\n              onClick={() => document.getElementById('analytics-dashboard')?.scrollIntoView({ behavior: 'smooth' })}\n              className=\"bg-white text-purple-600 px-10 py-4 rounded-xl font-bold text-xl hover:bg-gray-100 transition-all transform hover:scale-105 shadow-2xl\"\n              data-testid=\"button-view-analytics\"\n            >\n              <BarChart3 className=\"mr-3\" size={24} />\n              View Analytics\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Analytics Dashboard Preview */}\n      <section id=\"analytics-dashboard\" className=\"py-12 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              Complete Instagram Analytics Suite\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Get comprehensive insights into your Instagram performance with our advanced analytics dashboard. Track all key metrics in one place.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-12\">\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <BarChart3 className=\"text-blue-600\" size={24} />\n                </div>\n                <h3 className=\"text-lg font-semibold mb-2\">Engagement Metrics</h3>\n                <p className=\"text-gray-600 text-sm\">Track likes, comments, shares, and story interactions</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <LineChart className=\"text-green-600\" size={24} />\n                </div>\n                <h3 className=\"text-lg font-semibold mb-2\">Growth Analysis</h3>\n                <p className=\"text-gray-600 text-sm\">Monitor follower growth trends and patterns</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <PieChart className=\"text-purple-600\" size={24} />\n                </div>\n                <h3 className=\"text-lg font-semibold mb-2\">Audience Demographics</h3>\n                <p className=\"text-gray-600 text-sm\">Understand your audience composition</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-orange-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <Activity className=\"text-orange-600\" size={24} />\n                </div>\n                <h3 className=\"text-lg font-semibold mb-2\">Performance Reports</h3>\n                <p className=\"text-gray-600 text-sm\">Detailed content and account performance</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Key Analytics Features */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n                Advanced Instagram Analytics Features\n              </h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Our Instagram analytics platform provides comprehensive insights to help you understand your account performance and optimize your social media strategy.\n              </p>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-indigo-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <BarChart3 className=\"text-indigo-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Real-time Analytics</h3>\n                    <p className=\"text-gray-600\">\n                      Monitor your Instagram performance with real-time data updates, engagement tracking, and instant insights into your content performance.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <Target className=\"text-purple-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Competitor Analysis</h3>\n                    <p className=\"text-gray-600\">\n                      Compare your performance with competitors, identify industry trends, and discover opportunities for growth and improvement.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <Calendar className=\"text-green-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Historical Data Tracking</h3>\n                    <p className=\"text-gray-600\">\n                      Access historical performance data, track long-term trends, and measure the success of your Instagram strategy over time.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-indigo-600 to-purple-600 rounded-2xl p-8 text-white\">\n                <h3 className=\"text-2xl font-bold mb-6\">Analytics Metrics</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex justify-between items-center\">\n                    <span>Engagement Rate</span>\n                    <div className=\"w-24 bg-white bg-opacity-20 rounded-full h-2\">\n                      <div className=\"bg-white rounded-full h-2\" style={{width: '78%'}}></div>\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>Follower Growth</span>\n                    <div className=\"w-24 bg-white bg-opacity-20 rounded-full h-2\">\n                      <div className=\"bg-white rounded-full h-2\" style={{width: '65%'}}></div>\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>Content Performance</span>\n                    <div className=\"w-24 bg-white bg-opacity-20 rounded-full h-2\">\n                      <div className=\"bg-white rounded-full h-2\" style={{width: '82%'}}></div>\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span>Audience Quality</span>\n                    <div className=\"w-24 bg-white bg-opacity-20 rounded-full h-2\">\n                      <div className=\"bg-white rounded-full h-2\" style={{width: '91%'}}></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Comprehensive Analytics Grid */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              Complete Instagram Performance Tracking\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Monitor every aspect of your Instagram presence with detailed analytics and actionable insights for sustainable growth.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Activity className=\"text-blue-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Account Performance</h3>\n                <p className=\"text-gray-600\">\n                  Track overall account metrics including reach, impressions, profile visits, and website clicks for comprehensive performance overview.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">\n                  <LineChart className=\"text-green-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Content Analytics</h3>\n                <p className=\"text-gray-600\">\n                  Analyze individual post performance, story metrics, IGTV views, and Reels engagement to optimize your content strategy.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Globe className=\"text-purple-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Audience Geography</h3>\n                <p className=\"text-gray-600\">\n                  Understand where your followers are located globally, analyze regional engagement patterns, and optimize posting times.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-orange-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Zap className=\"text-orange-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Hashtag Performance</h3>\n                <p className=\"text-gray-600\">\n                  Track hashtag effectiveness, discover trending hashtags in your niche, and optimize your hashtag strategy for better reach.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-pink-100 rounded-xl flex items-center justify-center mb-4\">\n                  <PieChart className=\"text-pink-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Engagement Breakdown</h3>\n                <p className=\"text-gray-600\">\n                  Detailed analysis of likes, comments, shares, saves, and story interactions with engagement rate calculations and trends.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-indigo-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Calendar className=\"text-indigo-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Optimal Timing</h3>\n                <p className=\"text-gray-600\">\n                  Discover the best times to post based on your audience activity, maximize reach and engagement with data-driven scheduling.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-br from-indigo-600 to-purple-600 text-white\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-4xl font-bold mb-6\">\n            Start Tracking Your Instagram Analytics Today\n          </h2>\n          <p className=\"text-xl text-gray-100 mb-8 max-w-3xl mx-auto\">\n            Get comprehensive insights into your Instagram performance and take your social media strategy to the next level with our advanced analytics platform.\n          </p>\n          \n          <Button \n            size=\"lg\"\n            onClick={() => window.location.href = '/'}\n            className=\"bg-white text-purple-600 px-10 py-4 rounded-xl font-bold text-xl hover:bg-gray-100 transition-all transform hover:scale-105 shadow-2xl\"\n          >\n            <BarChart3 className=\"mr-3\" size={24} />\n            Get Analytics Now\n          </Button>\n        </div>\n      </section>\n\n      <FAQSection />\n      <Footer />\n    </div>\n  );\n}","size_bytes":15556},"client/src/pages/instagram-auto-unfollow-explained.tsx":{"content":"import { Link } from 'wouter';\nimport { useSEO } from '../hooks/use-seo';\nimport { Header } from '../components/header';\nimport { Footer } from '../components/footer';\nimport { Breadcrumbs } from '../components/breadcrumbs';\nimport { Upload, AlertTriangle, Shield, Clock, Users, TrendingDown, Eye, Target, Calendar, User, ArrowRight } from 'lucide-react';\n\nexport default function InstagramAutoUnfollowExplained() {\n  useSEO();\n\n  const breadcrumbItems = [\n    { label: 'Home', href: '/' },\n    { label: 'Blog', href: '/blog' },\n    { label: 'Instagram Auto Unfollow Guide', href: '/instagram-auto-unfollow-explained' },\n  ];\n\n  return (\n    <>\n      {/* SEO Meta Tags */}\n      <head>\n        <title>Does Instagram Auto Unfollow People? Complete Guide to Instagram Unfollowing</title>\n        <meta name=\"description\" content=\"Learn about Instagram auto unfollow features, automatic follow/unfollow tools, and why Instagram might randomly unfollow accounts. Complete safety guide included.\" />\n        <meta name=\"keywords\" content=\"instagram auto unfollow, does instagram unfollow people, automatic follow unfollow instagram, instagram unfollowing people, does instagram randomly unfollow\" />\n        <link rel=\"canonical\" href=\"/instagram-auto-unfollow-explained\" />\n        <meta property=\"og:title\" content=\"Instagram Auto Unfollow Guide - Complete Safety Information\" />\n        <meta property=\"og:description\" content=\"Understanding Instagram auto unfollowing, third-party tools, and safe tracking methods for your followers.\" />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:url\" content=\"/instagram-auto-unfollow-explained\" />\n        <meta property=\"article:author\" content=\"Instagram Followers Tracker Team\" />\n        <meta property=\"article:published_time\" content=\"2025-08-19T00:00:00Z\" />\n        <meta property=\"article:section\" content=\"Instagram Guide\" />\n        <meta property=\"article:tag\" content=\"Instagram Auto Unfollow\" />\n        <meta property=\"article:tag\" content=\"Automatic Follow Unfollow\" />\n        <meta property=\"article:tag\" content=\"Instagram Safety\" />\n        \n        {/* Semantic SEO Structured Data */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Article\",\n            \"headline\": \"Does Instagram Auto Unfollow People? Complete Guide to Instagram Unfollowing\",\n            \"description\": \"Learn about Instagram auto unfollow features, automatic follow/unfollow tools, and why Instagram might randomly unfollow accounts. Complete safety guide included.\",\n            \"author\": {\n              \"@type\": \"Organization\",\n              \"name\": \"Instagram Followers Tracker Team\"\n            },\n            \"publisher\": {\n              \"@type\": \"Organization\",\n              \"name\": \"Instagram Followers Tracker\",\n              \"logo\": {\n                \"@type\": \"ImageObject\",\n                \"url\": \"https://instaunfollowerstracker.com/favicon.svg\"\n              }\n            },\n            \"datePublished\": \"2025-08-19T00:00:00Z\",\n            \"dateModified\": \"2025-08-19T00:00:00Z\",\n            \"articleSection\": \"Instagram Guide\",\n            \"keywords\": [\"instagram auto unfollow\", \"automatic follow unfollow instagram\", \"instagram unfollowing people\", \"does instagram randomly unfollow\"],\n            \"mainEntityOfPage\": {\n              \"@type\": \"WebPage\",\n              \"@id\": \"https://instaunfollowerstracker.com/instagram-auto-unfollow-explained\"\n            }\n          })}\n        </script>\n      </head>\n\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-50 via-white to-pink-50 dark:from-gray-900 dark:via-gray-900 dark:to-purple-900\">\n        <Header />\n        \n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-black/20\"></div>\n          <div className=\"relative container mx-auto px-4 py-16 lg:py-24\">\n            <div className=\"max-w-4xl mx-auto text-center\">\n              <h1 className=\"text-4xl lg:text-6xl font-bold text-white mb-6 leading-tight\" itemProp=\"headline\">\n                Does Instagram Auto Unfollow People?\n              </h1>\n              <p className=\"text-xl lg:text-2xl text-gray-100 mb-8 leading-relaxed\">\n                Complete Guide to Instagram's Unfollowing System, Third-Party Tools, and Safe Tracking Methods\n              </p>\n              \n              {/* Article Meta */}\n              <div className=\"flex flex-wrap items-center justify-center gap-6 text-gray-200 mb-8\">\n                <div className=\"flex items-center gap-2\">\n                  <Calendar className=\"w-5 h-5\" />\n                  <time dateTime=\"2025-08-19\" itemProp=\"datePublished\">August 19, 2025</time>\n                </div>\n                <div className=\"flex items-center gap-2\" itemProp=\"author\" itemScope itemType=\"https://schema.org/Organization\">\n                  <User className=\"w-5 h-5\" />\n                  <span itemProp=\"name\">Instagram Experts</span>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Clock className=\"w-5 h-5\" />\n                  <span>8 min read</span>\n                </div>\n              </div>\n\n              {/* Topic Tags */}\n              <div className=\"flex flex-wrap justify-center gap-3\">\n                <span className=\"bg-white/20 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm font-medium\">\n                  Instagram Auto Unfollow\n                </span>\n                <span className=\"bg-white/20 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm font-medium\">\n                  Automatic Follow/Unfollow\n                </span>\n                <span className=\"bg-white/20 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm font-medium\">\n                  Safety Guide\n                </span>\n                <span className=\"bg-white/20 backdrop-blur-sm text-white px-4 py-2 rounded-full text-sm font-medium\">\n                  Instagram Security\n                </span>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Breadcrumbs */}\n        <section className=\"bg-gray-50 dark:bg-gray-800 py-4\">\n          <div className=\"container mx-auto px-4\">\n            <Breadcrumbs items={breadcrumbItems} />\n          </div>\n        </section>\n\n        {/* Main Article Content */}\n        <main className=\"container mx-auto px-4 py-12\">\n          <div className=\"max-w-4xl mx-auto\">\n            <article className=\"prose prose-lg max-w-none dark:prose-invert\" itemScope itemType=\"https://schema.org/Article\">\n              \n              {/* Introduction */}\n              <div className=\"bg-white dark:bg-gray-800 rounded-xl p-8 mb-8 border border-gray-100 dark:border-gray-700\">\n                <p className=\"text-lg leading-relaxed mb-6\" itemProp=\"description\">\n                  Many <span itemProp=\"about\" itemScope itemType=\"https://schema.org/SoftwareApplication\"><span itemProp=\"name\">Instagram</span></span> users wonder: <strong>\"Does Instagram auto unfollow people?\"</strong> or <strong>\"Does Instagram unfollow people for you?\"</strong> \n                  The answer involves understanding Instagram's policies, automatic systems, and third-party tools that affect your following list.\n                </p>\n                \n                <div className=\"bg-blue-50 dark:bg-blue-900/20 border-l-4 border-blue-500 p-4 my-6\">\n                  <div className=\"flex items-start\">\n                    <AlertTriangle className=\"w-5 h-5 text-blue-500 mr-3 mt-0.5\" />\n                    <div>\n                      <h4 className=\"font-semibold text-blue-800 dark:text-blue-200 mb-2\">Quick Answer</h4>\n                      <p className=\"text-blue-700 dark:text-blue-300 text-sm\">\n                        Instagram itself doesn't automatically unfollow people for you, but there are several reasons why you might notice automatic unfollowing behavior on your account.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Does Instagram Auto Unfollow Section */}\n              <section className=\"bg-white dark:bg-gray-800 rounded-xl p-8 mb-8 border border-gray-100 dark:border-gray-700\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <Users className=\"w-6 h-6 text-purple-600 mr-3\" />\n                  Does Instagram Auto Unfollow Accounts?\n                </h2>\n                \n                <p className=\"mb-6\">\n                  <strong>Instagram unfollowing people</strong> automatically can happen in several scenarios, though Instagram's native app doesn't have a built-in auto-unfollow feature. Here's what actually happens:\n                </p>\n\n                <div className=\"grid md:grid-cols-2 gap-6 mb-6\">\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-6\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-3 flex items-center\">\n                      <Shield className=\"w-5 h-5 text-green-600 mr-2\" />\n                      Instagram's System\n                    </h3>\n                    <ul className=\"space-y-2 text-sm text-gray-700 dark:text-gray-300\">\n                      <li>• No native auto-unfollow feature</li>\n                      <li>• Removes spam/fake accounts automatically</li>\n                      <li>• Enforces following limits (7,500 max)</li>\n                      <li>• May remove follows from deleted accounts</li>\n                    </ul>\n                  </div>\n                  \n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-6\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-3 flex items-center\">\n                      <AlertTriangle className=\"w-5 h-5 text-orange-600 mr-2\" />\n                      Third-Party Tools\n                    </h3>\n                    <ul className=\"space-y-2 text-sm text-gray-700 dark:text-gray-300\">\n                      <li>• Automated follow/unfollow bots</li>\n                      <li>• Growth service tools</li>\n                      <li>• Scheduling apps with unfollow features</li>\n                      <li>• Account management services</li>\n                    </ul>\n                  </div>\n                </div>\n              </section>\n\n              {/* Automatic Follow Unfollow Instagram Section */}\n              <section className=\"bg-white dark:bg-gray-800 rounded-xl p-8 mb-8 border border-gray-100 dark:border-gray-700\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <Target className=\"w-6 h-6 text-purple-600 mr-3\" />\n                  Automatic Follow Unfollow Instagram: How It Works\n                </h2>\n                \n                <p className=\"mb-6\">\n                  <strong>Automatic follow unfollow Instagram</strong> strategies are commonly used by growth services and third-party tools. Here's how these systems typically operate:\n                </p>\n\n                <div className=\"bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-700 rounded-lg p-6 mb-6\">\n                  <h3 className=\"font-semibold text-yellow-800 dark:text-yellow-200 mb-4\">How Auto Follow/Unfollow Works:</h3>\n                  <ol className=\"space-y-3 text-yellow-700 dark:text-yellow-300\">\n                    <li><strong>1. Mass Following:</strong> Tool follows hundreds of targeted accounts</li>\n                    <li><strong>2. Waiting Period:</strong> Waits 2-7 days for follow-backs</li>\n                    <li><strong>3. Automatic Unfollowing:</strong> Unfollows accounts that didn't follow back</li>\n                    <li><strong>4. Cycle Repetition:</strong> Repeats process to maintain follower ratios</li>\n                  </ol>\n                </div>\n\n                <div className=\"bg-red-50 dark:bg-red-900/20 border-l-4 border-red-500 p-4 mb-6\">\n                  <div className=\"flex items-start\">\n                    <AlertTriangle className=\"w-5 h-5 text-red-500 mr-3 mt-0.5\" />\n                    <div>\n                      <h4 className=\"font-semibold text-red-800 dark:text-red-200 mb-2\">Instagram's Policy Warning</h4>\n                      <p className=\"text-red-700 dark:text-red-300 text-sm\">\n                        Using third-party auto follow/unfollow tools violates Instagram's Terms of Service and can result in account restrictions, shadowbanning, or permanent suspension.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              {/* Does Instagram Randomly Unfollow Section */}\n              <section className=\"bg-white dark:bg-gray-800 rounded-xl p-8 mb-8 border border-gray-100 dark:border-gray-700\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <Eye className=\"w-6 h-6 text-purple-600 mr-3\" />\n                  Does Instagram Randomly Unfollow Accounts?\n                </h2>\n                \n                <p className=\"mb-6\">\n                  Users often ask <strong>\"Does Instagram randomly unfollow accounts?\"</strong> or <strong>\"Does Instagram automatically unfollow accounts?\"</strong> Here are the main reasons why you might notice unexpected unfollowing:\n                </p>\n\n                <div className=\"grid gap-6 mb-6\">\n                  <div className=\"border border-gray-200 dark:border-gray-600 rounded-lg p-6\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-3\">Common Reasons for Unexpected Unfollowing:</h3>\n                    <div className=\"grid md:grid-cols-2 gap-4\">\n                      <div>\n                        <h4 className=\"font-medium text-purple-600 dark:text-purple-400 mb-2\">Account-Related</h4>\n                        <ul className=\"space-y-1 text-sm text-gray-700 dark:text-gray-300\">\n                          <li>• Account was deleted by user</li>\n                          <li>• Account was suspended by Instagram</li>\n                          <li>• User blocked you</li>\n                          <li>• Account went private and denied follow request</li>\n                        </ul>\n                      </div>\n                      <div>\n                        <h4 className=\"font-medium text-purple-600 dark:text-purple-400 mb-2\">Technical Issues</h4>\n                        <ul className=\"space-y-1 text-sm text-gray-700 dark:text-gray-300\">\n                          <li>• Instagram bugs or glitches</li>\n                          <li>• Third-party app interference</li>\n                          <li>• Following limit reached (7,500)</li>\n                          <li>• Spam account removal by Instagram</li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              {/* How to Track Changes Section */}\n              <section className=\"bg-white dark:bg-gray-800 rounded-xl p-8 mb-8 border border-gray-100 dark:border-gray-700\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <TrendingDown className=\"w-6 h-6 text-purple-600 mr-3\" />\n                  How to Track Instagram Unfollowing Changes\n                </h2>\n                \n                <p className=\"mb-6\">\n                  Whether Instagram is automatically unfollowing people or you're experiencing other changes, tracking these modifications is crucial for account management:\n                </p>\n\n                <div className=\"bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-lg p-6 mb-6\">\n                  <h3 className=\"font-semibold text-gray-900 dark:text-white mb-4\">Safe Tracking Methods:</h3>\n                  <div className=\"grid md:grid-cols-2 gap-4\">\n                    <div>\n                      <h4 className=\"font-medium text-purple-600 dark:text-purple-400 mb-2\">Manual Tracking</h4>\n                      <ul className=\"space-y-1 text-sm text-gray-700 dark:text-gray-300\">\n                        <li>• Screenshot your following list regularly</li>\n                        <li>• Keep notes of important follows</li>\n                        <li>• Check insights in Instagram Business</li>\n                        <li>• Monitor follower count changes</li>\n                      </ul>\n                    </div>\n                    <div>\n                      <h4 className=\"font-medium text-purple-600 dark:text-purple-400 mb-2\">Secure Tools</h4>\n                      <ul className=\"space-y-1 text-sm text-gray-700 dark:text-gray-300\">\n                        <li>• Use Instagram data export analysis</li>\n                        <li>• Privacy-focused tracking tools</li>\n                        <li>• No-login required services</li>\n                        <li>• Local data processing only</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-700 rounded-lg p-6\">\n                  <div className=\"flex items-start\">\n                    <Upload className=\"w-5 h-5 text-green-500 mr-3 mt-0.5\" />\n                    <div>\n                      <h4 className=\"font-semibold text-green-800 dark:text-green-200 mb-2\">Recommended: Instagram Data Export Method</h4>\n                      <p className=\"text-green-700 dark:text-green-300 text-sm mb-3\">\n                        The safest way to track unfollowers is by downloading your Instagram data directly from Instagram and analyzing it with secure tools.\n                      </p>\n                      <Link \n                        href=\"/unfollowers-tracker\" \n                        className=\"inline-flex items-center text-green-600 dark:text-green-400 hover:text-green-700 dark:hover:text-green-300 font-medium text-sm\"\n                        data-testid=\"link-unfollowers-tracker\"\n                      >\n                        Try Our Secure Unfollowers Tracker →\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              {/* Prevention and Best Practices */}\n              <section className=\"bg-white dark:bg-gray-800 rounded-xl p-8 mb-8 border border-gray-100 dark:border-gray-700\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center\">\n                  <Shield className=\"w-6 h-6 text-purple-600 mr-3\" />\n                  Preventing Unwanted Auto Unfollowing\n                </h2>\n                \n                <p className=\"mb-6\">\n                  To prevent automatic unfollowing and maintain control over your Instagram following list:\n                </p>\n\n                <div className=\"grid md:grid-cols-2 gap-6\">\n                  <div className=\"space-y-4\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white\">Account Security</h3>\n                    <ul className=\"space-y-2 text-sm text-gray-700 dark:text-gray-300\">\n                      <li>• Enable two-factor authentication</li>\n                      <li>• Review connected apps regularly</li>\n                      <li>• Change password periodically</li>\n                      <li>• Monitor account activity</li>\n                      <li>• Avoid sharing login credentials</li>\n                    </ul>\n                  </div>\n                  \n                  <div className=\"space-y-4\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white\">Safe Practices</h3>\n                    <ul className=\"space-y-2 text-sm text-gray-700 dark:text-gray-300\">\n                      <li>• Avoid third-party automation tools</li>\n                      <li>• Follow/unfollow manually</li>\n                      <li>• Stay within Instagram's limits</li>\n                      <li>• Focus on genuine engagement</li>\n                      <li>• Use official Instagram features only</li>\n                    </ul>\n                  </div>\n                </div>\n              </section>\n\n              {/* FAQ Section with Semantic Markup */}\n              <section className=\"bg-white dark:bg-gray-800 rounded-xl p-8 mb-8 border border-gray-100 dark:border-gray-700\" itemScope itemType=\"https://schema.org/FAQPage\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6\">Frequently Asked Questions</h2>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"border-b border-gray-200 dark:border-gray-600 pb-4\" itemScope itemType=\"https://schema.org/Question\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\" itemProp=\"name\">\n                      Does Instagram unfollow people for you automatically?\n                    </h3>\n                    <div itemScope itemType=\"https://schema.org/Answer\" itemProp=\"acceptedAnswer\">\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\" itemProp=\"text\">\n                        No, Instagram doesn't have a native feature to automatically unfollow people. However, Instagram may remove follows from deleted, suspended, or spam accounts automatically as part of platform maintenance.\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"border-b border-gray-200 dark:border-gray-600 pb-4\" itemScope itemType=\"https://schema.org/Question\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\" itemProp=\"name\">\n                      Why did Instagram automatically unfollow accounts I was following?\n                    </h3>\n                    <div itemScope itemType=\"https://schema.org/Answer\" itemProp=\"acceptedAnswer\">\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\" itemProp=\"text\">\n                        This usually happens when: the account was deleted, suspended, or marked as spam by Instagram; you reached the 7,500 following limit; or third-party apps are interfering with your account.\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div className=\"border-b border-gray-200 dark:border-gray-600 pb-4\" itemScope itemType=\"https://schema.org/Question\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\" itemProp=\"name\">\n                      Is using automatic follow/unfollow tools safe?\n                    </h3>\n                    <div itemScope itemType=\"https://schema.org/Answer\" itemProp=\"acceptedAnswer\">\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\" itemProp=\"text\">\n                        No, using third-party automation tools violates Instagram's Terms of Service and can result in account restrictions, shadowbanning, or permanent suspension. Always follow and unfollow manually.\n                      </p>\n                    </div>\n                  </div>\n                  \n                  <div itemScope itemType=\"https://schema.org/Question\">\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\" itemProp=\"name\">\n                      How can I track who unfollowed me safely?\n                    </h3>\n                    <div itemScope itemType=\"https://schema.org/Answer\" itemProp=\"acceptedAnswer\">\n                      <p className=\"text-gray-700 dark:text-gray-300 text-sm\" itemProp=\"text\">\n                        The safest method is to download your Instagram data export and analyze it with privacy-focused tools that don't require your login credentials and process data locally.\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n              {/* Call to Action */}\n              <div className=\"bg-gradient-to-r from-purple-600 to-pink-600 rounded-xl p-8 text-white text-center\">\n                <h2 className=\"text-2xl font-bold mb-4\">Track Your Instagram Changes Safely</h2>\n                <p className=\"mb-6 text-purple-100\">\n                  Use our secure, privacy-focused tool to track unfollowers without risking your account security.\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                  <Link \n                    href=\"/unfollowers-tracker\" \n                    className=\"bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors inline-flex items-center justify-center\"\n                    data-testid=\"link-unfollowers-tracker\"\n                  >\n                    <Upload className=\"w-5 h-5 mr-2\" />\n                    Start Tracking Unfollowers\n                  </Link>\n                  <Link \n                    href=\"/how-it-works\" \n                    className=\"border-2 border-white text-white px-6 py-3 rounded-lg font-semibold hover:bg-white hover:text-purple-600 transition-colors inline-flex items-center justify-center\"\n                    data-testid=\"link-how-it-works\"\n                  >\n                    Learn How It Works\n                  </Link>\n                </div>\n              </div>\n\n              {/* Related Articles Section for Topical Authority */}\n              <section className=\"bg-gray-50 dark:bg-gray-800 rounded-xl p-8 mt-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-6 text-center\">Related Instagram Guides</h2>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                  <div className=\"bg-white dark:bg-gray-700 rounded-lg p-6 border border-gray-200 dark:border-gray-600\">\n                    <div className=\"flex items-center mb-3\">\n                      <Upload className=\"w-5 h-5 text-purple-500 mr-2\" />\n                      <span className=\"text-xs font-medium text-purple-600 dark:text-purple-400 bg-purple-50 dark:bg-purple-900/30 px-2 py-1 rounded-full\">Tool</span>\n                    </div>\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                      <Link href=\"/unfollowers-tracker\" className=\"hover:text-purple-600 dark:hover:text-purple-400 transition-colors\">\n                        Instagram Unfollowers Tracker\n                      </Link>\n                    </h3>\n                    <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4\">\n                      Safe and secure way to track who unfollowed you using your Instagram data export.\n                    </p>\n                    <Link \n                      href=\"/unfollowers-tracker\" \n                      className=\"text-purple-600 dark:text-purple-400 hover:text-purple-700 dark:hover:text-purple-300 text-sm font-medium inline-flex items-center\"\n                    >\n                      Start Tracking <ArrowRight className=\"w-3 h-3 ml-1\" />\n                    </Link>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-700 rounded-lg p-6 border border-gray-200 dark:border-gray-600\">\n                    <div className=\"flex items-center mb-3\">\n                      <Shield className=\"w-5 h-5 text-green-500 mr-2\" />\n                      <span className=\"text-xs font-medium text-green-600 dark:text-green-400 bg-green-50 dark:bg-green-900/30 px-2 py-1 rounded-full\">Guide</span>\n                    </div>\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                      <Link href=\"/how-it-works\" className=\"hover:text-purple-600 dark:hover:text-purple-400 transition-colors\">\n                        How It Works: Safe Tracking\n                      </Link>\n                    </h3>\n                    <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4\">\n                      Step-by-step guide to safely download and analyze your Instagram data export.\n                    </p>\n                    <Link \n                      href=\"/how-it-works\" \n                      className=\"text-purple-600 dark:text-purple-400 hover:text-purple-700 dark:hover:text-purple-300 text-sm font-medium inline-flex items-center\"\n                    >\n                      Learn Process <ArrowRight className=\"w-3 h-3 ml-1\" />\n                    </Link>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-700 rounded-lg p-6 border border-gray-200 dark:border-gray-600\">\n                    <div className=\"flex items-center mb-3\">\n                      <Eye className=\"w-5 h-5 text-orange-500 mr-2\" />\n                      <span className=\"text-xs font-medium text-orange-600 dark:text-orange-400 bg-orange-50 dark:bg-orange-900/30 px-2 py-1 rounded-full\">Analytics</span>\n                    </div>\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                      <Link href=\"/ghost-followers\" className=\"hover:text-purple-600 dark:hover:text-purple-400 transition-colors\">\n                        Ghost Followers Tracker\n                      </Link>\n                    </h3>\n                    <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4\">\n                      Identify inactive followers and fake accounts that don't engage with your content.\n                    </p>\n                    <Link \n                      href=\"/ghost-followers\" \n                      className=\"text-purple-600 dark:text-purple-400 hover:text-purple-700 dark:hover:text-purple-300 text-sm font-medium inline-flex items-center\"\n                    >\n                      Find Ghost Followers <ArrowRight className=\"w-3 h-3 ml-1\" />\n                    </Link>\n                  </div>\n\n                  <div className=\"bg-white dark:bg-gray-700 rounded-lg p-6 border border-gray-200 dark:border-gray-600\">\n                    <div className=\"flex items-center mb-3\">\n                      <Users className=\"w-5 h-5 text-blue-500 mr-2\" />\n                      <span className=\"text-xs font-medium text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/30 px-2 py-1 rounded-full\">Analytics</span>\n                    </div>\n                    <h3 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\n                      <Link href=\"/inactive-followers\" className=\"hover:text-purple-600 dark:hover:text-purple-400 transition-colors\">\n                        Inactive Followers Tracker\n                      </Link>\n                    </h3>\n                    <p className=\"text-gray-600 dark:text-gray-300 text-sm mb-4\">\n                      Find followers who are no longer active on Instagram and clean up your following list.\n                    </p>\n                    <Link \n                      href=\"/inactive-followers\" \n                      className=\"text-purple-600 dark:text-purple-400 hover:text-purple-700 dark:hover:text-purple-300 text-sm font-medium inline-flex items-center\"\n                    >\n                      Check Inactive Followers <ArrowRight className=\"w-3 h-3 ml-1\" />\n                    </Link>\n                  </div>\n                </div>\n\n                {/* Topic Cluster Navigation */}\n                <div className=\"mt-8 text-center\">\n                  <h3 className=\"font-semibold text-gray-900 dark:text-white mb-4\">Explore More Instagram Tools</h3>\n                  <div className=\"flex flex-wrap justify-center gap-3\">\n                    <Link \n                      href=\"/blog\" \n                      className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors px-3 py-1 rounded-full border border-gray-200 dark:border-gray-600 hover:border-purple-300 dark:hover:border-purple-500\"\n                    >\n                      📖 All Guides\n                    </Link>\n                    <Link \n                      href=\"/about\" \n                      className=\"text-sm text-gray-600 dark:text-gray-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors px-3 py-1 rounded-full border border-gray-200 dark:border-gray-600 hover:border-purple-300 dark:hover:border-purple-500\"\n                    >\n                      ℹ️ About Our Safety-First Approach\n                    </Link>\n                  </div>\n                </div>\n              </section>\n\n            </article>\n          </div>\n        </main>\n        \n        <Footer />\n      </div>\n    </>\n  );\n}","size_bytes":33013},"client/src/pages/instagram-who-doesnt-follow-me-back.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Shield, Users, Download, TrendingDown, BarChart3, CheckCircle, ArrowRight, Clock, Zap, AlertCircle } from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function InstagramWhoDoesntFollowMeBack() {\n  const toolFeatures = [\n    {\n      title: 'Instant Detection',\n      description: 'Identify non-reciprocal followers in seconds',\n      icon: Zap,\n      benefit: 'Save hours of manual checking'\n    },\n    {\n      title: 'Complete Privacy',\n      description: 'No login credentials required for analysis',\n      icon: Shield,\n      benefit: 'Your account security guaranteed'\n    },\n    {\n      title: 'Detailed Analytics',\n      description: 'Get comprehensive follower relationship insights',\n      icon: BarChart3,\n      benefit: 'Make informed decisions'\n    },\n    {\n      title: 'Free Forever',\n      description: 'No hidden costs or premium limitations',\n      icon: Users,\n      benefit: 'Access all features at no cost'\n    }\n  ];\n\n  const commonMistakes = [\n    {\n      mistake: 'Mass Unfollowing',\n      description: 'Unfollowing hundreds of accounts at once',\n      consequence: 'Can trigger Instagram spam detection',\n      solution: 'Unfollow gradually, 10-20 accounts per day maximum'\n    },\n    {\n      mistake: 'Following for Followers',\n      description: 'Following accounts just hoping for follow-backs',\n      consequence: 'Leads to unengaged audience and poor content performance',\n      solution: 'Focus on accounts that genuinely interest you'\n    },\n    {\n      mistake: 'Obsessing Over Ratios',\n      description: 'Constantly monitoring following-to-follower ratios',\n      consequence: 'Reduces focus on content quality and community building',\n      solution: 'Prioritize engagement quality over numerical ratios'\n    },\n    {\n      mistake: 'Using Risky Apps',\n      description: 'Using third-party apps that require Instagram passwords',\n      consequence: 'Account security risks and potential policy violations',\n      solution: 'Use secure methods like our data export analysis tool'\n    }\n  ];\n\n  const actionStrategies = [\n    {\n      situation: 'You have many non-reciprocal celebrity/brand follows',\n      strategy: 'Keep them if their content provides value',\n      reason: 'These accounts offer inspiration and industry insights'\n    },\n    {\n      situation: 'Personal accounts that don\\'t follow back',\n      strategy: 'Evaluate based on relationship and content quality',\n      reason: 'Some connections are worth maintaining regardless of reciprocity'\n    },\n    {\n      situation: 'Inactive accounts you follow',\n      strategy: 'Consider unfollowing inactive accounts',\n      reason: 'Cleans up your feed and improves engagement rates'\n    },\n    {\n      situation: 'Accounts outside your niche',\n      strategy: 'Unfollow if they don\\'t align with your interests',\n      reason: 'Helps curate a more relevant and engaging feed'\n    }\n  ];\n\n  const faqs = [\n    {\n      question: 'How do I check who doesn\\'t follow me back on Instagram?',\n      answer: 'Use our free Instagram analyzer tool by uploading your Instagram data export. It will instantly show you all accounts you follow that don\\'t follow you back, along with detailed analytics about your follower relationships.'\n    },\n    {\n      question: 'Is it safe to check who doesn\\'t follow me back using third-party tools?',\n      answer: 'Our tool is completely safe because it uses Instagram\\'s official data export feature and doesn\\'t require your login credentials. Avoid tools that ask for your Instagram password as they pose security risks.'\n    },\n    {\n      question: 'Should I unfollow everyone who doesn\\'t follow me back?',\n      answer: 'Not necessarily. Consider the value each account brings to your feed. Keep accounts that provide valuable content, inspiration, or represent important connections, even if they don\\'t follow you back.'\n    },\n    {\n      question: 'How often should I check for non-reciprocal followers?',\n      answer: 'Monthly reviews are sufficient for most users. Checking too frequently can lead to obsessive behavior that detracts from content creation and genuine community building.'\n    },\n    {\n      question: 'Will unfollowing people hurt my Instagram engagement?',\n      answer: 'Unfollowing irrelevant or inactive accounts can actually improve your engagement by creating a more curated feed that encourages authentic interactions with content you truly enjoy.'\n    },\n    {\n      question: 'What\\'s considered a good following-to-follower ratio?',\n      answer: 'There\\'s no universal \"good\" ratio. Focus on engagement quality rather than numbers. Many successful accounts follow more people than follow them, while others maintain equal ratios.'\n    }\n  ];\n\n  const steps = [\n    {\n      number: '01',\n      title: 'Request Data Export',\n      description: 'Go to Instagram Settings > Privacy and Security > Download Your Information',\n      time: '2 minutes',\n      icon: Download\n    },\n    {\n      number: '02',\n      title: 'Upload ZIP File',\n      description: 'Once received, upload your Instagram data file to our secure analyzer',\n      time: '30 seconds',\n      icon: TrendingDown\n    },\n    {\n      number: '03',\n      title: 'Get Results',\n      description: 'View detailed analysis of who doesn\\'t follow you back with insights',\n      time: '10 seconds',\n      icon: BarChart3\n    }\n  ];\n\n  const relatedTopics = [\n    { title: 'How to See Who Unfollowed You', url: '/how-to-see-who-unfollowed-you', description: 'Track recent unfollowers safely' },\n    { title: 'Who Doesn\\'t Follow Back', url: '/who-doesnt-follow-back', description: 'Strategic guide to non-reciprocal followers' },\n    { title: 'Instagram Analytics', url: '/instagram-analytics', description: 'Complete Instagram insights dashboard' }\n  ];\n\n  return (\n    <>\n      {/* SEO Meta Tags */}\n      <title>Instagram: Who Doesn't Follow Me Back? Free Checker Tool (2024)</title>\n      <meta name=\"description\" content=\"Find out who doesn't follow you back on Instagram with our free, secure tool. No password required. Get detailed analytics and strategic insights.\" />\n      <meta name=\"keywords\" content=\"instagram who doesn't follow me back, non reciprocal followers instagram, who unfollowed me, instagram followers checker\" />\n      \n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content=\"Instagram: Who Doesn't Follow Me Back - Free Tool\" />\n      <meta property=\"og:description\" content=\"Discover non-reciprocal followers on Instagram safely. Free tool with detailed analytics and no password required.\" />\n      <meta property=\"og:type\" content=\"article\" />\n      \n      {/* Schema Markup */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"SoftwareApplication\",\n          \"name\": \"Instagram Non-Reciprocal Followers Checker\",\n          \"description\": \"Free tool to find who doesn't follow you back on Instagram using secure data export analysis\",\n          \"url\": typeof window !== 'undefined' ? window.location.href : '',\n          \"applicationCategory\": \"Social Media Analytics\",\n          \"operatingSystem\": \"Web Browser\",\n          \"offers\": {\n            \"@type\": \"Offer\",\n            \"price\": \"0\",\n            \"priceCurrency\": \"USD\"\n          },\n          \"featureList\": [\n            \"Secure data analysis\",\n            \"No login required\", \n            \"Instant results\",\n            \"Complete privacy protection\"\n          ]\n        })}\n      </script>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        \n        {/* Breadcrumbs */}\n        <section className=\"bg-white py-4 border-b border-gray-200\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={[\n              { label: 'Home', href: '/' },\n              { label: 'Blog', href: '/blog' },\n              { label: 'Instagram: Who Doesn\\'t Follow Me Back', current: true }\n            ]} />\n          </div>\n        </section>\n        \n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16 relative overflow-hidden\">\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-20 left-10 w-32 h-32 bg-white opacity-10 rounded-full animate-float\"></div>\n            <div className=\"absolute bottom-20 right-20 w-24 h-24 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '2s'}}></div>\n          </div>\n          \n          <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n              Free Instagram Tool 2024\n            </Badge>\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4 leading-tight\">\n              Instagram: Who Doesn't\n              <span className=\"block text-yellow-300\">Follow Me Back?</span>\n            </h1>\n            <p className=\"text-base sm:text-lg text-gray-100 mb-6 max-w-3xl mx-auto leading-relaxed\">\n              Discover which Instagram accounts you follow that don't follow you back. \n              Get instant, secure analysis with our free tool - no password required.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-all\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <TrendingDown className=\"mr-2\" size={18} />\n                Check Non-Followers Now\n              </Button>\n              <Button \n                variant=\"outline\"\n                className=\"border-2 border-white text-white hover:bg-white hover:text-purple-600 transition-all\"\n              >\n                <Shield className=\"mr-2\" size={16} />\n                100% Secure Method\n              </Button>\n            </div>\n          </div>\n        </section>\n\n        {/* Features Overview */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Why Choose Our Instagram Follower Checker?\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                The safest and most comprehensive way to analyze your Instagram following relationships\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              {toolFeatures.map((feature, index) => (\n                <Card key={index} className=\"text-center shadow-sm hover:shadow-lg transition-all\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                      <feature.icon className=\"text-white\" size={20} />\n                    </div>\n                    <h3 className=\"text-base font-semibold text-gray-900 mb-2\">{feature.title}</h3>\n                    <p className=\"text-sm text-gray-600 mb-3\">{feature.description}</p>\n                    <div className=\"text-xs font-medium text-purple-600\">{feature.benefit}</div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* How It Works */}\n        <section className=\"py-16 bg-gradient-to-br from-blue-50 to-purple-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                How to Check Who Doesn't Follow You Back\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Simple 3-step process using Instagram's official data export feature\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n              {steps.map((step, index) => (\n                <div key={index} className=\"text-center\">\n                  <div className=\"relative mb-6\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto\">\n                      <step.icon className=\"text-white\" size={24} />\n                    </div>\n                    <div className=\"absolute -top-2 -right-2 w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center\">\n                      <span className=\"text-xs font-bold text-gray-900\">{step.number}</span>\n                    </div>\n                  </div>\n                  <Card className=\"shadow-sm\">\n                    <CardContent className=\"p-6\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{step.title}</h3>\n                      <p className=\"text-sm text-gray-600 mb-3\">{step.description}</p>\n                      <div className=\"flex items-center justify-center text-purple-600 text-xs font-medium\">\n                        <Clock size={12} className=\"mr-1\" />\n                        {step.time}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Common Mistakes */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Avoid These Common Mistakes\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Learn from others' mistakes when managing non-reciprocal followers\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n              {commonMistakes.map((item, index) => (\n                <Card key={index} className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start space-x-3 mb-4\">\n                      <AlertCircle className=\"text-red-500 mt-1\" size={20} />\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{item.mistake}</h3>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-3\">{item.description}</p>\n                    <div className=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-3\">\n                      <p className=\"text-xs text-red-800\">⚠️ <strong>Risk:</strong> {item.consequence}</p>\n                    </div>\n                    <div className=\"bg-green-50 border border-green-200 rounded-lg p-3\">\n                      <p className=\"text-xs text-green-800\">✅ <strong>Better Approach:</strong> {item.solution}</p>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Action Strategies */}\n        <section className=\"py-16 bg-gradient-to-br from-gray-50 to-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                What to Do When Someone Doesn't Follow Back\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Strategic approaches for different types of non-reciprocal followers\n              </p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              {actionStrategies.map((strategy, index) => (\n                <Card key={index} className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 items-center\">\n                      <div>\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-1\">Situation:</h3>\n                        <p className=\"text-sm text-gray-700\">{strategy.situation}</p>\n                      </div>\n                      <div>\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-1\">Recommended Action:</h3>\n                        <p className=\"text-sm text-purple-600 font-medium\">{strategy.strategy}</p>\n                      </div>\n                      <div>\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-1\">Why:</h3>\n                        <p className=\"text-sm text-gray-600\">{strategy.reason}</p>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* CTA Section */}\n        <section className=\"py-16 bg-gradient-to-r from-purple-600 to-pink-600\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <div className=\"bg-white rounded-2xl p-8 shadow-xl\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-4\">\n                Ready to Analyze Your Instagram Following?\n              </h2>\n              <p className=\"text-base text-gray-600 mb-6 max-w-2xl mx-auto\">\n                Get instant insights into who doesn't follow you back with our secure, \n                free tool that protects your account privacy.\n              </p>\n              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-4 mb-8\">\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-purple-600 mb-1\">100%</div>\n                  <div className=\"text-sm text-gray-600\">Secure</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600 mb-1\">Free</div>\n                  <div className=\"text-sm text-gray-600\">No Cost</div>\n                </div>\n                <div className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-green-600 mb-1\">Instant</div>\n                  <div className=\"text-sm text-gray-600\">Results</div>\n                </div>\n              </div>\n              <Button \n                size=\"lg\"\n                className=\"bg-purple-600 hover:bg-purple-700 px-8 py-3 rounded-lg font-semibold text-white\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <TrendingDown className=\"mr-2\" size={18} />\n                Check Who Doesn't Follow Back - Free\n              </Button>\n            </div>\n          </div>\n        </section>\n\n        {/* FAQ Section */}\n        <section className=\"py-16 bg-gray-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Frequently Asked Questions\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Everything you need to know about checking non-reciprocal Instagram followers\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n              {faqs.map((faq, index) => (\n                <Card key={index} className=\"shadow-sm\">\n                  <CardContent className=\"p-6\">\n                    <h3 className=\"text-base font-semibold text-gray-900 mb-3\">{faq.question}</h3>\n                    <p className=\"text-sm text-gray-600 leading-relaxed\">{faq.answer}</p>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Related Topics */}\n        <section className=\"py-16 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"text-center mb-12\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-3\">\n                Explore More Instagram Tools\n              </h2>\n              <p className=\"text-base sm:text-lg text-gray-600 max-w-2xl mx-auto\">\n                Comprehensive Instagram analytics and follower management tools\n              </p>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              {relatedTopics.map((topic, index) => (\n                <Link key={index} href={topic.url}>\n                  <Card className=\"shadow-sm hover:shadow-lg transition-all hover:-translate-y-1 cursor-pointer h-full\">\n                    <CardContent className=\"p-6\">\n                      <h3 className=\"text-base font-semibold text-gray-900 mb-2\">{topic.title}</h3>\n                      <p className=\"text-sm text-gray-600 mb-4\">{topic.description}</p>\n                      <div className=\"flex items-center text-purple-600 text-sm font-medium\">\n                        Learn More <ArrowRight size={14} className=\"ml-1\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n                </Link>\n              ))}\n            </div>\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}","size_bytes":22283},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/privacy-policy.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Card, CardContent } from '@/components/ui/card';\n\nexport default function PrivacyPolicy() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">Privacy Policy</h1>\n          <p className=\"text-lg text-gray-100\">\n            Your privacy is our priority. Learn how we protect your data.\n          </p>\n        </div>\n      </section>\n\n      <main className=\"py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardContent className=\"p-8 prose prose-lg max-w-none\">\n              <p className=\"text-gray-600 mb-8\">\n                <strong>Last updated:</strong> August 17, 2025\n              </p>\n\n              <h2>Information We Collect</h2>\n              <p>\n                Unfollowers Tracker is designed with privacy in mind. We do not collect, store, or process your personal Instagram data on our servers. When you upload your Instagram data export file:\n              </p>\n              <ul>\n                <li>Your file is processed locally in your browser</li>\n                <li>Analysis results are generated without data leaving your device</li>\n                <li>No personal information is transmitted to our servers</li>\n                <li>Your Instagram credentials are never required or collected</li>\n              </ul>\n\n              <h2>How We Use Information</h2>\n              <p>\n                Since we don't collect your Instagram data, we cannot use it for any purpose. The only information we may collect includes:\n              </p>\n              <ul>\n                <li>Basic website analytics (page views, general location)</li>\n                <li>Technical information about your browser for optimization</li>\n                <li>Error logs to improve our service (no personal data included)</li>\n              </ul>\n\n              <h2>Data Security</h2>\n              <p>\n                Your Instagram data security is our top priority:\n              </p>\n              <ul>\n                <li>All processing happens locally in your browser</li>\n                <li>No Instagram data is uploaded to our servers</li>\n                <li>We use industry-standard encryption for all communications</li>\n                <li>Your uploaded files are automatically deleted after analysis</li>\n              </ul>\n\n              <h2>Third-Party Services</h2>\n              <p>\n                We may use third-party services for:\n              </p>\n              <ul>\n                <li>Website hosting and content delivery</li>\n                <li>Analytics to understand website usage patterns</li>\n                <li>Error monitoring to improve service quality</li>\n              </ul>\n              <p>\n                These services do not have access to your Instagram data as it never leaves your device.\n              </p>\n\n              <h2>Your Rights</h2>\n              <p>\n                Since we don't store your personal data, there's nothing for us to delete or modify. However, you have the right to:\n              </p>\n              <ul>\n                <li>Stop using our service at any time</li>\n                <li>Clear your browser data to remove any local storage</li>\n                <li>Contact us with any privacy concerns</li>\n              </ul>\n\n              <h2>Children's Privacy</h2>\n              <p>\n                Our service is not directed to children under 13. We do not knowingly collect personal information from children under 13. If you believe a child has provided us with personal information, please contact us immediately.\n              </p>\n\n              <h2>Changes to This Policy</h2>\n              <p>\n                We may update this privacy policy from time to time. We will notify users of any material changes by posting the new policy on this page with an updated revision date.\n              </p>\n\n              <h2>Contact Us</h2>\n              <p>\n                If you have any questions about this privacy policy or our practices, please contact us at:\n              </p>\n              <p>\n                <strong>Email:</strong> unfollowerstracker2024@gmail.com\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":4647},"client/src/pages/results.tsx":{"content":"import { Header } from '@/components/header';\nimport { StatsDashboard } from '@/components/stats-dashboard';\nimport { Footer } from '@/components/footer';\nimport { Button } from '@/components/ui/button';\nimport { ArrowLeft, Download } from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function Results() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      <main className=\"py-8\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Header with back button */}\n          <div className=\"flex items-center justify-between mb-8\">\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/\">\n                <Button variant=\"outline\" size=\"sm\">\n                  <ArrowLeft className=\"mr-2\" size={16} />\n                  Back to Home\n                </Button>\n              </Link>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">Analysis Results</h1>\n                <p className=\"text-gray-600\">Your Instagram followers analysis</p>\n              </div>\n            </div>\n            \n            <Button className=\"bg-purple-600 hover:bg-purple-700\">\n              <Download className=\"mr-2\" size={16} />\n              Export Report\n            </Button>\n          </div>\n          \n          {/* Results Dashboard */}\n          <StatsDashboard />\n        </div>\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}\n","size_bytes":1466},"client/src/pages/terms-of-service.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Card, CardContent } from '@/components/ui/card';\n\nexport default function TermsOfService() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4\">Terms of Service</h1>\n          <p className=\"text-lg text-gray-100\">\n            Please read these terms carefully before using our service.\n          </p>\n        </div>\n      </section>\n\n      <main className=\"py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Card>\n            <CardContent className=\"p-8 prose prose-lg max-w-none\">\n              <p className=\"text-gray-600 mb-8\">\n                <strong>Last updated:</strong> August 17, 2025\n              </p>\n\n              <h2>Acceptance of Terms</h2>\n              <p>\n                By accessing and using Unfollowers Tracker, you accept and agree to be bound by the terms and provision of this agreement. If you do not agree to these terms, please do not use our service.\n              </p>\n\n              <h2>Description of Service</h2>\n              <p>\n                Unfollowers Tracker provides a free tool to analyze Instagram follower data. Our service:\n              </p>\n              <ul>\n                <li>Analyzes Instagram data export files provided by users</li>\n                <li>Provides insights about followers, unfollowers, and account statistics</li>\n                <li>Processes data locally without storing personal information</li>\n                <li>Operates without requiring Instagram login credentials</li>\n              </ul>\n\n              <h2>User Responsibilities</h2>\n              <p>\n                When using our service, you agree to:\n              </p>\n              <ul>\n                <li>Only upload your own Instagram data export files</li>\n                <li>Not attempt to upload data belonging to other users</li>\n                <li>Use the service for personal, non-commercial purposes only</li>\n                <li>Not attempt to reverse engineer or misuse our service</li>\n                <li>Comply with Instagram's Terms of Service</li>\n              </ul>\n\n              <h2>Prohibited Uses</h2>\n              <p>\n                You may not use our service to:\n              </p>\n              <ul>\n                <li>Violate any applicable laws or regulations</li>\n                <li>Upload malicious files or attempt to harm our systems</li>\n                <li>Collect data about other users without their consent</li>\n                <li>Use automated scripts or bots to access our service</li>\n                <li>Resell or redistribute our service without permission</li>\n              </ul>\n\n              <h2>Disclaimer of Warranties</h2>\n              <p>\n                Our service is provided \"as is\" without any warranties. We do not guarantee:\n              </p>\n              <ul>\n                <li>Accuracy or completeness of analysis results</li>\n                <li>Uninterrupted or error-free service operation</li>\n                <li>Compatibility with all devices or browsers</li>\n                <li>That the service will meet your specific requirements</li>\n              </ul>\n\n              <h2>Limitation of Liability</h2>\n              <p>\n                To the maximum extent permitted by law, Unfollowers Tracker shall not be liable for any indirect, incidental, special, consequential, or punitive damages, including without limitation, loss of profits, data, use, or other intangible losses.\n              </p>\n\n              <h2>Instagram Compliance</h2>\n              <p>\n                Our service is designed to work with Instagram's official data export feature. Users are responsible for:\n              </p>\n              <ul>\n                <li>Obtaining their data through Instagram's official channels</li>\n                <li>Complying with Instagram's Terms of Service</li>\n                <li>Understanding that we are not affiliated with Instagram</li>\n              </ul>\n\n              <h2>Intellectual Property</h2>\n              <p>\n                The service and its original content, features, and functionality are owned by Unfollowers Tracker and are protected by international copyright, trademark, patent, trade secret, and other intellectual property laws.\n              </p>\n\n              <h2>Termination</h2>\n              <p>\n                We may terminate or suspend your access to our service immediately, without prior notice, for any reason whatsoever, including without limitation if you breach the Terms.\n              </p>\n\n              <h2>Changes to Terms</h2>\n              <p>\n                We reserve the right to modify or replace these Terms at any time. If a revision is material, we will try to provide at least 30 days notice prior to any new terms taking effect.\n              </p>\n\n              <h2>Contact Information</h2>\n              <p>\n                If you have any questions about these Terms of Service, please contact us at:\n              </p>\n              <p>\n                <strong>Email:</strong> unfollowerstracker2024@gmail.com\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":5574},"client/src/pages/track-unfollowers-free.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { FileUpload } from '@/components/file-upload';\nimport { StatsDashboard } from '@/components/stats-dashboard';\nimport { FAQSection } from '@/components/faq-section';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Users, Shield, Clock, Zap, CheckCircle, Star, TrendingUp } from 'lucide-react';\nimport { useState } from 'react';\n\nexport function TrackUnfollowersFree() {\n  const [hasUploadedFile, setHasUploadedFile] = useState(false);\n\n  const handleFileUploaded = (file: File) => {\n    setHasUploadedFile(true);\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-20 pb-12 bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-10 right-10 w-72 h-72 bg-white opacity-5 rounded-full blur-3xl animate-pulse-slow\"></div>\n          <div className=\"absolute bottom-10 left-20 w-56 h-56 bg-white opacity-5 rounded-full blur-2xl animate-float\"></div>\n        </div>\n        \n        <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <div className=\"flex items-center justify-center mb-4\">\n            <div className=\"flex space-x-1\">\n              {[...Array(5)].map((_, i) => (\n                <Star key={i} className=\"w-5 h-5 fill-current text-yellow-400\" />\n              ))}\n            </div>\n            <span className=\"ml-2 text-sm opacity-90\">Trusted by 50,000+ users</span>\n          </div>\n          \n          <h1 className=\"text-4xl md:text-5xl font-bold mb-4 leading-tight\">\n            Track Instagram Unfollowers Free\n          </h1>\n          <p className=\"text-lg md:text-xl text-gray-100 mb-8 max-w-3xl mx-auto\">\n            Get instant results on who unfollowed you on Instagram. No login required, completely secure, and 100% free forever.\n          </p>\n          \n          <div className=\"flex flex-wrap justify-center items-center gap-6 text-sm opacity-90 mb-8\">\n            <div className=\"flex items-center gap-2\">\n              <Shield size={16} />\n              <span>No Password Needed</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Clock size={16} />\n              <span>Results in 10 Seconds</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Zap size={16} />\n              <span>Always Free</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Users size={16} />\n              <span>50k+ Happy Users</span>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Breadcrumbs */}\n      <section className=\"bg-white py-4 border-b border-gray-200\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Breadcrumbs items={[\n            { label: 'Home', href: '/' },\n            { label: 'Track Unfollowers Free', current: true }\n          ]} />\n        </div>\n      </section>\n\n      {/* Free Tool Section */}\n      <div id=\"tracker-tool\" className=\"bg-white\">\n        <FileUpload onFileUploaded={handleFileUploaded} />\n        {hasUploadedFile && <StatsDashboard />}\n      </div>\n\n      {/* Free Features Highlight */}\n      <section className=\"py-16 bg-gradient-to-br from-blue-50 to-purple-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">\n              Everything You Need - Completely Free\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n              Our Instagram unfollowers tracker is 100% free with no hidden costs, premium plans, or feature limitations.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md bg-white\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <CheckCircle className=\"text-green-600\" size={24} />\n                </div>\n                <h3 className=\"font-semibold mb-2\">Free Forever</h3>\n                <p className=\"text-gray-600 text-sm\">No premium plans or hidden fees</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md bg-white\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <Users className=\"text-blue-600\" size={24} />\n                </div>\n                <h3 className=\"font-semibold mb-2\">Unlimited Usage</h3>\n                <p className=\"text-gray-600 text-sm\">Track unfollowers as many times as you want</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md bg-white\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <TrendingUp className=\"text-purple-600\" size={24} />\n                </div>\n                <h3 className=\"font-semibold mb-2\">All Features Included</h3>\n                <p className=\"text-gray-600 text-sm\">Complete analytics and insights at no cost</p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 text-center hover:shadow-lg transition-shadow border-0 shadow-md bg-white\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-pink-100 rounded-xl flex items-center justify-center mx-auto mb-4\">\n                  <Shield className=\"text-pink-600\" size={24} />\n                </div>\n                <h3 className=\"font-semibold mb-2\">100% Secure</h3>\n                <p className=\"text-gray-600 text-sm\">Your data stays private and secure</p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* How to Start */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n                Start Tracking Unfollowers Now\n              </h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Join thousands of Instagram users who track their unfollowers safely with our free tool. No registration required, start immediately.\n              </p>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <CheckCircle className=\"text-purple-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Request Your Instagram Data</h3>\n                    <p className=\"text-gray-600\">\n                      Use Instagram's official data export feature - completely safe and secure.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <CheckCircle className=\"text-purple-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Upload Your ZIP File</h3>\n                    <p className=\"text-gray-600\">\n                      Upload your Instagram data file and get instant results in seconds.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-purple-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <CheckCircle className=\"text-purple-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Get Detailed Insights</h3>\n                    <p className=\"text-gray-600\">\n                      See who unfollowed you, new followers, and comprehensive analytics.\n                    </p>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"mt-8\">\n                <Button \n                  size=\"lg\"\n                  onClick={() => document.getElementById('tracker-tool')?.scrollIntoView({ behavior: 'smooth' })}\n                  className=\"bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:from-purple-700 hover:to-pink-700 transition-all font-bold text-lg px-10 py-4 rounded-xl shadow-lg hover:shadow-xl transform hover:scale-105\"\n                >\n                  Start Tracking Free\n                </Button>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-purple-600 to-pink-600 rounded-2xl p-8 text-white\">\n                <h3 className=\"text-2xl font-bold mb-6\">Why Choose Our Free Tool?</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <Shield size={20} className=\"text-purple-200\" />\n                    <span>No passwords or login required</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Zap size={20} className=\"text-yellow-200\" />\n                    <span>Instant results in under 10 seconds</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <Users size={20} className=\"text-blue-200\" />\n                    <span>Trusted by 50,000+ Instagram users</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <CheckCircle size={20} className=\"text-green-200\" />\n                    <span>100% free with no limitations</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <TrendingUp size={20} className=\"text-pink-200\" />\n                    <span>Comprehensive analytics included</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              What Users Say About Our Free Tool\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Join thousands of satisfied users who trust our free Instagram unfollowers tracker.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"flex space-x-1 mb-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-current text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-gray-600 mb-4\">\n                  \"Amazing tool! Found out exactly who unfollowed me without having to share my password. The results were instant and accurate.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Sarah M.</div>\n                <div className=\"text-sm text-gray-500\">Instagram Influencer</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"flex space-x-1 mb-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-current text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-gray-600 mb-4\">\n                  \"I was skeptical about free tools, but this one actually works perfectly. No ads, no premium upsells - just the results I needed.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">David L.</div>\n                <div className=\"text-sm text-gray-500\">Business Owner</div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"flex space-x-1 mb-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star key={i} className=\"w-4 h-4 fill-current text-yellow-400\" />\n                  ))}\n                </div>\n                <p className=\"text-gray-600 mb-4\">\n                  \"Super easy to use and completely secure. I love that it's free and gives me all the analytics I need to understand my audience.\"\n                </p>\n                <div className=\"font-semibold text-gray-900\">Emma R.</div>\n                <div className=\"text-sm text-gray-500\">Content Creator</div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      <FAQSection />\n      <Footer />\n    </div>\n  );\n}","size_bytes":14219},"client/src/pages/unfollowers-tracker.tsx":{"content":"import { Header } from '@/components/header';\nimport { SEOHead } from '@/components/seo-head';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { FileUpload } from '@/components/file-upload';\nimport { StatsDashboard } from '@/components/stats-dashboard';\nimport { FAQSection } from '@/components/faq-section';\nimport { Users, Shield, Clock, Zap, CheckCircle, TrendingUp } from 'lucide-react';\nimport { useState } from 'react';\n\nexport function UnfollowersTrackerPage() {\n  const [hasUploadedFile, setHasUploadedFile] = useState(false);\n\n  const handleFileUploaded = (file: File) => {\n    setHasUploadedFile(true);\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <SEOHead />\n      <Header />\n      \n      {/* Hero Section */}\n      <section className=\"pt-12 pb-10 bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 text-white relative overflow-hidden\">\n        <div className=\"absolute inset-0\">\n          <div className=\"absolute top-20 left-10 w-64 h-64 bg-white opacity-5 rounded-full blur-3xl animate-pulse-slow\"></div>\n          <div className=\"absolute bottom-20 right-20 w-48 h-48 bg-white opacity-5 rounded-full blur-2xl animate-float\"></div>\n          <div className=\"absolute top-1/2 left-1/3 w-32 h-32 bg-white opacity-5 rounded-full blur-xl animate-pulse-slow\" style={{animationDelay: '2s'}}></div>\n        </div>\n        \n        <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h1 className=\"text-5xl md:text-6xl font-bold mb-6 leading-tight\">\n            Instagram Unfollowers Tracker\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-100 mb-8 max-w-4xl mx-auto font-medium\">\n            Discover exactly who unfollowed you on Instagram. Track lost followers, new connections, and engagement patterns with our secure, no-login tracker tool.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n            <Button \n              size=\"lg\"\n              onClick={() => document.getElementById('tracker-tool')?.scrollIntoView({ behavior: 'smooth' })}\n              className=\"bg-white text-purple-600 px-10 py-4 rounded-xl font-bold text-xl hover:bg-gray-100 transition-all transform hover:scale-105 shadow-2xl\"\n              data-testid=\"button-start-tracking\"\n            >\n              <Users className=\"mr-3\" size={24} />\n              Start Tracking Now\n            </Button>\n          </div>\n\n          {/* Trust Indicators */}\n          <div className=\"flex flex-wrap justify-center items-center gap-8 text-sm opacity-90\">\n            <div className=\"flex items-center gap-2\">\n              <Shield size={16} />\n              <span>100% Secure & Private</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Clock size={16} />\n              <span>Results in 10 Seconds</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Zap size={16} />\n              <span>No Login Required</span>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Breadcrumbs */}\n      <section className=\"bg-white py-4 border-b border-gray-200\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <Breadcrumbs items={[\n            { label: 'Home', href: '/' },\n            { label: 'Unfollowers Tracker', current: true }\n          ]} />\n        </div>\n      </section>\n\n      {/* Main Tracker Tool */}\n      <div id=\"tracker-tool\">\n        <FileUpload onFileUploaded={handleFileUploaded} />\n        {hasUploadedFile && <StatsDashboard />}\n      </div>\n\n      {/* Key Features Section */}\n      <section className=\"py-20 bg-gray-50\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n              Advanced Instagram Unfollowers Detection\n            </h2>\n            <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\n              Our unfollowers tracker uses advanced algorithms to analyze your Instagram data and provide comprehensive insights about your follower changes.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Users className=\"text-purple-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Unfollower Detection</h3>\n                <p className=\"text-gray-600\">\n                  Instantly identify users who unfollowed your Instagram account. Get detailed lists with usernames and unfollowing dates.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-xl flex items-center justify-center mb-4\">\n                  <TrendingUp className=\"text-blue-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Growth Analytics</h3>\n                <p className=\"text-gray-600\">\n                  Track your follower growth patterns, engagement rates, and identify the best times to post for maximum reach.\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card className=\"p-6 hover:shadow-lg transition-shadow border-0 shadow-md\">\n              <CardContent className=\"pt-0\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-xl flex items-center justify-center mb-4\">\n                  <Shield className=\"text-green-600\" size={24} />\n                </div>\n                <h3 className=\"text-xl font-semibold mb-3\">Privacy First</h3>\n                <p className=\"text-gray-600\">\n                  Your Instagram data stays completely private. No passwords required, all processing happens locally in your browser.\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* Why Use Our Unfollowers Tracker */}\n      <section className=\"py-20 bg-white\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-4xl font-bold text-gray-900 mb-6\">\n                Why Choose Our Instagram Unfollowers Tracker?\n              </h2>\n              <p className=\"text-xl text-gray-600 mb-8\">\n                Unlike other unfollower tracking tools, our platform prioritizes your security and provides the most accurate results without compromising your Instagram account.\n              </p>\n              \n              <div className=\"space-y-6\">\n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <CheckCircle className=\"text-green-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No Instagram Login Required</h3>\n                    <p className=\"text-gray-600\">\n                      Never share your Instagram password. Our tool works with your official Instagram data export, keeping your account completely secure.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <CheckCircle className=\"text-green-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Instant & Accurate Results</h3>\n                    <p className=\"text-gray-600\">\n                      Get comprehensive unfollower data in under 10 seconds. Our advanced parsing algorithms ensure 100% accuracy.\n                    </p>\n                  </div>\n                </div>\n                \n                <div className=\"flex items-start space-x-4\">\n                  <div className=\"w-6 h-6 bg-green-100 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                    <CheckCircle className=\"text-green-600\" size={16} />\n                  </div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Comprehensive Analytics</h3>\n                    <p className=\"text-gray-600\">\n                      Beyond unfollowers, discover new followers, mutual connections, engagement patterns, and growth insights.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            <div className=\"relative\">\n              <div className=\"bg-gradient-to-br from-purple-600 to-pink-600 rounded-2xl p-8 text-white\">\n                <h3 className=\"text-2xl font-bold mb-6\">Track Unfollowers in 3 Steps</h3>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-8 h-8 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-sm font-bold\">1</div>\n                    <span>Request your Instagram data export</span>\n                  </div>\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-8 h-8 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-sm font-bold\">2</div>\n                    <span>Download the ZIP file when ready</span>\n                  </div>\n                  <div className=\"flex items-center space-x-4\">\n                    <div className=\"w-8 h-8 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-sm font-bold\">3</div>\n                    <span>Upload & get instant unfollower insights</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <FAQSection />\n      <Footer />\n    </div>\n  );\n}","size_bytes":10659},"client/src/pages/who-doesnt-follow-back.tsx":{"content":"import { Header } from '@/components/header';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { Shield, Users, Download, Search, BarChart3, CheckCircle, ArrowRight, AlertTriangle, Heart } from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function WhoDoesntFollowBack() {\n  const strategies = [\n    {\n      title: 'Quality Over Quantity Approach',\n      description: 'Focus on meaningful connections rather than follower counts',\n      icon: Heart,\n      tips: ['Engage with posts genuinely', 'Comment thoughtfully', 'Share valuable content', 'Build real relationships']\n    },\n    {\n      title: 'Strategic Unfollowing',\n      description: 'Carefully unfollow inactive or non-reciprocal accounts',\n      icon: Users,\n      tips: ['Identify inactive accounts', 'Unfollow gradually', 'Keep industry connections', 'Monitor engagement rates']\n    },\n    {\n      title: 'Content Optimization',\n      description: 'Create content that encourages reciprocal following',\n      icon: BarChart3,\n      tips: ['Post consistently', 'Use relevant hashtags', 'Engage with your niche', 'Collaborate with others']\n    }\n  ];\n\n  const reasons = [\n    {\n      reason: 'Different Interests',\n      description: 'Your content doesn\\'t align with their preferences',\n      solution: 'Focus on your target audience and niche content'\n    },\n    {\n      reason: 'Account Type',\n      description: 'Business accounts often follow selectively',\n      solution: 'Provide value through your content and engagement'\n    },\n    {\n      reason: 'Following Limits',\n      description: 'They may have reached their following limit',\n      solution: 'Be patient and continue providing quality content'\n    },\n    {\n      reason: 'Privacy Preferences',\n      description: 'Some users prefer smaller, curated feeds',\n      solution: 'Respect their preferences and focus elsewhere'\n    }\n  ];\n\n  const bestPractices = [\n    {\n      title: 'Regular Account Audits',\n      description: 'Review your following list monthly to identify non-reciprocal follows',\n      frequency: 'Monthly'\n    },\n    {\n      title: 'Engagement Analysis',\n      description: 'Track which accounts interact with your content regularly',\n      frequency: 'Weekly'\n    },\n    {\n      title: 'Strategic Following',\n      description: 'Only follow accounts that align with your interests or goals',\n      frequency: 'Daily'\n    },\n    {\n      title: 'Content Quality Focus',\n      description: 'Prioritize creating content that attracts genuine followers',\n      frequency: 'Daily'\n    }\n  ];\n\n  const faqs = [\n    {\n      question: 'How can I see who doesn\\'t follow me back on Instagram?',\n      answer: 'Use our Instagram unfollowers tracker tool by uploading your Instagram data export. This will show you exactly who you follow that doesn\\'t follow you back, along with detailed analytics.'\n    },\n    {\n      question: 'Should I unfollow people who don\\'t follow me back?',\n      answer: 'It depends on your goals. If you want a balanced following ratio, you might unfollow some non-reciprocal accounts. However, consider keeping accounts that provide value through their content or represent important connections.'\n    },\n    {\n      question: 'Why do some people not follow back on Instagram?',\n      answer: 'People may not follow back due to different interests, content preferences, privacy settings, or simply because they maintain a curated feed. It\\'s not necessarily personal.'\n    },\n    {\n      question: 'Is it rude not to follow someone back on Instagram?',\n      answer: 'No, it\\'s not rude. Instagram etiquette doesn\\'t require reciprocal following. People curate their feeds based on personal preferences and interests.'\n    },\n    {\n      question: 'How do I improve my follow-back rate on Instagram?',\n      answer: 'Create engaging content, use relevant hashtags, engage authentically with your community, post consistently, and ensure your profile clearly communicates your value proposition.'\n    },\n    {\n      question: 'What\\'s a good following-to-follower ratio on Instagram?',\n      answer: 'There\\'s no perfect ratio, but generally, having more followers than following suggests authority. However, engagement quality matters more than ratios for most users.'\n    }\n  ];\n\n  const relatedTopics = [\n    { title: 'How to See Who Unfollowed You', url: '/how-to-see-who-unfollowed-you', description: 'Track Instagram unfollowers safely' },\n    { title: 'Instagram Analytics', url: '/instagram-analytics', description: 'Complete Instagram insights and metrics' },\n    { title: 'Followers Insights', url: '/followers-insights', description: 'Deep analysis of your follower base' }\n  ];\n\n  return (\n    <>\n      {/* SEO Meta Tags */}\n      <title>Who Doesn't Follow Me Back on Instagram? Find Non-Reciprocal Followers (2024)</title>\n      <meta name=\"description\" content=\"Discover who doesn't follow you back on Instagram with our free tool. Learn strategies for managing non-reciprocal followers and improving engagement.\" />\n      <meta name=\"keywords\" content=\"who doesn't follow me back instagram, non reciprocal followers, instagram following ratio, unfollow tool instagram\" />\n      \n      {/* Open Graph Tags */}\n      <meta property=\"og:title\" content=\"Who Doesn't Follow Me Back on Instagram - Free Checker\" />\n      <meta property=\"og:description\" content=\"Find out who you follow that doesn't follow you back on Instagram. Free tool with detailed analytics and follower insights.\" />\n      <meta property=\"og:type\" content=\"article\" />\n      \n      {/* Schema Markup */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"Article\",\n          \"headline\": \"Who Doesn't Follow Me Back on Instagram: Complete Guide\",\n          \"description\": \"Learn how to identify and manage non-reciprocal followers on Instagram with strategic approaches and free tools.\",\n          \"author\": {\n            \"@type\": \"Organization\",\n            \"name\": \"Instagram Unfollowers Tracker\"\n          },\n          \"datePublished\": new Date().toISOString(),\n          \"mainEntityOfPage\": {\n            \"@type\": \"WebPage\",\n            \"@id\": typeof window !== 'undefined' ? window.location.href : ''\n          }\n        })}\n      </script>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        \n        {/* Breadcrumbs */}\n        <section className=\"bg-white py-4 border-b border-gray-200\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={[\n              { label: 'Home', href: '/' },\n              { label: 'Blog', href: '/blog' },\n              { label: 'Who Doesn\\'t Follow Me Back', current: true }\n            ]} />\n          </div>\n        </section>\n        \n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16 relative overflow-hidden\">\n          <div className=\"absolute inset-0\">\n            <div className=\"absolute top-20 left-10 w-32 h-32 bg-white opacity-10 rounded-full animate-float\"></div>\n            <div className=\"absolute bottom-20 right-20 w-24 h-24 bg-white opacity-10 rounded-full animate-float\" style={{animationDelay: '2s'}}></div>\n          </div>\n          \n          <div className=\"relative z-10 max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n            <Badge className=\"bg-white/20 text-white border-white/30 mb-4 px-3 py-1 text-sm\">\n              Instagram Analytics 2024\n            </Badge>\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-white mb-4 leading-tight\">\n              Who Doesn't Follow Me Back\n              <span className=\"block text-yellow-300\">on Instagram?</span>\n            </h1>\n            <p className=\"text-base sm:text-lg text-gray-100 mb-6 max-w-3xl mx-auto leading-relaxed\">\n              Discover who you follow that doesn't follow you back with our free Instagram analytics tool. \n              Get strategic insights for managing your follower relationships effectively.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-purple-600 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-all\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <Search className=\"mr-2\" size={18} />\n                Check Non-Reciprocal Followers\n              </Button>\n              <Button \n                variant=\"outline\"\n                className=\"border-2 border-white text-white hover:bg-white hover:text-purple-600 transition-all\"\n              >\n                <Download className=\"mr-2\" size={16} />\n                Learn Strategies Below\n              </Button>\n            </div>\n          </div>\n        </section>\n\n        {/* Quick Stats */}\n        <section className=\"py-12 bg-white\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-purple-600 mb-1\">500K+</div>\n                <div className=\"text-sm text-gray-600\">Users Analyzed</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-blue-600 mb-1\">Instant</div>\n                <div className=\"text-sm text-gray-600\">Results</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-green-600 mb-1\">100%</div>\n                <div className=\"text-sm text-gray-600\">Private & Secure</div>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"text-2xl font-bold text-orange-600 mb-1\">Free</div>\n                <div className=\"text-sm text-gray-600\">No Hidden Fees</div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Main Content */}\n        <section className=\"py-16 bg-gradient-to-br from-blue-50 to-purple-50\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            \n            {/* Introduction */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-4\">\n                Understanding Non-Reciprocal Instagram Followers\n              </h2>\n              <div className=\"prose max-w-none text-gray-700 leading-relaxed space-y-4\">\n                <p className=\"text-base\">\n                  Non-reciprocal followers—people you follow who don't follow you back—are a common aspect of Instagram. \n                  Understanding why this happens and how to manage these relationships strategically can help you build \n                  a more engaged and meaningful Instagram presence.\n                </p>\n                <p className=\"text-base\">\n                  This comprehensive guide covers everything you need to know about identifying non-reciprocal followers, \n                  understanding the reasons behind it, and developing strategies to optimize your Instagram following approach.\n                </p>\n              </div>\n            </div>\n\n            {/* Why People Don't Follow Back */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-8\">Why Some People Don't Follow Back</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {reasons.map((item, index) => (\n                  <Card key={index} className=\"shadow-sm\">\n                    <CardContent className=\"p-6\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">{item.reason}</h3>\n                      <p className=\"text-sm text-gray-600 mb-3\">{item.description}</p>\n                      <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3\">\n                        <p className=\"text-xs text-blue-800\">💡 <strong>Solution:</strong> {item.solution}</p>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n\n            {/* Strategic Approaches */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-8\">Strategic Approaches to Non-Reciprocal Followers</h2>\n              <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n                {strategies.map((strategy, index) => (\n                  <Card key={index} className=\"shadow-sm hover:shadow-lg transition-all\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-lg flex items-center justify-center mb-4\">\n                        <strategy.icon className=\"text-white\" size={24} />\n                      </div>\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">{strategy.title}</h3>\n                      <p className=\"text-sm text-gray-600 mb-4\">{strategy.description}</p>\n                      <ul className=\"space-y-2\">\n                        {strategy.tips.map((tip, idx) => (\n                          <li key={idx} className=\"flex items-center text-sm text-gray-700\">\n                            <CheckCircle className=\"text-green-500 mr-2\" size={12} />\n                            {tip}\n                          </li>\n                        ))}\n                      </ul>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n\n            {/* Best Practices */}\n            <div className=\"mb-16 bg-white rounded-xl p-8 shadow-sm\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Best Practices for Managing Your Following List</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                {bestPractices.map((practice, index) => (\n                  <div key={index} className=\"border border-gray-200 rounded-lg p-6\">\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <h3 className=\"text-base font-semibold text-gray-900\">{practice.title}</h3>\n                      <Badge variant=\"outline\" className=\"text-xs\">{practice.frequency}</Badge>\n                    </div>\n                    <p className=\"text-sm text-gray-600\">{practice.description}</p>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            {/* How-To Guide */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">How to Find Who Doesn't Follow You Back</h2>\n              <div className=\"bg-white rounded-xl p-8 shadow-sm\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Using Our Free Tool</h3>\n                    <div className=\"space-y-4\">\n                      <div className=\"flex items-start space-x-3\">\n                        <div className=\"w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                          <span className=\"text-white text-xs font-bold\">1</span>\n                        </div>\n                        <div>\n                          <h4 className=\"font-medium text-gray-900 mb-1\">Download Instagram Data</h4>\n                          <p className=\"text-sm text-gray-600\">Request your data export from Instagram Settings</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-start space-x-3\">\n                        <div className=\"w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                          <span className=\"text-white text-xs font-bold\">2</span>\n                        </div>\n                        <div>\n                          <h4 className=\"font-medium text-gray-900 mb-1\">Upload Securely</h4>\n                          <p className=\"text-sm text-gray-600\">Upload your ZIP file to our secure analyzer</p>\n                        </div>\n                      </div>\n                      <div className=\"flex items-start space-x-3\">\n                        <div className=\"w-6 h-6 bg-purple-500 rounded-full flex items-center justify-center flex-shrink-0 mt-0.5\">\n                          <span className=\"text-white text-xs font-bold\">3</span>\n                        </div>\n                        <div>\n                          <h4 className=\"font-medium text-gray-900 mb-1\">Get Detailed Results</h4>\n                          <p className=\"text-sm text-gray-600\">See complete list of non-reciprocal followers</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"mt-6\">\n                      <Button \n                        className=\"w-full bg-purple-600 hover:bg-purple-700\"\n                        onClick={() => {\n                          const element = document.getElementById('upload');\n                          if (element) {\n                            element.scrollIntoView({ behavior: 'smooth' });\n                          }\n                        }}\n                      >\n                        <Search className=\"mr-2\" size={16} />\n                        Start Analysis Now\n                      </Button>\n                    </div>\n                  </div>\n                  \n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">What You'll Discover</h3>\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center space-x-3\">\n                        <CheckCircle className=\"text-green-500\" size={16} />\n                        <span className=\"text-sm text-gray-700\">Complete list of non-reciprocal follows</span>\n                      </div>\n                      <div className=\"flex items-center space-x-3\">\n                        <CheckCircle className=\"text-green-500\" size={16} />\n                        <span className=\"text-sm text-gray-700\">Account types and engagement levels</span>\n                      </div>\n                      <div className=\"flex items-center space-x-3\">\n                        <CheckCircle className=\"text-green-500\" size={16} />\n                        <span className=\"text-sm text-gray-700\">Following patterns and trends</span>\n                      </div>\n                      <div className=\"flex items-center space-x-3\">\n                        <CheckCircle className=\"text-green-500\" size={16} />\n                        <span className=\"text-sm text-gray-700\">Mutual follower connections</span>\n                      </div>\n                      <div className=\"flex items-center space-x-3\">\n                        <CheckCircle className=\"text-green-500\" size={16} />\n                        <span className=\"text-sm text-gray-700\">Recommendations for optimization</span>\n                      </div>\n                    </div>\n                    \n                    <div className=\"mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n                      <div className=\"flex items-start space-x-2\">\n                        <AlertTriangle className=\"text-yellow-600 mt-0.5\" size={16} />\n                        <div>\n                          <h4 className=\"font-medium text-yellow-800 mb-1\">Privacy Notice</h4>\n                          <p className=\"text-xs text-yellow-700\">\n                            Your data is processed locally and never stored on our servers. Complete privacy guaranteed.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* CTA Section */}\n            <div className=\"text-center bg-gradient-to-r from-purple-600 to-pink-600 rounded-2xl p-8 text-white mb-16\">\n              <h2 className=\"text-2xl font-bold mb-4\">Ready to Analyze Your Following?</h2>\n              <p className=\"text-base mb-6 opacity-90\">\n                Discover who doesn't follow you back and optimize your Instagram strategy with our free tool\n              </p>\n              <Button \n                size=\"lg\"\n                className=\"bg-white text-purple-600 px-8 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-all\"\n                onClick={() => {\n                  const element = document.getElementById('upload');\n                  if (element) {\n                    element.scrollIntoView({ behavior: 'smooth' });\n                  }\n                }}\n              >\n                <Search className=\"mr-2\" size={18} />\n                Check Non-Reciprocal Followers - Free\n              </Button>\n            </div>\n\n            {/* FAQ Section */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-8\">Frequently Asked Questions</h2>\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                {faqs.map((faq, index) => (\n                  <Card key={index} className=\"shadow-sm\">\n                    <CardContent className=\"p-6\">\n                      <h3 className=\"text-base font-semibold text-gray-900 mb-3\">{faq.question}</h3>\n                      <p className=\"text-sm text-gray-600 leading-relaxed\">{faq.answer}</p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </div>\n\n            {/* Related Topics */}\n            <div className=\"mb-16\">\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-6\">Related Instagram Analytics Tools</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                {relatedTopics.map((topic, index) => (\n                  <Link key={index} href={topic.url}>\n                    <Card className=\"shadow-sm hover:shadow-lg transition-all hover:-translate-y-1 cursor-pointer\">\n                      <CardContent className=\"p-6\">\n                        <h3 className=\"text-base font-semibold text-gray-900 mb-2\">{topic.title}</h3>\n                        <p className=\"text-sm text-gray-600 mb-3\">{topic.description}</p>\n                        <div className=\"flex items-center text-purple-600 text-sm font-medium\">\n                          Explore Tool <ArrowRight size={14} className=\"ml-1\" />\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </Link>\n                ))}\n              </div>\n            </div>\n\n          </div>\n        </section>\n\n        <Footer />\n      </div>\n    </>\n  );\n}","size_bytes":23270},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/faq-structured-data.tsx":{"content":"import { useEffect } from 'react';\nimport { mockFAQs } from '@/lib/mock-data';\n\n/**\n * FAQ Structured Data Component\n * Adds FAQPage schema markup to improve search result rich snippets\n */\nexport const FAQStructuredData = () => {\n  useEffect(() => {\n    // Generate FAQ structured data\n    const faqSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"FAQPage\",\n      \"mainEntity\": mockFAQs.map(faq => ({\n        \"@type\": \"Question\",\n        \"name\": faq.question,\n        \"acceptedAnswer\": {\n          \"@type\": \"Answer\",\n          \"text\": faq.answer\n        }\n      }))\n    };\n\n    // Add FAQ schema to head\n    const script = document.createElement('script');\n    script.type = 'application/ld+json';\n    script.setAttribute('data-faq-schema', 'true');\n    script.textContent = JSON.stringify(faqSchema, null, 2);\n    document.head.appendChild(script);\n\n    // Cleanup function\n    return () => {\n      const existingScript = document.querySelector('script[data-faq-schema=\"true\"]');\n      if (existingScript) {\n        existingScript.remove();\n      }\n    };\n  }, []);\n\n  return null; // This component only manages structured data\n};\n\nexport default FAQStructuredData;","size_bytes":1186},"client/src/components/howto-structured-data.tsx":{"content":"import { useEffect } from 'react';\n\ninterface HowToStep {\n  name: string;\n  text: string;\n  image?: string;\n}\n\ninterface HowToStructuredDataProps {\n  name: string;\n  description: string;\n  steps: HowToStep[];\n  totalTime?: string;\n  supply?: string[];\n  tool?: string[];\n}\n\n/**\n * HowTo Structured Data Component\n * Adds HowTo schema markup for step-by-step guides\n */\nexport const HowToStructuredData = ({\n  name,\n  description,\n  steps,\n  totalTime = \"PT10M\",\n  supply = [],\n  tool = []\n}: HowToStructuredDataProps) => {\n  useEffect(() => {\n    // Generate HowTo structured data\n    const howToSchema = {\n      \"@context\": \"https://schema.org\",\n      \"@type\": \"HowTo\",\n      \"name\": name,\n      \"description\": description,\n      \"totalTime\": totalTime,\n      \"supply\": supply,\n      \"tool\": tool,\n      \"step\": steps.map((step, index) => ({\n        \"@type\": \"HowToStep\",\n        \"name\": step.name,\n        \"text\": step.text,\n        \"position\": index + 1,\n        ...(step.image && {\n          \"image\": {\n            \"@type\": \"ImageObject\",\n            \"url\": step.image\n          }\n        })\n      }))\n    };\n\n    // Add HowTo schema to head\n    const script = document.createElement('script');\n    script.type = 'application/ld+json';\n    script.setAttribute('data-howto-schema', 'true');\n    script.textContent = JSON.stringify(howToSchema, null, 2);\n    document.head.appendChild(script);\n\n    // Cleanup function\n    return () => {\n      const existingScript = document.querySelector('script[data-howto-schema=\"true\"]');\n      if (existingScript) {\n        existingScript.remove();\n      }\n    };\n  }, [name, description, steps, totalTime, supply, tool]);\n\n  return null; // This component only manages structured data\n};\n\nexport default HowToStructuredData;","size_bytes":1766},"client/src/components/lazy-loader.tsx":{"content":"import { Suspense, lazy, useState, useEffect, useRef, ComponentType } from 'react';\n\n// Loading component for better UX\nconst LoadingSpinner = () => (\n  <div className=\"flex items-center justify-center min-h-[200px]\">\n    <div className=\"loading-spinner\"></div>\n  </div>\n);\n\n// Higher-order component for lazy loading with error boundary\nexport const withLazyLoading = <T extends object>(\n  importFunc: () => Promise<{ default: ComponentType<T> }>,\n  fallback: ComponentType = LoadingSpinner\n) => {\n  const LazyComponent = lazy(importFunc);\n  const FallbackComponent = fallback;\n  \n  return (props: T) => (\n    <Suspense fallback={<FallbackComponent />}>\n      <LazyComponent {...props} />\n    </Suspense>\n  );\n};\n\n// Intersection Observer hook for lazy loading content\nexport const useIntersectionObserver = (\n  targetRef: React.RefObject<Element>,\n  threshold = 0.1\n) => {\n  const [isIntersecting, setIsIntersecting] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setIsIntersecting(entry.isIntersecting),\n      { threshold }\n    );\n\n    if (targetRef.current) {\n      observer.observe(targetRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [targetRef, threshold]);\n\n  return isIntersecting;\n};\n\n// Lazy image component with loading states\nexport const LazyImage = ({ \n  src, \n  alt, \n  className = \"\",\n  ...props \n}: React.ImgHTMLAttributes<HTMLImageElement>) => {\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const isVisible = useIntersectionObserver(imgRef);\n\n  return (\n    <div ref={imgRef} className={`relative ${className}`}>\n      {isVisible && (\n        <img\n          src={src}\n          alt={alt}\n          onLoad={() => setLoaded(true)}\n          onError={() => setError(true)}\n          className={`transition-opacity duration-300 ${\n            loaded ? 'opacity-100' : 'opacity-0'\n          }`}\n          loading=\"lazy\"\n          decoding=\"async\"\n          {...props}\n        />\n      )}\n      {!loaded && !error && isVisible && (\n        <div className=\"absolute inset-0 bg-gray-200 animate-pulse\" />\n      )}\n    </div>\n  );\n};","size_bytes":2219},"client/src/components/mobile-optimization.tsx":{"content":"import { useEffect } from 'react';\n\n// Mobile optimization utilities\nexport const MobileOptimizations = () => {\n  useEffect(() => {\n    // Prevent zoom on input focus for iOS\n    const addInputEventListeners = () => {\n      const inputs = document.querySelectorAll('input, select, textarea');\n      inputs.forEach(input => {\n        input.addEventListener('focus', () => {\n          const viewport = document.querySelector('meta[name=viewport]');\n          if (viewport) {\n            viewport.setAttribute('content', \n              'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no'\n            );\n          }\n        });\n        \n        input.addEventListener('blur', () => {\n          const viewport = document.querySelector('meta[name=viewport]');\n          if (viewport) {\n            viewport.setAttribute('content', \n              'width=device-width, initial-scale=1.0, viewport-fit=cover'\n            );\n          }\n        });\n      });\n    };\n\n    // Add passive event listeners for better performance\n    const addPassiveListeners = () => {\n      document.addEventListener('touchstart', () => {}, { passive: true });\n      document.addEventListener('touchmove', () => {}, { passive: true });\n      document.addEventListener('wheel', () => {}, { passive: true });\n    };\n\n    // Initialize optimizations\n    addInputEventListeners();\n    addPassiveListeners();\n\n    // Browser detection and polyfills\n    const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n    const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    \n    if (isIOS) {\n      document.body.classList.add('ios-device');\n    }\n    \n    if (isSafari) {\n      document.body.classList.add('safari-browser');\n    }\n\n    // Add CSS custom property support for older browsers\n    if (!CSS.supports('color', 'var(--fake-var)')) {\n      document.body.classList.add('no-css-vars');\n    }\n\n  }, []);\n\n  return null; // This component doesn't render anything\n};\n\n// Cross-browser compatibility utilities\nexport const CrossBrowserUtils = {\n  // Smooth scroll polyfill for older browsers\n  smoothScrollTo: (element: Element) => {\n    if (element.scrollIntoView) {\n      element.scrollIntoView({ \n        behavior: 'smooth', \n        block: 'start',\n        inline: 'nearest'\n      });\n    } else {\n      // Fallback for older browsers\n      element.scrollIntoView();\n    }\n  },\n\n  // Intersection Observer polyfill check\n  hasIntersectionObserver: () => {\n    return 'IntersectionObserver' in window;\n  },\n\n  // Web Vitals optimization\n  optimizeForWebVitals: () => {\n    // Preload critical resources\n    const preloadLink = document.createElement('link');\n    preloadLink.rel = 'preload';\n    preloadLink.as = 'style';\n    preloadLink.href = '/src/index.css';\n    document.head.appendChild(preloadLink);\n\n    // Add resource hints\n    const dnsPreconnect = document.createElement('link');\n    dnsPreconnect.rel = 'dns-prefetch';\n    dnsPreconnect.href = '//fonts.googleapis.com';\n    document.head.appendChild(dnsPreconnect);\n  }\n};\n\n// Performance monitoring hook\nexport const usePerformanceMonitoring = () => {\n  useEffect(() => {\n    // Monitor Core Web Vitals\n    if ('PerformanceObserver' in window) {\n      const observer = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.entryType === 'navigation') {\n            const navEntry = entry as PerformanceNavigationTiming;\n            console.log('Page Load Time:', navEntry.loadEventEnd - navEntry.fetchStart);\n          }\n        }\n      });\n      \n      observer.observe({ entryTypes: ['navigation', 'paint'] });\n    }\n\n    // Monitor long tasks\n    if ('PerformanceObserver' in window) {\n      const longTaskObserver = new PerformanceObserver((list) => {\n        for (const entry of list.getEntries()) {\n          if (entry.duration > 50) {\n            console.warn('Long task detected:', entry.duration);\n          }\n        }\n      });\n      \n      try {\n        longTaskObserver.observe({ entryTypes: ['longtask'] });\n      } catch (e) {\n        // Longtask API not supported\n      }\n    }\n  }, []);\n};","size_bytes":4141},"client/src/components/performance-wrapper.tsx":{"content":"import { memo, lazy, Suspense } from 'react';\n\n// Performance wrapper component that memoizes children\nexport const PerformanceWrapper = memo(({ \n  children,\n  className = \"\",\n  ...props \n}: { \n  children: React.ReactNode;\n  className?: string;\n  [key: string]: any;\n}) => {\n  return (\n    <div className={`${className} gpu-accelerated`} {...props}>\n      {children}\n    </div>\n  );\n});\n\nPerformanceWrapper.displayName = 'PerformanceWrapper';\n\n// Lightweight loading component for better perceived performance\nexport const LoadingSkeleton = memo(() => (\n  <div className=\"space-y-4 animate-pulse\">\n    <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n    <div className=\"h-4 bg-gray-200 rounded w-1/2\"></div>\n    <div className=\"h-4 bg-gray-200 rounded w-5/6\"></div>\n  </div>\n));\n\nLoadingSkeleton.displayName = 'LoadingSkeleton';\n\n// Critical path component wrapper for above-the-fold content\nexport const CriticalContent = memo(({ children }: { children: React.ReactNode }) => {\n  return (\n    <div className=\"will-change-transform\">\n      {children}\n    </div>\n  );\n});\n\nCriticalContent.displayName = 'CriticalContent';\n\n// Deferred content wrapper for below-the-fold content\nexport const DeferredContent = memo(({ \n  children, \n  fallback = <LoadingSkeleton /> \n}: { \n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n}) => {\n  return (\n    <Suspense fallback={fallback}>\n      {children}\n    </Suspense>\n  );\n});\n\nDeferredContent.displayName = 'DeferredContent';","size_bytes":1480},"client/src/pages/instagram-follower-vs-unfollower-tracker.tsx":{"content":"import { Header } from '@/components/header';\nimport { SEOHead } from '@/components/seo-head';\nimport { Footer } from '@/components/footer';\nimport { Breadcrumbs } from '@/components/breadcrumbs';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Button } from '@/components/ui/button';\nimport { \n  Users, \n  UserPlus, \n  UserMinus, \n  BarChart3, \n  Shield, \n  Zap, \n  CheckCircle, \n  AlertTriangle,\n  Smartphone,\n  Monitor,\n  Clock,\n  Target,\n  TrendingUp,\n  Eye,\n  Lock,\n  Download\n} from 'lucide-react';\nimport { Link } from 'wouter';\n\nexport default function InstagramFollowerVsUnfollowerTracker() {\n  const breadcrumbItems = [\n    { label: 'Home', href: '/' },\n    { label: 'Blog', href: '/blog' },\n    { label: 'Follower vs Unfollower Tracker', href: '/instagram-follower-vs-unfollower-tracker' },\n  ];\n\n  const comparisonFeatures = [\n    {\n      category: 'Tracking Capability',\n      followerTracker: {\n        title: 'New Followers Only',\n        description: 'Monitors people who start following your account',\n        icon: UserPlus,\n        color: 'text-green-600',\n        rating: 3\n      },\n      unfollowerTracker: {\n        title: 'Lost Followers Detection',\n        description: 'Identifies users who stopped following you',\n        icon: UserMinus,\n        color: 'text-red-600',\n        rating: 5\n      }\n    },\n    {\n      category: 'Analytics Depth',\n      followerTracker: {\n        title: 'Growth Metrics',\n        description: 'Basic follower count increases and growth rate',\n        icon: TrendingUp,\n        color: 'text-blue-600',\n        rating: 3\n      },\n      unfollowerTracker: {\n        title: 'Comprehensive Insights',\n        description: 'Detailed loss patterns, timing, and engagement analysis',\n        icon: BarChart3,\n        color: 'text-purple-600',\n        rating: 5\n      }\n    },\n    {\n      category: 'Actionable Intelligence',\n      followerTracker: {\n        title: 'Limited Actionability',\n        description: 'Shows who to potentially follow back',\n        icon: Eye,\n        color: 'text-gray-600',\n        rating: 2\n      },\n      unfollowerTracker: {\n        title: 'Strategic Insights',\n        description: 'Reveals content performance and audience retention',\n        icon: Target,\n        color: 'text-orange-600',\n        rating: 5\n      }\n    }\n  ];\n\n  const trackerTypes = [\n    {\n      type: 'Basic Follower Tracker',\n      description: 'Monitors new followers and basic growth metrics',\n      features: [\n        'New follower notifications',\n        'Follower count history',\n        'Basic growth rate calculation',\n        'Simple follower list'\n      ],\n      pros: [\n        'Easy to understand',\n        'Positive focus on growth',\n        'Low complexity'\n      ],\n      cons: [\n        'Limited insights',\n        'Misses important data',\n        'No retention analysis'\n      ],\n      bestFor: 'New Instagram users focused on growth'\n    },\n    {\n      type: 'Advanced Unfollower Tracker',\n      description: 'Comprehensive analysis of follower loss and engagement patterns',\n      features: [\n        'Unfollower identification',\n        'Ghost follower detection',\n        'Inactive follower analysis',\n        'Engagement rate correlation',\n        'Content performance insights',\n        'Timing pattern analysis'\n      ],\n      pros: [\n        'Comprehensive insights',\n        'Actionable data',\n        'Retention optimization',\n        'Content strategy guidance'\n      ],\n      cons: [\n        'More complex data',\n        'Requires interpretation',\n        'Can be overwhelming initially'\n      ],\n      bestFor: 'Serious content creators and businesses'\n    },\n    {\n      type: 'Hybrid Tracking Solution',\n      description: 'Combined follower and unfollower tracking for complete visibility',\n      features: [\n        'Full follower lifecycle tracking',\n        'Comprehensive analytics dashboard',\n        'Audience quality assessment',\n        'Growth and retention metrics',\n        'Comparative analysis tools'\n      ],\n      pros: [\n        'Complete picture',\n        'Strategic insights',\n        'Optimization opportunities'\n      ],\n      cons: [\n        'Information overload',\n        'Higher learning curve'\n      ],\n      bestFor: 'Professional Instagram marketers'\n    }\n  ];\n\n  const useCases = [\n    {\n      scenario: 'Content Creator Optimization',\n      challenge: 'Understanding audience engagement and content performance',\n      solution: 'Unfollower tracking reveals which content types cause follower loss',\n      outcome: 'Improved content strategy and higher retention rates'\n    },\n    {\n      scenario: 'Business Growth Analysis',\n      challenge: 'Measuring Instagram marketing effectiveness',\n      solution: 'Combined tracking shows acquisition vs retention performance',\n      outcome: 'Better ROI on Instagram marketing investments'\n    },\n    {\n      scenario: 'Influencer Partnership Evaluation',\n      challenge: 'Assessing follower quality and engagement authenticity',\n      solution: 'Ghost and inactive follower detection ensures genuine audience',\n      outcome: 'More effective influencer collaborations'\n    },\n    {\n      scenario: 'Personal Brand Development',\n      challenge: 'Building authentic and engaged follower base',\n      solution: 'Unfollower patterns guide personal branding decisions',\n      outcome: 'Stronger personal brand with loyal audience'\n    }\n  ];\n\n  const toolRecommendations = [\n    {\n      tool: 'Instagram Data Export Tracker',\n      category: 'Privacy-First Solution',\n      description: 'Use Instagram\\'s official data export for comprehensive tracking',\n      features: ['Complete privacy', 'No login required', 'Comprehensive data'],\n      security: 'Highest',\n      accuracy: 'Highest',\n      recommended: true\n    },\n    {\n      tool: 'Third-Party Apps',\n      category: 'Convenience Solution',\n      description: 'Mobile apps with real-time tracking capabilities',\n      features: ['Real-time updates', 'Mobile notifications', 'User-friendly interface'],\n      security: 'Medium',\n      accuracy: 'Medium',\n      recommended: false,\n      warning: 'Requires Instagram credentials - security risk'\n    },\n    {\n      tool: 'Manual Tracking',\n      category: 'Traditional Method',\n      description: 'Manually monitoring follower lists and changes',\n      features: ['Complete control', 'No tools required', '100% free'],\n      security: 'Highest',\n      accuracy: 'Low',\n      recommended: false,\n      warning: 'Time-intensive and impractical for larger accounts'\n    }\n  ];\n\n  const faqs = [\n    {\n      question: 'What is the difference between follower and unfollower tracking?',\n      answer: 'Follower tracking monitors new followers and growth metrics, while unfollower tracking identifies who stopped following you and analyzes retention patterns. Unfollower tracking provides more actionable insights for content and engagement strategy optimization.'\n    },\n    {\n      question: 'Which type of Instagram tracker is more valuable for content creators?',\n      answer: 'Unfollower tracking is generally more valuable as it reveals content performance insights, audience retention patterns, and optimization opportunities. Understanding why followers leave is often more actionable than simply knowing who follows you.'\n    },\n    {\n      question: 'Can I track both followers and unfollowers simultaneously?',\n      answer: 'Yes, hybrid tracking solutions provide comprehensive follower lifecycle analysis. Using Instagram\\'s data export method gives you complete follower and unfollower history without compromising account security.'\n    },\n    {\n      question: 'How often should I check my unfollower analytics?',\n      answer: 'Weekly checking is optimal for most users. Daily checking can be overwhelming and may not show meaningful patterns, while monthly checking might miss important trends. Weekly analysis allows for timely content strategy adjustments.'\n    },\n    {\n      question: 'Do unfollower tracking tools affect my Instagram account security?',\n      answer: 'Tools requiring your Instagram login credentials pose security risks and may violate terms of service. Safe alternatives use Instagram\\'s official data export feature, ensuring complete account security while providing comprehensive tracking insights.'\n    },\n    {\n      question: 'What metrics should I focus on in unfollower analysis?',\n      answer: 'Key metrics include unfollower rate, timing patterns, content correlation, engagement drops, and ghost follower percentage. These metrics help identify content optimization opportunities and audience quality issues.'\n    }\n  ];\n\n  return (\n    <>\n      <SEOHead />\n      {/* Enhanced SEO Meta Tags */}\n      <title>Instagram Follower vs Unfollower Tracker: Complete Comparison Guide 2024</title>\n      <meta name=\"description\" content=\"Discover the key differences between Instagram follower and unfollower trackers. Learn which tracking method delivers better insights for content strategy and audience growth.\" />\n      <meta name=\"keywords\" content=\"instagram follower tracker, instagram unfollower tracker, follower vs unfollower tracking, instagram analytics, social media tracking tools\" />\n      \n      {/* Open Graph Tags for High CTR */}\n      <meta property=\"og:title\" content=\"Instagram Follower vs Unfollower Tracker: Which Delivers Better Insights?\" />\n      <meta property=\"og:description\" content=\"Compare Instagram tracking methods and discover which approach gives you actionable insights for real audience growth and content optimization.\" />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:image\" content=\"https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=630\" />\n      \n      {/* Article Schema Markup */}\n      <script type=\"application/ld+json\">\n        {JSON.stringify({\n          \"@context\": \"https://schema.org\",\n          \"@type\": \"Article\",\n          \"headline\": \"Instagram Follower vs Unfollower Tracker: Complete Comparison Guide 2024\",\n          \"description\": \"Comprehensive comparison of Instagram follower and unfollower tracking methods with actionable insights for content creators and businesses.\",\n          \"author\": {\n            \"@type\": \"Organization\",\n            \"name\": \"Instagram Unfollowers Tracker\"\n          },\n          \"publisher\": {\n            \"@type\": \"Organization\",\n            \"name\": \"Instagram Unfollowers Tracker\",\n            \"logo\": \"https://instaunfollowerstracker.com/favicon.svg\"\n          },\n          \"datePublished\": \"2025-01-26\",\n          \"dateModified\": \"2025-01-26\",\n          \"mainEntityOfPage\": \"https://instaunfollowerstracker.com/instagram-follower-vs-unfollower-tracker\",\n          \"image\": \"https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&h=630\",\n          \"articleSection\": \"Instagram Analytics\",\n          \"keywords\": [\"Instagram tracking\", \"follower analysis\", \"unfollower tracking\", \"social media analytics\"],\n          \"wordCount\": 2500\n        })}\n      </script>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        <Header />\n        \n        {/* Hero Section */}\n        <section className=\"bg-gradient-to-br from-purple-600 via-pink-600 to-orange-500 py-16\">\n          <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <Breadcrumbs items={breadcrumbItems} className=\"mb-8 text-white/80\" />\n            \n            <div className=\"text-center\">\n              <Badge className=\"bg-white/20 text-white hover:bg-white/30 mb-4 px-4 py-2\">\n                📊 Complete Comparison Guide\n              </Badge>\n              <h1 className=\"text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-6\">\n                Instagram Follower vs Unfollower Tracker\n              </h1>\n              <p className=\"text-lg sm:text-xl text-gray-100 mb-8 max-w-4xl mx-auto\">\n                Discover the crucial differences between tracking new followers and monitoring unfollowers. \n                Learn which approach delivers actionable insights for genuine audience growth and content optimization.\n              </p>\n              \n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button \n                  size=\"lg\"\n                  className=\"bg-white text-purple-600 hover:bg-gray-100 font-bold\"\n                  onClick={() => document.getElementById('comparison')?.scrollIntoView({ behavior: 'smooth' })}\n                >\n                  <BarChart3 className=\"mr-2\" size={20} />\n                  View Detailed Comparison\n                </Button>\n                <Link href=\"/unfollowers-tracker\">\n                  <Button \n                    size=\"lg\" \n                    variant=\"outline\"\n                    className=\"border-white text-white hover:bg-white/10\"\n                  >\n                    <Zap className=\"mr-2\" size={20} />\n                    Try Our Tracker Free\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Article Content */}\n        <main className=\"py-12\">\n          <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n            \n            {/* Introduction */}\n            <Card className=\"mb-12\">\n              <CardContent className=\"pt-8\">\n                <div className=\"flex items-center mb-6\">\n                  <div className=\"w-12 h-12 bg-gradient-to-r from-purple-600 to-pink-600 rounded-lg flex items-center justify-center mr-4\">\n                    <Users className=\"text-white\" size={24} />\n                  </div>\n                  <div>\n                    <h2 className=\"text-2xl font-bold text-gray-900\">Understanding Instagram Tracking Methods</h2>\n                    <p className=\"text-gray-600\">The fundamental difference between growth and retention analytics</p>\n                  </div>\n                </div>\n                \n                <div className=\"prose max-w-none\">\n                  <p className=\"text-lg text-gray-700 mb-6\">\n                    In the evolving landscape of Instagram analytics, content creators and businesses face a critical decision: \n                    should they focus on tracking new followers or monitoring unfollowers? This comprehensive analysis reveals \n                    why unfollower tracking provides significantly more actionable insights for sustainable audience growth.\n                  </p>\n                  \n                  <img \n                    src=\"https://images.unsplash.com/photo-1611262588024-d12430b98920?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=400\" \n                    alt=\"Instagram analytics dashboard showing follower and unfollower tracking metrics comparison\" \n                    className=\"w-full rounded-lg mb-8 shadow-lg\"\n                  />\n                  \n                  <p className=\"text-gray-700 mb-4\">\n                    Traditional follower tracking focuses on acquisition metrics—who's following you and when. While this \n                    provides a surface-level view of growth, it misses the crucial retention component that determines \n                    long-term success. Unfollower tracking, conversely, reveals the quality of your content strategy \n                    and audience engagement patterns.\n                  </p>\n                  \n                  <p className=\"text-gray-700\">\n                    Modern Instagram success requires understanding both acquisition and retention. However, if you must \n                    choose one tracking method, unfollower analysis delivers superior strategic insights for content \n                    optimization and genuine audience development.\n                  </p>\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Detailed Comparison */}\n            <section id=\"comparison\" className=\"mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">\n                Comprehensive Feature Comparison\n              </h2>\n              \n              <div className=\"space-y-8\">\n                {comparisonFeatures.map((feature, index) => (\n                  <Card key={index}>\n                    <CardContent className=\"pt-6\">\n                      <h3 className=\"text-xl font-bold text-gray-900 mb-6 text-center\">\n                        {feature.category}\n                      </h3>\n                      \n                      <div className=\"grid md:grid-cols-2 gap-6\">\n                        {/* Follower Tracker */}\n                        <div className=\"border rounded-lg p-6 bg-gray-50\">\n                          <div className=\"flex items-center mb-4\">\n                            <feature.followerTracker.icon \n                              className={`${feature.followerTracker.color} mr-3`} \n                              size={24} \n                            />\n                            <h4 className=\"text-lg font-semibold text-gray-900\">\n                              Follower Tracker\n                            </h4>\n                          </div>\n                          <h5 className=\"font-semibold text-gray-800 mb-2\">\n                            {feature.followerTracker.title}\n                          </h5>\n                          <p className=\"text-gray-600 mb-4\">\n                            {feature.followerTracker.description}\n                          </p>\n                          <div className=\"flex items-center\">\n                            <span className=\"text-sm text-gray-500 mr-2\">Effectiveness:</span>\n                            {[...Array(5)].map((_, i) => (\n                              <div \n                                key={i} \n                                className={`w-4 h-4 rounded-full mr-1 ${\n                                  i < feature.followerTracker.rating ? 'bg-yellow-400' : 'bg-gray-200'\n                                }`}\n                              />\n                            ))}\n                          </div>\n                        </div>\n                        \n                        {/* Unfollower Tracker */}\n                        <div className=\"border rounded-lg p-6 bg-gradient-to-br from-purple-50 to-pink-50 border-purple-200\">\n                          <div className=\"flex items-center mb-4\">\n                            <feature.unfollowerTracker.icon \n                              className={`${feature.unfollowerTracker.color} mr-3`} \n                              size={24} \n                            />\n                            <h4 className=\"text-lg font-semibold text-gray-900\">\n                              Unfollower Tracker\n                            </h4>\n                            <Badge className=\"ml-auto bg-purple-100 text-purple-800\">\n                              Recommended\n                            </Badge>\n                          </div>\n                          <h5 className=\"font-semibold text-gray-800 mb-2\">\n                            {feature.unfollowerTracker.title}\n                          </h5>\n                          <p className=\"text-gray-600 mb-4\">\n                            {feature.unfollowerTracker.description}\n                          </p>\n                          <div className=\"flex items-center\">\n                            <span className=\"text-sm text-gray-500 mr-2\">Effectiveness:</span>\n                            {[...Array(5)].map((_, i) => (\n                              <div \n                                key={i} \n                                className={`w-4 h-4 rounded-full mr-1 ${\n                                  i < feature.unfollowerTracker.rating ? 'bg-yellow-400' : 'bg-gray-200'\n                                }`}\n                              />\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            {/* Tracker Types Analysis */}\n            <section className=\"mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">\n                Instagram Tracker Types: In-Depth Analysis\n              </h2>\n              \n              <div className=\"grid gap-8\">\n                {trackerTypes.map((tracker, index) => (\n                  <Card key={index} className={index === 1 ? 'ring-2 ring-purple-200' : ''}>\n                    <CardContent className=\"pt-6\">\n                      <div className=\"flex items-center justify-between mb-6\">\n                        <h3 className=\"text-xl font-bold text-gray-900\">\n                          {tracker.type}\n                        </h3>\n                        {index === 1 && (\n                          <Badge className=\"bg-purple-100 text-purple-800\">\n                            Most Valuable\n                          </Badge>\n                        )}\n                      </div>\n                      \n                      <p className=\"text-gray-600 mb-6\">\n                        {tracker.description}\n                      </p>\n                      \n                      <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\n                        <div>\n                          <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                            <CheckCircle className=\"text-green-600 mr-2\" size={18} />\n                            Key Features\n                          </h4>\n                          <ul className=\"space-y-2\">\n                            {tracker.features.map((feature, i) => (\n                              <li key={i} className=\"text-sm text-gray-600 flex items-center\">\n                                <div className=\"w-2 h-2 bg-blue-400 rounded-full mr-3\" />\n                                {feature}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                            <CheckCircle className=\"text-green-600 mr-2\" size={18} />\n                            Advantages\n                          </h4>\n                          <ul className=\"space-y-2\">\n                            {tracker.pros.map((pro, i) => (\n                              <li key={i} className=\"text-sm text-green-700 flex items-center\">\n                                <div className=\"w-2 h-2 bg-green-500 rounded-full mr-3\" />\n                                {pro}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                            <AlertTriangle className=\"text-orange-600 mr-2\" size={18} />\n                            Limitations\n                          </h4>\n                          <ul className=\"space-y-2\">\n                            {tracker.cons.map((con, i) => (\n                              <li key={i} className=\"text-sm text-orange-700 flex items-center\">\n                                <div className=\"w-2 h-2 bg-orange-500 rounded-full mr-3\" />\n                                {con}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"font-semibold text-gray-900 mb-3 flex items-center\">\n                            <Target className=\"text-purple-600 mr-2\" size={18} />\n                            Best For\n                          </h4>\n                          <p className=\"text-sm text-gray-600\">\n                            {tracker.bestFor}\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            {/* Real-World Use Cases */}\n            <section className=\"mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">\n                Strategic Use Cases: When Each Tracker Excels\n              </h2>\n              \n              <div className=\"grid md:grid-cols-2 gap-6\">\n                {useCases.map((useCase, index) => (\n                  <Card key={index}>\n                    <CardContent className=\"pt-6\">\n                      <h3 className=\"text-lg font-bold text-gray-900 mb-4\">\n                        {useCase.scenario}\n                      </h3>\n                      \n                      <div className=\"space-y-4\">\n                        <div>\n                          <h4 className=\"font-semibold text-red-700 mb-2\">Challenge:</h4>\n                          <p className=\"text-gray-600 text-sm\">\n                            {useCase.challenge}\n                          </p>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"font-semibold text-blue-700 mb-2\">Solution:</h4>\n                          <p className=\"text-gray-600 text-sm\">\n                            {useCase.solution}\n                          </p>\n                        </div>\n                        \n                        <div>\n                          <h4 className=\"font-semibold text-green-700 mb-2\">Outcome:</h4>\n                          <p className=\"text-gray-600 text-sm\">\n                            {useCase.outcome}\n                          </p>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            {/* Tool Recommendations */}\n            <section className=\"mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">\n                Recommended Instagram Tracking Tools\n              </h2>\n              \n              <div className=\"space-y-6\">\n                {toolRecommendations.map((tool, index) => (\n                  <Card key={index} className={tool.recommended ? 'ring-2 ring-green-200 bg-green-50' : ''}>\n                    <CardContent className=\"pt-6\">\n                      <div className=\"flex items-center justify-between mb-4\">\n                        <div>\n                          <h3 className=\"text-xl font-bold text-gray-900\">\n                            {tool.tool}\n                          </h3>\n                          <p className=\"text-gray-600\">\n                            {tool.category}\n                          </p>\n                        </div>\n                        {tool.recommended && (\n                          <Badge className=\"bg-green-100 text-green-800\">\n                            <Shield className=\"mr-1\" size={14} />\n                            Recommended\n                          </Badge>\n                        )}\n                        {tool.warning && (\n                          <Badge className=\"bg-red-100 text-red-800\">\n                            <AlertTriangle className=\"mr-1\" size={14} />\n                            Security Risk\n                          </Badge>\n                        )}\n                      </div>\n                      \n                      <p className=\"text-gray-700 mb-4\">\n                        {tool.description}\n                      </p>\n                      \n                      <div className=\"grid md:grid-cols-2 gap-6\">\n                        <div>\n                          <h4 className=\"font-semibold text-gray-900 mb-3\">Features:</h4>\n                          <ul className=\"space-y-1\">\n                            {tool.features.map((feature, i) => (\n                              <li key={i} className=\"text-sm text-gray-600 flex items-center\">\n                                <CheckCircle className=\"text-green-500 mr-2\" size={14} />\n                                {feature}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                        \n                        <div>\n                          <div className=\"flex justify-between items-center mb-2\">\n                            <span className=\"text-sm font-medium text-gray-700\">Security:</span>\n                            <Badge className={`${\n                              tool.security === 'Highest' ? 'bg-green-100 text-green-800' :\n                              tool.security === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-red-100 text-red-800'\n                            }`}>\n                              {tool.security}\n                            </Badge>\n                          </div>\n                          <div className=\"flex justify-between items-center mb-2\">\n                            <span className=\"text-sm font-medium text-gray-700\">Accuracy:</span>\n                            <Badge className={`${\n                              tool.accuracy === 'Highest' ? 'bg-green-100 text-green-800' :\n                              tool.accuracy === 'Medium' ? 'bg-yellow-100 text-yellow-800' :\n                              'bg-red-100 text-red-800'\n                            }`}>\n                              {tool.accuracy}\n                            </Badge>\n                          </div>\n                          {tool.warning && (\n                            <p className=\"text-xs text-red-600 mt-2\">\n                              ⚠️ {tool.warning}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            {/* FAQ Section */}\n            <section className=\"mb-12\">\n              <h2 className=\"text-3xl font-bold text-gray-900 mb-8 text-center\">\n                Frequently Asked Questions\n              </h2>\n              \n              <div className=\"space-y-6\">\n                {faqs.map((faq, index) => (\n                  <Card key={index}>\n                    <CardContent className=\"pt-6\">\n                      <h3 className=\"text-lg font-semibold text-gray-900 mb-3\">\n                        {faq.question}\n                      </h3>\n                      <p className=\"text-gray-700\">\n                        {faq.answer}\n                      </p>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            </section>\n\n            {/* Call to Action */}\n            <Card className=\"bg-gradient-to-br from-purple-600 to-pink-600 text-white\">\n              <CardContent className=\"pt-8 text-center\">\n                <h2 className=\"text-2xl font-bold mb-4\">\n                  Ready to Start Advanced Instagram Tracking?\n                </h2>\n                <p className=\"text-lg mb-6 opacity-90\">\n                  Experience the power of comprehensive unfollower analysis with our secure, \n                  privacy-first tracking solution.\n                </p>\n                \n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                  <Link href=\"/unfollowers-tracker\">\n                    <Button size=\"lg\" className=\"bg-white text-purple-600 hover:bg-gray-100 font-bold\">\n                      <Zap className=\"mr-2\" size={20} />\n                      Try Free Unfollower Tracker\n                    </Button>\n                  </Link>\n                  <Link href=\"/how-it-works\">\n                    <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white/10\">\n                      <Download className=\"mr-2\" size={20} />\n                      Learn How It Works\n                    </Button>\n                  </Link>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </main>\n\n        <Footer />\n      </div>\n    </>\n  );\n}","size_bytes":32407},"client/src/components/adsense-ad.tsx":{"content":"import { useEffect } from 'react';\n\ninterface AdSenseAdProps {\n  adSlot?: string;\n  adFormat?: string;\n  className?: string;\n  style?: React.CSSProperties;\n  responsive?: boolean;\n}\n\ndeclare global {\n  interface Window {\n    adsbygoogle: any[];\n  }\n}\n\nexport function AdSenseAd({ \n  adSlot = \"8985801241\", \n  adFormat = \"auto\", \n  className = \"\",\n  style = {},\n  responsive = true \n}: AdSenseAdProps) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      try {\n        if (typeof window !== 'undefined') {\n          window.adsbygoogle = window.adsbygoogle || [];\n          // Only push if the ad hasn't been initialized yet\n          if (window.adsbygoogle) {\n            window.adsbygoogle.push({});\n          }\n        }\n      } catch (error: any) {\n        // Silently handle AdSense initialization errors to avoid console spam\n        if (error?.message && !error.message.includes('already have ads')) {\n          console.warn('AdSense load issue:', error);\n        }\n      }\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <div className={`adsense-container w-full ${className}`} style={style}>\n      <ins \n        className=\"adsbygoogle\"\n        style={{ \n          display: 'block',\n          width: '100%',\n          textAlign: 'center',\n          minHeight: '100px'\n        }}\n        data-ad-client=\"ca-pub-6786049558167016\"\n        data-ad-slot={adSlot}\n        data-ad-format={adFormat}\n        data-full-width-responsive={responsive.toString()}\n        data-testid=\"adsense-ad\"\n      />\n    </div>\n  );\n}\n\n// Component for in-article ads with better mobile spacing\nexport function InArticleAd({ className = \"\" }: { className?: string }) {\n  return (\n    <div className={`my-6 sm:my-8 flex justify-center ${className}`}>\n      <div className=\"w-full max-w-4xl px-4\">\n        <div className=\"text-xs text-gray-500 text-center mb-2\">Advertisement</div>\n        <AdSenseAd \n          adSlot=\"8985801241\"\n          adFormat=\"auto\"\n          className=\"w-full\"\n          style={{ \n            minHeight: '250px',\n            maxHeight: '300px'\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\n// Component for banner ads optimized for mobile\nexport function BannerAd({ className = \"\" }: { className?: string }) {\n  return (\n    <div className={`py-3 sm:py-4 flex justify-center ${className}`}>\n      <div className=\"w-full max-w-7xl px-4\">\n        <AdSenseAd \n          adSlot=\"8985801241\"\n          adFormat=\"auto\"\n          className=\"w-full\"\n          style={{ \n            minHeight: '80px',\n            maxHeight: '120px'\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\n// Component for sidebar ads with responsive behavior\nexport function SidebarAd({ className = \"\" }: { className?: string }) {\n  return (\n    <div className={`hidden lg:block ${className}`}>\n      <AdSenseAd \n        adSlot=\"8985801241\"\n        adFormat=\"rectangle\"\n        className=\"w-full\"\n        style={{ minHeight: '250px', maxWidth: '300px' }}\n      />\n    </div>\n  );\n}","size_bytes":3014}},"version":1}